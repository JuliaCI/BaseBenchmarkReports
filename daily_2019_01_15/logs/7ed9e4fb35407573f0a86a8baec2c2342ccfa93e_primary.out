cset: moving following pidspec: 3548
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340191182 seconds)
loading group "string"... done (took 0.550324804 seconds)
loading group "linalg"... done (took 7.540019485 seconds)
loading group "parallel"... done (took 0.173554701 seconds)
loading group "find"... done (took 1.180659282 seconds)
loading group "tuple"... done (took 2.103969936 seconds)
loading group "dates"... done (took 1.333196619 seconds)
loading group "micro"... done (took 0.247495923 seconds)
loading group "io"... done (took 0.972405435 seconds)
loading group "scalar"... done (took 42.117888334 seconds)
loading group "sparse"... done (took 13.567560067 seconds)
loading group "broadcast"... done (took 1.053365205 seconds)
loading group "union"... done (took 14.545950911 seconds)
loading group "simd"... done (took 5.010664671 seconds)
loading group "random"... done (took 9.804620189 seconds)
loading group "problem"... done (took 2.01534322 seconds)
loading group "array"... done (took 22.585239662 seconds)
loading group "misc"... done (took 2.032727203 seconds)
loading group "sort"... done (took 3.45020277 seconds)
loading group "collection"... done (took 19.718214347 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576987055 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157014831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148957099 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148752559 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.198148987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144070789 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157982866 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097516699 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.947803513 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171386222 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153487945 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52330152 seconds)
done (took 5.158741006 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217853853 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094730766 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103467286 seconds)
  done (took 0.875239963 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077315228 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145789373 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094527487 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07830688 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095466062 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077607193 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095061332 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0778373 seconds)
  done (took 1.346200385 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086481066 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096722 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082641446 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095383057 seconds)
  done (took 1.043307165 seconds)
done (took 4.248016127 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724462409 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.269694488 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204349111 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462341158 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197931466 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217034599 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682208256 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.400005677 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256727041 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099998904 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134981858 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393557014 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137053839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694448866 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089188086 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123545161 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187751847 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454994393 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081986116 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109922348 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116619807 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141200345 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130047959 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08991401 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18624818 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082234992 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192435822 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10944019 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080280224 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273511286 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200322112 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697238863 seconds)
  done (took 10.94048875 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11146719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133754473 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097098599 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138191163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133779601 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097893287 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084692914 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095070755 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121650995 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174853615 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114972871 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136584684 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094300002 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081384533 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115674582 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244307534 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120910279 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098396168 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099965992 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087289029 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136500593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111074098 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107347536 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093015967 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165728156 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221379782 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111880472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124807084 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096394499 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111760554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142441745 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141402761 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093054807 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080401905 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172072313 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123123715 seconds)
  done (took 5.111044778 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097171002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189423427 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123606842 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169457364 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08184196 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142922445 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094808921 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112779003 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256459428 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107192552 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488956262 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142262177 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.110501402 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11767566 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098439389 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082453241 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097450853 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.652378625 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124222466 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149039112 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114169767 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102369429 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084558719 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.724277321 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096741324 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079560626 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096733921 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066939956 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125905223 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160714299 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080825946 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208032179 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120888112 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081898417 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135043129 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214254325 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11024765 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13472357 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095791848 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078974415 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174461606 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10390758 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080195165 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120104597 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134419994 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133190941 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09659211 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080758948 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196394095 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095986908 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096298383 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94249191 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178351907 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089316361 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095638211 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288545639 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116223531 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09660638 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078281308 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282508718 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186830231 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094827541 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080550641 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097234754 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079549221 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098458408 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.744420402 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100235053 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.722179072 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084239217 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106303318 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081942626 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095843807 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103203346 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086656931 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114766211 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079475539 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09823865 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078464605 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096601416 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080902845 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107990863 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213127372 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09766715 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079063633 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094900758 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076597916 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116359038 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126416994 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082982114 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094873861 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12912779 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09772151 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081558067 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133523776 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081209042 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107723716 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09849311 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141406565 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082201399 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.150443179 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077960211 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123566393 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099229325 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113248047 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109954569 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097967669 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16740925 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078221296 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094910743 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079750652 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09636332 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080585617 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099065582 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108283862 seconds)
  done (took 23.501311342 seconds)
done (took 41.32987383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325053095 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10234623 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101659221 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101972092 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100903728 seconds)
  done (took 1.489825242 seconds)
done (took 2.22055745 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283873943 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172881665 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094764963 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164103218 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092220223 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162187749 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157099815 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093441911 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218198064 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092816618 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159085848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075804819 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093306523 seconds)
  done (took 2.615627563 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093703516 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113456267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083066011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10885433 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075880866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109279669 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092392451 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115667478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108285578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085245537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091458786 seconds)
  done (took 1.804536248 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094264046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110855811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082453686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109164583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076946096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109201971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09337984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11471095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108154813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085822971 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092668001 seconds)
  done (took 1.803799208 seconds)
done (took 6.944006236 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08993199 seconds)
  done (took 0.81327076 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.924984151 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.595354362 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113420316 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15156766 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317635688 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17441243 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.471563545 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124788214 seconds)
  done (took 10.804857061 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.142852911 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081241337 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103045381 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082860243 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102845278 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085842713 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099891189 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098410555 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086401876 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099308926 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082771027 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098529249 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099752769 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085679659 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097723535 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081774966 seconds)
  done (took 2.320513289 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118467769 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116293634 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105453357 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106490537 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085756715 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103336312 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104960691 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088267138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101077514 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102420264 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09009654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104244132 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102977191 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079346797 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105119383 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106932606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085394804 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105256794 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104862534 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089535634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105325406 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094651057 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085849196 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105042255 seconds)
  done (took 3.233999689 seconds)
done (took 17.900986125 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157669073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108039005 seconds)
  done (took 0.99737861 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094276329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111402793 seconds)
  done (took 0.941298992 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096676917 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095078653 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12053275 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107585714 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079275478 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095239516 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117426774 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079996829 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094676694 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079621289 seconds)
  done (took 1.705841864 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082101488 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108940358 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100353236 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093950616 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104756376 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093951654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088221703 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097638267 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108355629 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077130797 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100881788 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113243704 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086189276 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115992242 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104108864 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082508546 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100967735 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097714449 seconds)
  done (took 2.497799918 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07919647 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096219106 seconds)
  done (took 0.915250448 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081149611 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093305297 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080458457 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095931213 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094055329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077465247 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09334929 seconds)
  done (took 1.353504558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.434357873 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13528403 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257775383 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084241414 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118841706 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298979394 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096021813 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084390149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101364876 seconds)
  done (took 2.40669635 seconds)
done (took 11.554312056 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092957013 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113963829 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11192959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.452408736 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106351397 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096911185 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147604144 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247587677 seconds)
done (took 2.11648656 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142518793 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.564758683 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422422305 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228575339 seconds)
  done (took 1.963318561 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401351977 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098055505 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082502102 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080206437 seconds)
  done (took 1.412392121 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07945526 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09939902 seconds)
  done (took 0.931282924 seconds)
done (took 5.203302836 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07971906 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095814576 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078172577 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132398991 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080141483 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094778399 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078577415 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097414775 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097906904 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080111247 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096304427 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079341827 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09384169 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077092767 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096632147 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077154445 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09361201 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077582017 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095723563 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078617837 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09670222 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077933756 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093895338 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077680156 seconds)
  done (took 2.91326366 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100005078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09763243 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103134508 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084343764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10153102 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085265196 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102558268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096512571 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084766658 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098115044 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102339394 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084017185 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099881879 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084444909 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099229576 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100675032 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085738993 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096600936 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082298195 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100073962 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101287235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080460406 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100297221 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102159655 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084039572 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100751656 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082425633 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097074687 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102450186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083988429 seconds)
  done (took 3.58153985 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085082251 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094127759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078065517 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100999572 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077271005 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095974328 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076980963 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09485879 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078533471 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094165389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078605132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094493822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078378338 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095635199 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077848147 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098217659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111321556 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07824925 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094119998 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078453545 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097897692 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077296155 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094148107 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076656183 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094283254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077081626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094486014 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077652591 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095183683 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077204115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097543623 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08093407 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094627856 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084046371 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097945483 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077312773 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097562888 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077070147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094848463 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093929668 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077664652 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09396315 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077814875 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101534477 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077955777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09697733 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077746643 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096355336 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07871835 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098006558 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07712609 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094245217 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07926246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095551339 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081706115 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094551001 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096576832 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077754205 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096779648 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077024871 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094494484 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077246678 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096888837 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079144377 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109933156 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084681546 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094458526 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080632596 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095075958 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079888959 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096284751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108069666 seconds)
  done (took 7.123104748 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.130097697 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125221169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07995172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097325709 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075598821 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094743607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081795244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095144664 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097425307 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085396106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095487724 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079984711 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096720579 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093177164 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095374296 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097220464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084117409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093568297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077806472 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098614987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078689813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099032432 seconds)
  done (took 2.81256919 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206637506 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10388079 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142106746 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106581057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082587261 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105530214 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102199762 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08643894 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10249812 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084173779 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099453374 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101858585 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083380683 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100614458 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.209740835 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084127457 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103619148 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084089022 seconds)
  done (took 2.74889436 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092937581 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097567476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098547114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098044075 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09845043 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082975096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103377415 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106872326 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082373148 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09865108 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090709265 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099452969 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100840061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081028818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099819571 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081623251 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099776993 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08103505 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107962665 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103311389 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086913511 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107135219 seconds)
  done (took 2.86292425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096570323 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10025472 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11753585 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084002144 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095440441 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07993416 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104782065 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081142205 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106843127 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099303353 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080608717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096434319 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088849601 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098580843 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103660929 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080938164 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099929474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081921357 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100364252 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076428814 seconds)
  done (took 2.637399705 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1022626 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098992316 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098971204 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09084258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099833156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082184788 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109196832 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098588956 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082268005 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123881205 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099102653 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082756802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109350456 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104942044 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09928943 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091120857 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107757229 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107809459 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082592521 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099520988 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123578012 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081648163 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108107041 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098718736 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082020723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099149794 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099166286 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087569115 seconds)
  done (took 3.518599288 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080957718 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098438113 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078972326 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095487455 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077575603 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095846943 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078693108 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09788071 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080826783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095478579 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080753119 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097633778 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0807447 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098088323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081040886 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098344394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081092056 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095661691 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078967313 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095846532 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080929089 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098029173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081655968 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095587192 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079058405 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098501052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0788613 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094877997 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081300575 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095187918 seconds)
  done (took 3.421369567 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091065768 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105524825 seconds)
  done (took 0.963989977 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078077559 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113853019 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078191253 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102373077 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08531607 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099214854 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106062465 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085799397 seconds)
  done (took 1.516504383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0955637 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109254307 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083117891 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112527826 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10881048 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097869456 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169526724 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099751626 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087374071 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097156261 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112889933 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080735671 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105753426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081091601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104724269 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087242621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095755418 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10486262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084891577 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097604298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085763237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10825712 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083585563 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094592173 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100908082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091087804 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111079147 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082733059 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102560649 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106555478 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087021045 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093042862 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081570158 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099385924 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080496169 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108078045 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114856643 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084949429 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108708197 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10064338 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092815038 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094051461 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086144573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104286528 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108438376 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08173011 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099999738 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076626949 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097189273 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083771826 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094414935 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081045681 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094298425 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088321257 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102603673 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110139636 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080903025 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100112369 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085097599 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102734494 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088501301 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10026803 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102175886 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081435725 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109207356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086575038 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109900364 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094286379 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075481218 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097306621 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091584794 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122595128 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106379302 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083139242 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100192533 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080217155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102186146 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083562135 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105366453 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105115841 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081760117 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106985406 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089742291 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098361037 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100781172 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090729266 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097286248 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083813456 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096799874 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116071794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080647869 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097224521 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079185743 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109624604 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084853459 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098504825 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080003194 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106512739 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093664961 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082916626 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100313114 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082693233 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110912475 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106140806 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088053651 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108954435 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107243585 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081511251 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104055207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079116704 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100942744 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085438666 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106755656 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07627316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102869464 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083889317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101348801 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108866578 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081335971 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098976412 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089903831 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105586733 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09784174 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078154189 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10249153 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082639371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103228808 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090567512 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09832455 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076846879 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094966764 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103507973 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082409336 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103215621 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087985693 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102841504 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076904609 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097852946 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104613634 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091283919 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099020571 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081976941 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106195247 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10140104 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081943534 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.1056104 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084449161 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09885509 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087764758 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101027633 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077311593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10302114 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101511732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080912279 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102670326 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085232884 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101876097 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100176325 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081033109 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105680607 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08333313 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098896896 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080839462 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098609222 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110607238 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084060957 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095544907 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078807011 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107492579 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080010376 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099257979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081133442 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102647847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101580039 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079668459 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099676451 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08395136 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112864132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10485465 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083753552 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105486263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093567767 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099651772 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086186328 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099330887 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101600145 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083900063 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.1085885 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087935767 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105073845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103003481 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079116067 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106483249 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089969837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098820133 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079872205 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098291618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103445708 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088410685 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10427346 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083749857 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097705169 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083170179 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1034906 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103204451 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082404159 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098598269 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08779904 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099270896 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107064442 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083066223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110897243 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085540848 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096036527 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086256489 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098192143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106315676 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078222178 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097751897 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081646339 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101560551 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080560211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102845387 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076271922 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106549713 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107541265 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082140252 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100024764 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083060335 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107197519 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084183347 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104004218 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086235247 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106967764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111082459 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082335156 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103659263 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093925189 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100313583 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09472245 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.0874971 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098399676 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081797382 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099528788 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080787883 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103057157 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109344037 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08970185 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094846496 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084441555 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098465798 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081715145 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096098866 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086735648 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103104536 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101179287 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088827277 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102694521 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083215569 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10418042 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082432087 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101458152 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102434456 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087773851 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101318898 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085161343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099792348 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085313159 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099226497 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080830242 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103059912 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101343751 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082636401 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106761691 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081791231 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100669349 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085813486 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100771603 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101696418 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082679941 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099511848 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086578595 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10126865 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082344428 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102554736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078100248 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107126403 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082100014 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108557999 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100576582 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079347181 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105900703 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084420537 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105688076 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101880894 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084155162 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101687601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082119924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103452016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088769856 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098319406 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110841126 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091946389 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10151444 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085346043 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100387527 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084424259 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099543232 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101847549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083895182 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101257006 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083242629 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104708262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085482859 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101034661 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085233709 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101962466 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100485172 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083218478 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094917227 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082433983 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099924423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082991514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111958256 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101817676 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086027114 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100289683 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083747705 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0991197 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080573544 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108449712 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111080632 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083080309 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107783926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082069082 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10250842 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11183267 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076982956 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099255009 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08134473 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098297746 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090690218 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102443595 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091802179 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101291972 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100841573 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079346185 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102933164 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090966437 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09555149 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081390531 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105754685 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085549493 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100331365 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081982423 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103860796 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102477222 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093162013 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100633822 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083317729 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10191309 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080204359 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09957732 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08232972 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103420734 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102513193 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08110602 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097539712 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082923032 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102196788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084012623 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100642549 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084304471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108126515 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10051528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085924587 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105219881 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077142604 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104076081 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082560151 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101403778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100202156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086429379 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10366086 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08417147 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110400341 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082080277 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101749689 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101035603 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080464319 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101156119 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082991762 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10183068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082602579 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102170752 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091600815 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099013208 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104446869 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08254145 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101021484 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08968507 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102482071 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085873016 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109341218 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104454306 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084492931 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109130186 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087021107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103985551 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102895478 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084904887 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106876815 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082325619 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107707454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082532012 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103176107 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102696012 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080788863 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101174485 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083492818 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09977848 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088229342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102180031 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082193239 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100528273 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080835424 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102714015 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104953265 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091298433 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103069757 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086197211 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096320053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080049049 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102231825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099125604 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084363432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10543841 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090155076 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103293089 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084027097 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100304775 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11029876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089803942 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105507092 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081470688 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105281109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084592619 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103783689 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083413745 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102689976 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103246011 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087776557 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103097683 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082881961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108409219 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086740536 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103162223 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102714567 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08382679 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101153989 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079907315 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102977174 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085240043 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108119721 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085999858 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103501532 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112884738 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083064823 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101435777 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087821371 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101617426 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106572837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079124749 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10323078 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084877576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102904703 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079016403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101249021 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081656044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104848561 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082768952 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097413388 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113035294 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093629965 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105130441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082389988 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101277501 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079214804 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097795013 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10146654 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0860997 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103653638 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094594062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100524211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081897044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097897208 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083815434 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104934245 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106042468 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08039404 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097758251 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082285805 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105160013 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089256599 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100228585 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083883215 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105631533 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104205232 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081648036 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106098377 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081384871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105809235 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116181069 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085474855 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10361141 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08995226 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110946507 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084487696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097726512 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103917279 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086764967 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102136714 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085110684 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103892856 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119363348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087195047 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101167656 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083156383 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10528829 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083809198 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11096069 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085361236 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103378523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107200652 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085535731 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110770398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086600564 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110457268 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10542703 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087625876 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101620011 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084013568 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100908967 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082170055 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104204253 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103411728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089349007 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111204683 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082630996 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114255349 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112748908 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088387092 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099132312 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082895107 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10211309 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079637369 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104033517 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081850868 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101808586 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100876767 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08500799 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103029421 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089629811 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10371358 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08530289 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102726364 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077812771 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105383769 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086619685 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104294199 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099037703 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084243658 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10365489 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08835446 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106480462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084626019 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104007332 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085741785 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104036107 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097194693 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091325478 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101414364 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087207034 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102302214 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084143125 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103195193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088013295 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108458205 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1040701 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087840578 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115163506 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087401827 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100068427 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099921753 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089577623 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101386237 seconds)
  done (took 57.530734612 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146420402 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080107871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098069944 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078980884 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111726721 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098688767 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079862456 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099555734 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081301074 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101637058 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078961221 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097607012 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108876674 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123049299 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093587706 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102652136 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078293298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100771871 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097888852 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081107467 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108260198 seconds)
  done (took 2.86777383 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104013575 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120054291 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115289804 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119214517 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091397145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114650319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114202102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115340361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099730619 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110616474 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119302099 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114384225 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092594485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110769315 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111636791 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093399445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118750893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109304873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116261654 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094721192 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112302491 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114497388 seconds)
  done (took 3.233589278 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085166685 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10174941 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085575627 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097492248 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083358411 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09842921 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087944901 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100038131 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086623864 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101719756 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082245988 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102202309 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104155328 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078500079 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102208033 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082218601 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152387389 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106342083 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083876785 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104595698 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079246632 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10540966 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098154818 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08061945 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101669717 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08871836 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103028556 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081652916 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103152142 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082789226 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102845004 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081756776 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103961032 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10303171 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082679568 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10236605 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083658052 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103291034 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080050075 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100612509 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08492205 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098316897 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084592919 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104685681 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082768343 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100551099 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084639943 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103685655 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097255003 seconds)
  done (took 5.460177793 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104165209 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161327795 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08674144 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142608791 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12061013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113216276 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08827133 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142129443 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101682949 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.0825185 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122384036 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119514225 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103075783 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090356157 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110247149 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102825495 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085644723 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102404838 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107473372 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083170725 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108043121 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090712522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119506286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11850518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108710036 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083952888 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102275082 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10906166 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097572736 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108735101 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108877234 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092468002 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12119638 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108357832 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083720378 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106288467 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121588454 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104257189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087972177 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100168503 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086728703 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108390717 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109800832 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102819384 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104933425 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109244713 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085557865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100824745 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117736896 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087850106 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112895845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119579305 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108786469 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085328035 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108263031 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12062312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084554046 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101767423 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087894713 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11756628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101348111 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088652138 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119208146 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105460041 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.1120537 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100368978 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109515036 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107733201 seconds)
  done (took 8.123284344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09337981 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110131488 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120429325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120203529 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091585252 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110122541 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110435318 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09118625 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110967852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116528339 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110567052 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132515274 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086911454 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113739624 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109916304 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091643865 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111080532 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110513858 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090592688 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111092473 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111530824 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119342669 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091910431 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119500707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141457746 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105095288 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090001037 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111187539 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119782791 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110677338 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123213123 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091127016 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111133734 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119401838 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123154507 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090287075 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102743931 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109800565 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091911201 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111278037 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105202387 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100910142 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111051527 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10461962 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091063718 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11061302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119540512 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123514715 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114411642 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096583098 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11100968 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121011362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109191992 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091113021 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119674734 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146471525 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121126056 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120024088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110953813 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100490189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120958423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12778543 seconds)
  done (took 7.648505324 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106626784 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115347042 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115981401 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099516064 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082186061 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108381251 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08255025 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101890784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113821294 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09494122 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115701999 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108339362 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0924485 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117058517 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107950169 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111742205 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089223302 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10814854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114541137 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088041407 seconds)
  done (took 2.909738691 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09336435 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123109704 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085827622 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112321642 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107931616 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092717591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107526011 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107613739 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085204118 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107693596 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096783539 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116253811 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105782277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090503293 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11735881 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110465578 seconds)
  done (took 2.500775475 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097081695 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117142981 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119782211 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087244297 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10306342 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081211046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10617881 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100498702 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081104143 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121054028 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085430007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108184022 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104512454 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082962808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100771324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088524903 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100311842 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083025526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10449173 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119517148 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096679098 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103286097 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104984824 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086138496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10535632 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090958052 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105674068 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101959766 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083101765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105706697 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086114481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113088874 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101833496 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08408555 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102557844 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08254921 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103706878 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085603813 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109146509 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104868982 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083400425 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104190537 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084297569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105711415 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080905205 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105687848 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100887661 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091507398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103014544 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085105378 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104443834 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087005343 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106461145 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117602289 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089072101 seconds)
  done (took 6.237412433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099260804 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108249582 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081149234 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103002811 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087372841 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107084977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108272451 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088628385 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106973286 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082958718 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107349253 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090219332 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10689638 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109471036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087634208 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108459703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082138075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105940991 seconds)
  done (took 2.616503718 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091382219 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105118017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092799263 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106350949 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084713302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108335047 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080572321 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104773243 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103436352 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08582951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104871279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087463044 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103668573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087247097 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105277587 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08551469 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107540559 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103451993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084841012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10090269 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088202544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103543702 seconds)
  done (took 2.969817164 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117611123 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123835764 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092663606 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231644748 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103069136 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131521034 seconds)
  done (took 1.645352942 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109415299 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1197748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106040788 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107728123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115638898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086253152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10770362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106965227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117880786 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1003253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10782058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116616317 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118520476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095992627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113905382 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114879124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107039438 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087631151 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105880035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128627495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087433055 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118424033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10846207 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087325267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108097163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116220397 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118714631 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121441324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087632399 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116365302 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113950852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087585267 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118058872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122101095 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109531723 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098002978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106938571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128734876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115309707 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096637934 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108974159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115922604 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098221661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113879215 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118627789 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107590042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093276963 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107528439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107432275 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134307648 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094194347 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117203555 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115391274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119248574 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097833606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134217871 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122841113 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117003114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114583572 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122020492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117757586 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093287879 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115815973 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122127272 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116008351 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096273892 seconds)
  done (took 8.112925568 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102525504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12613635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107970725 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122895267 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096516679 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10679819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107910726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087197539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107371511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107534584 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151697115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087820332 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11808534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11772383 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087651709 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108402918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107592454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117524947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087136908 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134527734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107108192 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118022162 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118754201 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096190191 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122853958 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114240598 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108543901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087998543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107637536 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108437796 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093156519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107686419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116875304 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087083363 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117533163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108273943 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088077012 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114207395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107390202 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114946038 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096945242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127941879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107118965 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107203978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102013721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108615315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107747703 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087392787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108434371 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107396843 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10192405 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122009549 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12215082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117155168 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108590275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088433535 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108534025 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108757927 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088011102 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114086583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116401828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087116401 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135374017 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108073188 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108227663 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118891005 seconds)
  done (took 8.008090548 seconds)
done (took 154.714453611 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213263499 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198134871 seconds)
  done (took 1.261433848 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087871543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136564658 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095813647 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168076799 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085258684 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13907657 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138034975 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097548029 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106875473 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086313981 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106917227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087272115 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170549231 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085924667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105700878 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107450681 seconds)
  done (took 2.662047984 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113688664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254992125 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122068895 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105137844 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089817943 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109778892 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084209641 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110899842 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089522179 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104573375 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088696174 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107217302 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08574352 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106963213 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.090083718 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108441128 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105237603 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08815685 seconds)
  done (took 2.82302627 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112484351 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147010506 seconds)
  done (took 1.122464695 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242852924 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161870833 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227911655 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.47095933 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.272353736 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.357210248 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197912373 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208858676 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163164143 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207993382 seconds)
  done (took 3.366996872 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119104682 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180664148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31662008 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155467993 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107364575 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126734762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155336955 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130577576 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.125701778 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101557692 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123276308 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118015951 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137744257 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094917593 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114648175 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118308391 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120622863 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113248686 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115460385 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095537322 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137058118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084803603 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116504775 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112996241 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09967786 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117849254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105519315 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084967454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116102234 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093753422 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113236979 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124772286 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118348426 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155158587 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12295964 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156475 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118365304 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091825096 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114392995 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090852741 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119548941 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117758054 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126228523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096839245 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106182331 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098063584 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105789679 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084806925 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114949326 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118809851 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094249526 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114080908 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154116106 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119943241 seconds)
  done (took 7.381425556 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.78367266 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156015642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090933246 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.87931155 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136120754 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103759656 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.773622812 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111562976 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254314148 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754907935 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132625995 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12042689 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206112585 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257408173 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925197681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286646639 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640853113 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1272321 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151452582 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154205315 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117569215 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115352539 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13071228 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429776014 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116813446 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090672648 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117697744 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118208937 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159955201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12437642 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092343483 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199560462 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247238626 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204621663 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094559382 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.1116607 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089972041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190527184 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266452339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193956189 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181456144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108604926 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089865784 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122002617 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133647609 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086260681 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184465501 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17708832 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169639618 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115358343 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119150198 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09762443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120684665 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164159884 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122969686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308830683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315843924 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090733293 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121494531 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1258475 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239323304 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122381859 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224334503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138467145 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21324405 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090072619 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778474997 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170288719 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111192597 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09510312 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119349646 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116570984 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099065018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16667155 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406920113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123444644 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113687294 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090170275 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228282187 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101690932 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111804093 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161132321 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117121902 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12106651 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102212405 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122372618 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169646687 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250986539 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100528606 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118928332 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115199321 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103054063 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116462947 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210650067 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2193796 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163185556 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230302023 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099510695 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185377457 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168749946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118964549 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172151058 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119701411 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10146494 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122185262 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215606707 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145639543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123072573 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095276193 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118537569 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149649229 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126952965 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096895359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193371553 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455943856 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166739484 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109230758 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127263259 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097955888 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183633156 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096799228 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258560522 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122507485 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170127664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119362363 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087489905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120273994 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162890221 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121587556 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12210886 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099753263 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119697527 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235676647 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216818884 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121455824 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222363082 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183357577 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118626637 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171647872 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120566682 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168420996 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119939346 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120458601 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094632124 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772335779 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123619771 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098667318 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115527405 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187068576 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110836991 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103473711 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12381575 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086285866 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816180921 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126773022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121881046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102463679 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116916701 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119823478 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095666473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11590235 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161612531 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22979223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119466056 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119426286 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102425197 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161633732 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116766247 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124258328 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125468709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103472545 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121941881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115357866 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103556548 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191540842 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163958815 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219242006 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573397293 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112809779 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125017267 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228226958 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090174573 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287652318 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119822596 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2012878 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186479413 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098877236 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319341639 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186533108 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187471963 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104824306 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194613112 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087743132 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118061556 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165496544 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112153932 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09626182 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184278818 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102960171 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12296862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963647643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090745421 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248278885 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08702853 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172079638 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117106597 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120161258 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285502302 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090551396 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128151557 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16394284 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11516351 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123436153 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.844270879 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125360211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122229916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096517551 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221286424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164249661 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120378827 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119272776 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097015043 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183705821 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211977317 seconds)
  done (took 44.000084741 seconds)
done (took 63.473844605 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277673762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217017516 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267923108 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169785923 seconds)
  done (took 1.901081913 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171084162 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14968096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121004763 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10674522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151503286 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084984794 seconds)
  done (took 1.675512254 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360418679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275867822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244173652 seconds)
  done (took 1.775952992 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.292430949 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246894149 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474475223 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325218675 seconds)
  done (took 2.355289792 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209887133 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13351566 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.114240251 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103611144 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197236612 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245417479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142620942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201603982 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098707207 seconds)
  done (took 2.386044309 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196215237 seconds)
done (took 11.185774229 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.167120474 seconds)
    (2/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.232475893 seconds)
    (3/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.292373726 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.231772309 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.20130312 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152959881 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125417748 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119885321 seconds)
    (9/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140662604 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098708725 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.215003691 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095382952 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114338657 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111174149 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.143264279 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.242581278 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.151685366 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.136639974 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122240048 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.243309601 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156013913 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.217647166 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.252845671 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.200443668 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.250747515 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126266523 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.17208318 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113433563 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109291327 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085463731 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120498955 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215416009 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117452682 seconds)
    (34/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075314536 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.229283668 seconds)
    (36/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094957687 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113859652 seconds)
    (38/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137377061 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09197595 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177274953 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196041764 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075918298 seconds)
    (43/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.180570683 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092582268 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.183020928 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118557748 seconds)
    (47/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114517297 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.150932452 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135090614 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09308752 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118663332 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110158232 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212325379 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 0.242298659 seconds)
    (55/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134876743 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176746032 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092643204 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113207138 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067049648 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.197718401 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174579046 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15543754 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135682545 seconds)
    (64/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175076046 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087075611 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111618889 seconds)
    (67/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.121654459 seconds)
    (68/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116811067 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224302711 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177793535 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066233275 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120034036 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.159906581 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090072891 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099671815 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12233604 seconds)
    (77/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.198615836 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094022107 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109068176 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.087140301 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131925067 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10920959 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217584989 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.149809448 seconds)
    (85/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.186281529 seconds)
    (86/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147694549 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06588786 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.196042812 seconds)
    (89/309) benchmarking ("sort", Float64, false)...
    done (took 0.172108768 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.183006589 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120273243 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226128691 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122422429 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162110137 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117909719 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114807073 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115702701 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121194987 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114539539 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110421417 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085689224 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118642475 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066593171 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109520002 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.152570687 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109093447 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116602525 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086414464 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118369338 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065840768 seconds)
    (111/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136243222 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.12559399 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090970452 seconds)
    (114/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139535716 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137317466 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125430372 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093912157 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125273868 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099525574 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115735569 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.335644819 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.193447603 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193836439 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140729397 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136164983 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113488777 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.150557836 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067143594 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.190081853 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.181802023 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119863535 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067199168 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06594211 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134802439 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.149677813 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096300809 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065479126 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.182423695 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114259164 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092652825 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108959848 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144587469 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099917859 seconds)
    (144/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120141421 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085757922 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116573477 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092811965 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194690446 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179103739 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085681233 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117343553 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076861333 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143442543 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088453277 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118976074 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096284578 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090081219 seconds)
    (158/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076426223 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117437644 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066558917 seconds)
    (161/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150712227 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065419741 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109646158 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 0.150314162 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090410882 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086923971 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115965098 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.124262103 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21483276 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112089579 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085447786 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130788858 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066928984 seconds)
    (174/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117683155 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133911916 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.193436835 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092202619 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12145295 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091943964 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107978969 seconds)
    (181/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091462164 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087722506 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08961203 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077260825 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124927786 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093167139 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075910846 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109752312 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.123380022 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.090316852 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095883304 seconds)
    (192/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109896623 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22401616 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06679193 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114613567 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098098252 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112548245 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172245169 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115279939 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222369958 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111554017 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066243106 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109625288 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0667545 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096374576 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.090574081 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066430354 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178361775 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097518103 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114027838 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108768045 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085465223 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 0.188410224 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065746668 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111636316 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119081819 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093810002 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082899482 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152421571 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120842216 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112279204 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119573027 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197207303 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093138026 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092355655 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085195911 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091820915 seconds)
    (228/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09445313 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.182021472 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092683552 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.108203736 seconds)
    (232/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066297934 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117166859 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092981325 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111670904 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163832122 seconds)
    (237/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092224516 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066802809 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066535232 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135353085 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066929932 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155471235 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091862193 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208110307 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06827363 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193405953 seconds)
    (247/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067630436 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114154744 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11511828 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.116033349 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.097672813 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216771272 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119578476 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113502611 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092170362 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066487619 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.173696417 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132307261 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085988702 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067808979 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134915564 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191129544 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066436617 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117910169 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089591192 seconds)
    (266/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093074725 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086539974 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114795956 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086988192 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121241899 seconds)
    (271/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067830771 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110125923 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097456179 seconds)
    (274/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091485776 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078411007 seconds)
    (276/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.0673275 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109895956 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08638744 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109002924 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07830435 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112441279 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136212773 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107100538 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182782446 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094464968 seconds)
    (286/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113059662 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085145507 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116593201 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085455444 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118068815 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085804747 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110663751 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093103835 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091652273 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067102034 seconds)
    (296/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067589128 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.1354873 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069515519 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153412079 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144047393 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08779074 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11961048 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068345939 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116716316 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067812814 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110686606 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087077091 seconds)
    (308/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068150024 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158129604 seconds)
  done (took 39.811329266 seconds)
done (took 40.711025311 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100082379 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146066143 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096554615 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.1355164 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123965732 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091912979 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118983798 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097896076 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123381215 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125374761 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09734754 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093925571 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096071329 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120296748 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096986946 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139471372 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123960131 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093682101 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118678985 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085628984 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119250796 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086554865 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112203665 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070179593 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122981166 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094906318 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116238103 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120967877 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086462166 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111031068 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090073267 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118190167 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086319234 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125385504 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093594127 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119482322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098082443 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120296774 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11494582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086731225 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121772203 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087216752 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119676212 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094526622 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117223367 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092189642 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119111295 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099864168 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138515455 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116675386 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09481662 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121512536 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095782601 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117811778 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090904445 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118771405 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0917985 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139506419 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119636646 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091874137 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118764892 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095282615 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117017112 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095264015 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119296986 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121309508 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098426104 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116896505 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096827695 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116011789 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087128005 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119378723 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090660188 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11044357 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095974638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121939249 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109689258 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093239276 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118571361 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092151382 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110404502 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089824807 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112375877 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093239162 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112926715 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06966534 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114361538 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092862548 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1099066 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095572311 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117274331 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093382559 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113308524 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098538722 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111207062 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092204857 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111190297 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087050291 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113331824 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090940974 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111366642 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09071584 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119603513 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08859586 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11781885 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122762544 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087036495 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11699835 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086045848 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11067015 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101603173 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12110345 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087641881 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116523026 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086064967 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118628001 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08642868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110732005 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086794098 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111094123 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092303684 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110765897 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113428026 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09496736 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126246775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086947457 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114919368 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089121 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110975906 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092655996 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110943312 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087103656 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114048832 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077768543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11390267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086463083 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119192691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089250488 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120833692 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08875239 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120638579 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092678776 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117446777 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092618048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110907982 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074737371 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116473751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090612187 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113940124 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087900509 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113078018 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087240668 seconds)
done (took 16.963158159 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087441793 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185430939 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151874495 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143342543 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107864316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111904841 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122149437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118974113 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114106525 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143686683 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111052791 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132294548 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149498014 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087046884 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11374039 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090945564 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113264346 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103373449 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146518981 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133040816 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166015476 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087025296 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148282114 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135214929 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121457382 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114319895 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112256434 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091788366 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115447902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103303125 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133304257 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114670744 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087754314 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134751794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105250518 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120164674 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087491651 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11907612 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087236508 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111485284 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141575909 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133859426 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092626798 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117265014 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090973792 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114913179 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089359366 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121643735 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098060906 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115667626 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127105693 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156490948 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091518737 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122624758 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087558271 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122737132 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122890925 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090622035 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112649726 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089863647 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111871578 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09018931 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127081796 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143036795 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092292713 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122868843 seconds)
  done (took 8.641825503 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104849633 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139435434 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10560914 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130665119 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111396811 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088040716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113156692 seconds)
  done (took 1.759860065 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088045603 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134558384 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128365588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13658774 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132606162 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109436058 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123146389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087998852 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131627497 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08946701 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133073774 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152758426 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090201141 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120926247 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137462321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087670441 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138231954 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089114342 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117181211 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1121354 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11596332 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135074988 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090142537 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113766189 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102577583 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114240207 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162671179 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09391815 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115337254 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091537967 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112316106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166797703 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102820193 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128238013 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08929224 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1278791 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129015945 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086842284 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130328957 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093712709 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128214889 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089702295 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115082349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087268412 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117755328 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124813685 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090830366 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115032225 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091471605 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13447346 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089835861 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127987811 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088619527 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117945812 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091019434 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120738476 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124064783 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090881044 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134461421 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089896604 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133404901 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106251209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127701934 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13073686 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090439496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128799808 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102704746 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117333215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090277738 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117843517 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131635532 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086263424 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115311612 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099821508 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115749718 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112150816 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138114863 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090492499 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124159039 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11439178 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089128373 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114335592 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111866582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11878221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089409322 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118877634 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092187348 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112729995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088629526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118349328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087531511 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115077598 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092274143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114795532 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116940001 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106511141 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116207179 seconds)
  done (took 11.859534171 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089449745 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115655476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091579458 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114942202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089796371 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115941495 seconds)
  done (took 1.592691572 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113755387 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119096483 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103845125 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120575227 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157269916 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104729105 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129269651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124085144 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108814045 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127843201 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130526224 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105022507 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136628643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121807663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104071315 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121049321 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130397393 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099721762 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128488929 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096888584 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13862377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121904367 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096952215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133337079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118624462 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096758222 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126851546 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103007546 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128055702 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124206003 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096425101 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119110747 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097867604 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123803079 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130455006 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096954793 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120928873 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119749452 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101299109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119100349 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105880327 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122062729 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127801494 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094834391 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124745163 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122436808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094811535 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125472975 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104179 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11940952 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120781365 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096003485 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119302472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094997464 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121532849 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124137423 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093937088 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130181719 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096414228 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121452133 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118283147 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093135908 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124947809 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11826107 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104995382 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12054196 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096701736 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122178834 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122565819 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095366373 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120280493 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092756438 seconds)
  done (took 9.266194493 seconds)
done (took 34.080273812 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694377469 seconds)
  done (took 1.667765603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.711139442 seconds)
  done (took 1.686945062 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.99608819 seconds)
  done (took 17.971073845 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504910362 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584666204 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819955825 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180422241 seconds)
  done (took 3.063421803 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.95563387 seconds)
  done (took 1.949574418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297146608 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259753992 seconds)
  done (took 1.536110018 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770185557 seconds)
  done (took 1.756456097 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353382136 seconds)
  done (took 2.33337423 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333044762 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186501269 seconds)
  done (took 1.507138041 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549606259 seconds)
  done (took 1.540084835 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.787558092 seconds)
  done (took 7.781187158 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259807107 seconds)
  done (took 1.265957325 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29987216 seconds)
  done (took 1.296147898 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.522147931 seconds)
  done (took 4.519539487 seconds)
done (took 50.861839108 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098535306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12719958 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102153561 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125092101 seconds)
  done (took 1.442911019 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100496893 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12119223 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10045914 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120733721 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126692747 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096563865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124204623 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100937736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120884195 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096630246 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121855479 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119911486 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098504531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123394375 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093758103 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124238844 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100598286 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120783197 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124067191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097493635 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119746856 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098237357 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125525624 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093622788 seconds)
  done (took 3.670440759 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099601862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119605504 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096148707 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118787085 seconds)
  done (took 1.439752545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10010111 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142677455 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13878503 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099638802 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143615362 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13567865 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092303222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118353278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094376901 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126066456 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090360203 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15019737 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137995475 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099793746 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127401062 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088788414 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117482385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137203673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100279953 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126757726 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093890708 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125391349 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091139867 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140751829 seconds)
  done (took 3.820586875 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157701949 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150755609 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140467598 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095418623 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156954371 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143109935 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088067928 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141480645 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088889166 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13129037 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119003899 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133331452 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128937888 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088834094 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114516599 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087733929 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129009938 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132208574 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091504547 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146117701 seconds)
  done (took 3.473997349 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097872549 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118120986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08853372 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116379315 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099269928 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121539158 seconds)
  done (took 1.649841235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090981363 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116198643 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090222892 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114465554 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094220325 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116382497 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088525829 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115523348 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089907572 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116095377 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089049473 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113971715 seconds)
  done (took 2.244279802 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457635109 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09212883 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120695354 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112241679 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096144493 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115369979 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103595086 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118951038 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140745237 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088783915 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115885506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091219457 seconds)
  done (took 2.660909508 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239453662 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125309719 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293359547 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192883203 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159874465 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173370281 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152536767 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166229411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226270368 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159081651 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210932583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2222312 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126136827 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21897915 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112433037 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145612293 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228145099 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219957449 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156667547 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233348959 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203402226 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165355415 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178856978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152651083 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139435592 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16984504 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121643481 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104074127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23796901 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180022356 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218273264 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164002884 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147678051 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218314565 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249460145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224933835 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1888707 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136350125 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146222838 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164049472 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267762704 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136136448 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237758883 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159844003 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104666525 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222191307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167546146 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175055456 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150418694 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138454405 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198924829 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241987966 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194752818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138555789 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164099212 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161269282 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16898471 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153670947 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25358591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20040371 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179156998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120562974 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146782259 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191090528 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182761408 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167420324 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208360055 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145568891 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194417178 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187307299 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167242064 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220308989 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183631081 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139865638 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171424059 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176438672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172930267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259354092 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177987009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121981754 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169471988 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151043472 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132115619 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168797038 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124616858 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215481602 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150353514 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135180951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162937283 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162439579 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163013532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199899258 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220418224 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121646505 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11082607 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157012849 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15563712 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190685474 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140968534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161787554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163295542 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130741361 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178038392 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097766686 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205307739 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091230788 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178322429 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186619219 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126975418 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158777704 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153976132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149951045 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179287859 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20031284 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141717396 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133972973 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207726029 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176723744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150978283 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181340698 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227020259 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116837921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149889428 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230136181 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247396795 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113031378 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230176022 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153475616 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107608547 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13533325 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180009297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157648999 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162843295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133758597 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181892329 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239635156 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098793385 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139952128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191382474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133615859 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132415611 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161445802 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148422704 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111710262 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148814013 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152464372 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181730695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179736349 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153057688 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167658578 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152101586 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252291684 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142189899 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150025093 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14977485 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094316898 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.22223869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199455828 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130167599 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205395733 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173826922 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158014638 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171812937 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136102955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17878558 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131101552 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093209373 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220721273 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166759178 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162748296 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197830747 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155643724 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183618687 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183670862 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199960115 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17662911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165096789 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158766127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111586093 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159262707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16677796 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124827645 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144735995 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10805339 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157255965 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143217415 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134382083 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200723863 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199977143 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122715762 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159200713 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151078015 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181724541 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129659554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180018481 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177192159 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146517822 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224767087 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193728506 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188557142 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142892753 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23416163 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094362567 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125471513 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142896834 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172738368 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106894487 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136933897 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168742066 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181193925 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213458866 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17702048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164873239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177879161 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19266358 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122606441 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141311025 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211751877 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177125292 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163754037 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139149327 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15358604 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177722318 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157360017 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261301745 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167369051 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177154048 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236541525 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149994229 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104743963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150962701 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186692667 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154160398 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205517544 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120756555 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140457197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162159218 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133139566 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161614988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185479434 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164181029 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218815888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150277156 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187124551 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127770646 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166202988 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158762248 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165364647 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081876253 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177855454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231764371 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148635165 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171724033 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19277848 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13092244 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179086256 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213569399 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224533885 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138077074 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158761504 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158972105 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137295981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19955324 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178633013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160170508 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188985907 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157639916 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108552262 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140632298 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151014571 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153219809 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133798112 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148123862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175181429 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112220459 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217970105 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161959948 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15797629 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171515139 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150205193 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117883769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151235299 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243269282 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175684975 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213658282 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150900581 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178753692 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233637682 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098977835 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133013987 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134019744 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178598372 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137047274 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191911351 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147001928 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158052445 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181456827 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19453841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140148347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092409709 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157286776 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172130021 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165586937 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152044819 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159277891 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236506673 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114977091 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132972574 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173250134 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157420478 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147226601 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198066672 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07956749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150775665 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127811572 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105334615 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165834552 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237402665 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137004352 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.161078943 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193417003 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170168511 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164350175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149341922 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121276221 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167692292 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229841245 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186456263 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130906136 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158432051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178314388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196689091 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161647618 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14097494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203680063 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22025399 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.200283685 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144072427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169360357 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168387165 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157247732 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187178427 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136002466 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206712729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135846164 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225904868 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154780228 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142932398 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176506673 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12137461 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14398733 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216991779 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173872697 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108575562 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133848386 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16834408 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20493898 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128171332 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127619076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182180813 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125900661 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190958517 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26116485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134305358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153511195 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119627483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135437167 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156871271 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15972163 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140420996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139913461 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231413522 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135533372 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193190275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230520472 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172238538 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17561499 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14469204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694839685 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130844665 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194128354 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156237098 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206827906 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152914201 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172192761 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157764375 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17039216 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224278957 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160621129 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231500641 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194704829 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176569334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132450975 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160382215 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161788911 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144392666 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154043199 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167733 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161302842 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153336611 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179032797 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170594086 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133799736 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113208678 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226158294 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156819212 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187810612 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180612232 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13847701 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1732675 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188964654 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134427375 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181755094 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2375337 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141825401 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150129143 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105754864 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155293011 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262117642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125150822 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201382041 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175969872 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15926132 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166868384 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148370141 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18867531 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157754246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205981715 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146250806 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159669448 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127618195 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137706408 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130222461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153462039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167517346 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148784259 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157765201 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138984197 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188601003 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124011235 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145103525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156913111 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191448341 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243235535 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110644722 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135816225 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163544995 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150304769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17556636 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177890323 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135939557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108046042 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13791879 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158910134 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112922544 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155625393 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155772551 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165976014 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233269386 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.10857168 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279506054 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139261376 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152495304 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089647733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131383155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149586376 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14614827 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15638432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123207917 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259634965 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145542829 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105855555 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147728866 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126107405 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13573751 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137830806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192378085 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176007916 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144276866 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081331348 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159668067 seconds)
  done (took 81.225572969 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162184248 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131284256 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147487844 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202041671 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176038938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268336446 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210164767 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253617805 seconds)
  done (took 2.639991324 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092892642 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146009527 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152092688 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132730272 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092153172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120090665 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.332156673 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131661021 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090874392 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140252652 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147925555 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117218474 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.511970638 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118331462 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117403192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08324268 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11629054 seconds)
  done (took 3.726284698 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.458083592 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715559747 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.502206078 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097992658 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.109663672 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.132641148 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.684406805 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211252721 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095281685 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485737703 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772937589 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.183352835 seconds)
  done (took 18.539648596 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098615867 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121165287 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108121911 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136135392 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097228697 seconds)
  done (took 1.651210485 seconds)
done (took 129.177272929 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104877586 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403446257 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072008308 seconds)
  done (took 1.601998906 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107815115 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137283644 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109306391 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13549779 seconds)
  done (took 1.591079458 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097294316 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127321574 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108646688 seconds)
  done (took 1.429174243 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322529441 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189979809 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142080081 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105595155 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129623663 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102859073 seconds)
  done (took 1.432435412 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097732498 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127951126 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098158738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129555124 seconds)
  done (took 1.551672972 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094203242 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071201442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101107844 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075121028 seconds)
  done (took 1.436217017 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113882073 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131678971 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104712477 seconds)
  done (took 1.449809751 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130428257 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137451206 seconds)
  done (took 1.368387401 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106036513 seconds)
  done (took 1.201631005 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11774007 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169072095 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189436533 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164620782 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.228744115 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166942073 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140256493 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11457281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130625796 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144818253 seconds)
  done (took 2.666709544 seconds)
done (took 17.585967199 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103830832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518316278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412792193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116841386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.743617231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379862109 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.083728461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146182888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165289263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094097505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138869447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674457575 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038555454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467532639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996448611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.466341185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704039008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092341491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120021121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093531685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.065865752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092027024 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122246775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092178984 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701036231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425061995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095314131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.465612752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092158037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126207288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38224558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122958679 seconds)
  done (took 17.428862345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097561742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173152804 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098692087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137921282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123505743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094502195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124405575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093859891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179649904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122027414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112302052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121437237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126269737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095323729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14208101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092623365 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124962693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093115977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121659871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122035268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111982977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119825233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095400286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122446305 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094234595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136208836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124079613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093032027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121324302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099098532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127173724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095561974 seconds)
  done (took 4.840478991 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14096387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183639108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128863743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127513023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169943578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123763427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201669759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119220695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18308463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124391054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140689085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093403128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157915257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123292406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115532097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122165763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097492367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122035264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092633316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123625324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140849794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094064318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122787268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094469636 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123897398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109252465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12382052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122450852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093386032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12788151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100774536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124231283 seconds)
  done (took 5.179793586 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097004509 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12712485 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109910446 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139285771 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096390687 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126301432 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097976081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125105021 seconds)
  done (took 2.026710548 seconds)
done (took 30.574039894 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112663525 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127637154 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107442349 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13511496 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103708802 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132362865 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091888522 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13401966 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13513496 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102875193 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138512472 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092895445 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123257198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09153147 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136086405 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098226341 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133409089 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103310857 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133601555 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133197247 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094793364 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133411798 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103342611 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134200307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105167635 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134232423 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138558355 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100952474 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124155763 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095461224 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124846123 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104328135 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124251772 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106115801 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127056588 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098044205 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124789102 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096012556 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133614863 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134147822 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099532604 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134098981 seconds)
  done (took 6.038790569 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107868535 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141028484 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104885408 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082230162 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11810896 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081785184 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139140122 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079658968 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110576826 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108972889 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074780073 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106678699 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078924433 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102238415 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076536652 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076543651 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109457303 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075242357 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077213841 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107099615 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079339783 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073582659 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108391363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07845854 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075198983 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110308311 seconds)
  done (took 3.597173178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10040933 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135842982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11191015 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184625657 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161478518 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100287339 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132986669 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141150061 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10875953 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120328518 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096446967 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149505357 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111700483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128783713 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092492821 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137327412 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136210195 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09350511 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128271607 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113487319 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139118799 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103322174 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14278827 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133130788 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092094796 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122993783 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096922768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134994298 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098421857 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131395916 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097139371 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124947637 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123536193 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104198362 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126407473 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094797635 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14249026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102788928 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131132436 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093012487 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126186682 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122169745 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114991111 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168320682 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092671066 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129055973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100537742 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133579727 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12214348 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111570125 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131945757 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091669242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126543212 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091282428 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121723784 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106534331 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123568094 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095996341 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131521411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125497845 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104683099 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125682315 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10922771 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122213514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100779236 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120838695 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092137985 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120894185 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144491486 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094448676 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164122665 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093037933 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123937847 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102071325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130214534 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128099204 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093357033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137948661 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10265486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125758187 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102937621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125410773 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095896139 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140368865 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094908636 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124080891 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094045911 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12962501 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124523481 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093873942 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135295693 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093326258 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124539874 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110299092 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121579103 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094102927 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129098755 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12693464 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091815993 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134590317 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098403889 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122485186 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10288857 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12225225 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095052264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131735626 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12720882 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092168387 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127127443 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099421118 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.131417855 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094146608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125868579 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095312225 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132145275 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099414905 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12809403 seconds)
  done (took 14.85953823 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230528641 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.2159678 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249962545 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.268451008 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135994776 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145886225 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212726718 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125296352 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123369908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160922053 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163942276 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186588867 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171065632 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180853296 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111354513 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121329938 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112135461 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165244192 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214545952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290915611 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142670824 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101809377 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162537237 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161242587 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137323281 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102714849 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140481493 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134429076 seconds)
  done (took 5.800855899 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108762967 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156638732 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098897125 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144863046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149236359 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093109946 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127939214 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094787868 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135366273 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136179819 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092958118 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129457989 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100908666 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132055113 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123096843 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103369131 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132555123 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095900948 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126223926 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096646805 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129399616 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102373164 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126508212 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122187323 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102763468 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121683396 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086406797 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141662869 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12294239 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11514801 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120598818 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100832864 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132934999 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093452401 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122938271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095400865 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125925278 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095807639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124492499 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091966776 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122181574 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078367775 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122507705 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136638393 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099515768 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080214277 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129003136 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128498213 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094769697 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121816233 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096661032 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125745433 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096993283 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131140625 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098493582 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124799712 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097627708 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116528158 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10073775 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125944116 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084896356 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12185379 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098657455 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118402206 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102241087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128261095 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092308115 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126448309 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09867624 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129619101 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095612747 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127142796 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091615174 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126366564 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097553384 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129388282 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127287358 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092503462 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12351267 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093600637 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07570995 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123476987 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074909143 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126587529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092240764 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122933528 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096269629 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129452459 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139476992 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096202209 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132339117 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094950461 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12280292 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096928266 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113370818 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097751838 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13920177 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142727929 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094177232 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122463005 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10734822 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126358129 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093763869 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106695074 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101041653 seconds)
  done (took 12.993050056 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127678504 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154344754 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095480669 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143167284 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156003253 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158228157 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101393669 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131791666 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095590037 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142759334 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094562996 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132442141 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097460831 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137120089 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157787057 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103347637 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125265241 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107937515 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131691396 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.1713112 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112718772 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143020904 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108684979 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124888175 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129054911 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109868573 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161566752 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107880965 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136870786 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143157931 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107741598 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161254039 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143391022 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097960388 seconds)
  done (took 5.504022798 seconds)
done (took 49.90244713 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226510173 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432449211 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.205034511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.105609785 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.212486604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.234496553 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215568863 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203821957 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.697851852 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205108256 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.477365413 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.858492457 seconds)
done (took 60.213185995 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.258873843 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340462956 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474080581 seconds)
  done (took 3.951160941 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.56513803 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154200042 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464496901 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.207190124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.206553985 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494056153 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.884605025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.556297545 seconds)
  done (took 28.104027125 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217931686 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.609309532 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.921888643 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.930039547 seconds)
  done (took 18.817322736 seconds)
done (took 60.832659227 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.205093228 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246319439 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223320669 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186623453 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.323535387 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244986856 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.525339357 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.434982114 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208879078 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.195050393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.242188436 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207492342 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.231178123 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.541370866 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214778596 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208759825 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.297873489 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.663433976 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617036861 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219573593 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.231233782 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.207645081 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.227426786 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211944484 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.2556312 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.211343277 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216270715 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.213488803 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.809405071 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212083664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.295455276 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.737126713 seconds)
  done (took 192.205567124 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207874308 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.267134176 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.35287708 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.25400166 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.652570044 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.409749322 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342259876 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.721489905 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230170318 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.218559567 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.460776697 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.212684026 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.537983707 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.245474001 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21844457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.31760575 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.425875548 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.532937859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.22960415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.478676697 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234616019 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.489291993 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.394826785 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.418256968 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.250086428 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234844169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.225889974 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.217166119 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.419001783 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.3621384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.241909912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.214127885 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.845791855 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071743829 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.227886605 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219267289 seconds)
  done (took 150.523559709 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.507374564 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208880171 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209718654 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209560742 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24313268 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211258908 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801919294 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803466158 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.717664083 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.256260692 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274625417 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47419191 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210501974 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211351336 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307023961 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22362874 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213304347 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.2264332 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253730756 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216482574 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212694643 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802186524 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228896224 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.335586996 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220898036 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21299339 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244796186 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603385739 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212253517 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211602927 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246382309 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537823452 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.262504625 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212681723 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.570697742 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.046054129 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327659449 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214603974 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246100702 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212889156 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486388289 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213976353 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21354907 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216369239 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856583999 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215574006 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806601269 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216700578 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144921755 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212329714 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214310521 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.714230985 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.802877486 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.234082745 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214051913 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216501137 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214485159 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214801688 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24770492 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.716517558 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315914729 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.229846883 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214643018 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217906454 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247170348 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.214713233 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.312865658 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218815465 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.631155024 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292804698 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323742628 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803921274 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21792686 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311327842 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336693984 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.216877901 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.21566348 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215951854 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214365547 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325371991 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217753899 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64115319 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223188209 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218532585 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276063274 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216068407 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313228377 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216174483 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.573786871 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219965841 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215911427 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.949349805 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311125567 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.217413679 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215690567 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216323879 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.643531719 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811123961 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.445996467 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219856155 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.675266654 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220985348 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660626143 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782221302 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.84255056 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217441444 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326996132 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221690552 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218489567 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217100596 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246492096 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.233864195 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275649164 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216207506 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616392439 seconds)
  done (took 348.369329746 seconds)
done (took 693.74193356 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.922297887 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872220434 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.00782169 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.891681177 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.880448023 seconds)
  done (took 10.721854753 seconds)
done (took 11.866844348 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406699033 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407118111 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279017774 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40923264 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246550051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.423449603 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385444089 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236335191 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319802076 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300882981 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319535021 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271571679 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245738883 seconds)
  done (took 18.398852374 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546177786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527906501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281624209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.575683651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258956459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534417716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415929446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427620353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436364831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251550138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232774785 seconds)
  done (took 16.63790765 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546020263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537502683 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286689706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543813936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259608236 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578775438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421759543 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433184608 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432964817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252967102 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233909853 seconds)
  done (took 16.676624742 seconds)
done (took 52.86091317 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228230848 seconds)
  done (took 2.377440116 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264300796 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427149278 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.245568752 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.233410556 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228860504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230912159 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233729762 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229396269 seconds)
  done (took 11.244094568 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22990518 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.226197486 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228981075 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226396978 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228646418 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229971144 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.229128611 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226436246 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230101402 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22664466 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226997604 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226336854 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230006802 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.229257237 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227402145 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.227148953 seconds)
  done (took 20.801190556 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22965809 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22733013 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227030255 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227947012 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22811956 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.228592202 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227801145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227075329 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227303206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22865745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228767055 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227502976 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.228202642 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227525573 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227259796 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.228878012 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227774406 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228024693 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.233317949 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228644149 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229104457 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.228147688 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229064931 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228692574 seconds)
  done (took 30.635156658 seconds)
done (took 66.204992686 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.393413576 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.010580326 seconds)
  done (took 9.557125643 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231204238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230427129 seconds)
  done (took 3.617155057 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232108542 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230255634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232995654 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231755842 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230717375 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23176099 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231365374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231223331 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.232108791 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232251341 seconds)
  done (took 13.469366265 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232584515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231409959 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231318358 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.232479756 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231719414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.229410957 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232474375 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232467876 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232398192 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228656837 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23223508 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.231107083 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231807787 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23079576 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232140156 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229120502 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.230724234 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228943524 seconds)
  done (took 23.315759014 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232060339 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.230962012 seconds)
  done (took 3.616851617 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.229792661 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230963931 seconds)
    (3/7) benchmarking "month"...
    done (took 1.231721945 seconds)
    (4/7) benchmarking "year"...
    done (took 1.22883649 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.230193655 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227690433 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229706205 seconds)
  done (took 9.763883293 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232558515 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.422609387 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505697105 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.839706338 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232061634 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.234598284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.13179892 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232491572 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235520282 seconds)
  done (took 14.220762515 seconds)
done (took 78.710958452 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.248058892 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239089262 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.388899252 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225191753 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.25401387 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.521300201 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.244603797 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.34694617 seconds)
done (took 37.618126447 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.232861121 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.98946837 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.983022296 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.227740729 seconds)
  done (took 11.350069296 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212736824 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.163921027 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204805715 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.234239196 seconds)
  done (took 17.966855771 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256529292 seconds)
    (2/2) benchmarking "read"...
    done (took 1.556940292 seconds)
  done (took 4.963920506 seconds)
done (took 41.661716174 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228405065 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.228341228 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.226991554 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229828556 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229055103 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.225995211 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.226872415 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.229499111 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228923301 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.22919063 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.229991751 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228692614 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226168377 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225547768 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228343675 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227013562 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.226121218 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226949733 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229085664 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226694369 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228915874 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226808241 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227184994 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.228020241 seconds)
  done (took 30.619871346 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22932297 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.227639136 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230476616 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.230002418 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227113029 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229656572 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230090579 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227476043 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229464049 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230263948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229604959 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.228290315 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230160873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227589341 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231478811 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228417346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.23018026 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228227171 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231154015 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227341569 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231657237 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228745889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228979573 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230949543 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228125478 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227999513 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230965967 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229447166 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231590414 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230246975 seconds)
  done (took 38.034525502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237485689 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237919908 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230797401 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231914219 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230995713 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231348872 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232225863 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230508283 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231270394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231034126 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23185253 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230575012 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231649094 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230989707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.232711743 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231850567 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234588758 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232995126 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231907949 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.232348177 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232192467 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232137481 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231937375 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232320097 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233757886 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232193106 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232075108 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23139397 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232669767 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232692041 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232962714 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233325988 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.234339291 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233231267 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233034391 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231545336 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237900484 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240146316 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231974839 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232713335 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233508927 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232956807 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234317072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233986557 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232438211 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233721048 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234144141 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232168785 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232806673 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233105623 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233000134 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233230837 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233501918 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233632206 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233235485 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233486082 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234892871 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233345336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234587615 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233704139 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234311827 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233388283 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233862808 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234656494 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233929373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.235151269 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233615372 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233071263 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233205515 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.234705906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234573275 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235516816 seconds)
  done (took 89.947493882 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234263778 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231116165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229382386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230369158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23043005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233249556 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.236520624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23419759 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232415309 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233469225 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233276807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231699943 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231085658 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23399702 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23328231 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231399408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234225575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230419408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23311695 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235125314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233184113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230518968 seconds)
  done (took 28.274633853 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235042174 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236184931 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232182485 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234672658 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233587283 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234124618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232665915 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236414128 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234650226 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231460713 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231403035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23439309 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231209379 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232065638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232567805 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233258728 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233949488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234492415 seconds)
  done (took 23.358624472 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233055134 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232456548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236037793 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231976568 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232398109 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236017826 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233209459 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235723283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235256908 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233348174 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235492213 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234097371 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236547389 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232968552 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23468241 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23494143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235217632 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233406837 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235712545 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233136634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234208094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236118884 seconds)
  done (took 28.312499321 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235966655 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235611115 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233318315 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233797731 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233078224 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236801733 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235708933 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234082557 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238323023 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235789385 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235293734 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236562262 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235621135 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235228127 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234113391 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233790038 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238150589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235088139 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236939192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234548343 seconds)
  done (took 25.865803727 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236993091 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237302398 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236847085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238009418 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237675293 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.237663313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237583894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236798698 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237655823 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237773874 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238429121 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238430053 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237477094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236911189 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238165561 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23763324 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238112201 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23780047 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236949735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24052902 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238174107 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237683427 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238086184 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237264424 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238074998 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238266607 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23863931 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238831261 seconds)
  done (took 35.819015117 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238496829 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237725865 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236066631 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235653931 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235972858 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235334972 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236169794 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235336365 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237679335 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235456939 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238168241 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.238255975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237884767 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237394457 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237601185 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239419812 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238334915 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234679955 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234576901 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236046134 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238377804 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237495811 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237011913 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236547862 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235546309 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236920804 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235577259 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235400844 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238533705 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235339618 seconds)
  done (took 38.262724736 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.258195944 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255577628 seconds)
  done (took 3.671632118 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23528493 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237460579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237876617 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235213876 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23550188 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23898412 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237921477 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235338516 seconds)
  done (took 11.052151868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236873798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236937179 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237778834 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237314375 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238639019 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.2391357 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245770846 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256057751 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239562649 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238757192 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245187456 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246202714 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240650466 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237900978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238098439 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239753259 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238624393 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237580745 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238089409 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239474298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238888708 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240863918 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241133424 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236189205 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239504974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249952372 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261078032 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239121336 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238697134 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243730234 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239692071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237567318 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238563209 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239779031 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240703845 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23959904 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249265931 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257608751 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247228347 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258888994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24033985 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23920847 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.24130996 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24091377 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242766347 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239396814 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241463601 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238049598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239933678 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243391483 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247653637 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240315717 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238763701 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243846488 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241390804 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247322898 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258164246 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243353321 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250976789 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252358613 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273083852 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263380495 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24314706 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241241322 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250435196 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265467207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248752391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257070252 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239576962 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242570888 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247980061 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272613298 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266590174 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243197846 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241466053 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242493409 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241827089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242368525 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250397422 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262227517 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243009086 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242339437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252189866 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264647664 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242678537 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241710068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242102247 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241403232 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242966079 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254256696 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259363992 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243080226 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242862262 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241081873 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243478831 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241683616 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240625933 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24246581 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240126384 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24264663 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242952332 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24518716 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250868964 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241215415 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24200329 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.24808699 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260978271 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242152295 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250576729 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242300993 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24204214 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243748165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248439211 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239841936 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245651734 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251592182 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244916831 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243548217 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243298104 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241729167 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251327177 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266918578 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243325182 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243387313 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248142473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252749283 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242857694 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244243303 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242359242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240899798 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240363208 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242947892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243123564 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242946895 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242106787 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24391811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240571265 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241954826 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242412758 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243148246 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242861583 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242728411 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243970046 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.243086773 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242992249 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244115501 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248812151 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260917785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244199935 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243433162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241507043 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242930911 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244021444 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243662039 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243609806 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24402916 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242668609 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24326462 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242720842 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243069052 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243259482 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242974206 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247073187 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243423837 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246994775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244089513 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241678345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.244372567 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244137838 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243911911 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244106605 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242893907 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247248551 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251850242 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245533642 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244469681 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247040636 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243535058 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244916295 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242518443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246828746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251180503 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244362336 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250132978 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261641264 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244776607 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24526034 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245231941 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244220743 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245008853 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.246855449 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252807755 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256612929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2679588 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246604868 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248907415 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246843781 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.249356232 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249786142 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244514227 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246709925 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245532611 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246429359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245124245 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246283825 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.244665092 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244708617 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246641831 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247437096 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245982337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246147536 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247070335 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247142901 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243421843 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246910606 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247221631 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24528215 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244329665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245697509 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24650216 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247017713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.248693728 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.253409264 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245060166 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247386786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247194304 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246716684 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246301332 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.247754579 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248971786 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24795824 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254185851 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.263818328 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248057613 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254763363 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264867052 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247558673 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251493642 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248105067 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246531731 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25075344 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25563754 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248310748 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247021728 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248267562 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247668183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248965559 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255148316 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263950301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247332127 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249360136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249217555 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247173388 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249961575 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249436476 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24991844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250237086 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249181272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.248560445 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250002106 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249899289 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.248871973 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24983986 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251572599 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256768489 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253059283 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250345947 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252727158 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251305196 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255011023 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.250251014 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250448365 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251954185 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262383055 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.272388039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257465871 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268816636 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.251065765 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256181871 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.268785017 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255079798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251103822 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251355108 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251755323 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251115235 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249546831 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252356066 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252343982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25267908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251974974 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255887204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252343202 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251415395 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.251530073 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252579087 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252453894 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251447639 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253739093 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253574335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254383014 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.250891004 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253194295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258583755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271031392 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252884181 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251952106 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252298923 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251740131 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253034594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252373713 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255745391 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260462751 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255303003 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261061837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254323956 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262515754 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252978145 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.256490197 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260442064 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250398026 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252852694 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253681096 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252879874 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259613254 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270886764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254744804 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258124911 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253756857 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.253435554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.254525378 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.252737626 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254388134 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254910208 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262217838 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.272541562 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257548252 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256066122 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252335859 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254501854 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254518024 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.253949922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258001305 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255013515 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255571833 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255125922 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.255496384 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256057224 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255245408 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255913425 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2532939 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255971281 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261293189 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275423562 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260956249 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256601497 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.262565652 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274472589 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263571366 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.273654909 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257468323 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25699289 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256665281 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258073965 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.257107711 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257398457 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255829399 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258315304 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.261274411 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.25672334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258437065 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257997448 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256550678 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255339868 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266809558 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278216016 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256930914 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260677776 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.25561236 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258415744 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261570223 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256463687 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255730932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.260589884 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268063479 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266041646 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258093207 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257647712 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258529643 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258943479 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.259144004 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25953017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258700824 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259031054 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.259293228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258016493 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261001586 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259401379 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.259566101 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260811631 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259669839 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267718902 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277512171 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260241786 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258997858 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260804694 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259829354 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259871817 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25889326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259517196 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260397547 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.260548145 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266722 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.264650819 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261146449 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259526551 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.25943303 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25964737 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259809558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258827459 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.259289494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259874537 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261067664 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260221136 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261616631 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259305247 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262154055 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260888963 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261143437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263765079 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267623515 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261509218 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.259516179 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260857723 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261494479 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.259984513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260878928 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269113728 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281311514 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270820252 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270498131 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.265364742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261527221 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264615002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268652105 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261377504 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263327162 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261985221 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26326804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.262578085 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.2657979 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262557037 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268918094 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279988093 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26212256 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271192804 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.281250028 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262629067 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263899848 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266324132 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262488551 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.260866843 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264043637 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262353736 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269047727 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.281423067 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263148713 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26566109 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.261869776 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263875934 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266251818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264559307 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263818646 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.261885396 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263574756 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263710169 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265079621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261004987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.26360886 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.264531179 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.266998991 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269875182 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262502182 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266184723 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.263750727 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.264540986 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26397107 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263605834 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.262933019 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263064015 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264383051 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265143012 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.265476641 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267038046 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.2634987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265235315 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266450148 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264546912 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268543783 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273578579 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.273186042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263451894 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265469404 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266776368 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.268227575 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265224825 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264894838 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267252983 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267374286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26600716 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265086918 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.266985225 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26885379 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280798852 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283926607 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266708807 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266576297 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270888836 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267411739 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265053944 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.267151077 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.269390066 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270216576 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273436057 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.266605434 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27383843 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285422097 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268951902 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.271423535 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270510268 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274048998 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26972767 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267031248 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267176365 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271788922 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282660053 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268222495 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278820311 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295570609 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287196927 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270094013 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268785295 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267400571 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268987613 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269631197 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.26872813 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269071509 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270365959 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268445883 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270189649 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274087822 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271101361 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270220642 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269034738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269904197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269735759 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.267050517 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269013139 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.26874409 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.268550037 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269211236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268704481 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269944512 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282023617 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.293556975 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269888315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270720492 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.26610296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.273406782 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.271642921 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279952242 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277153642 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268651794 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269752421 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272287519 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271612333 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270148206 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271192761 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270602769 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269814501 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269509821 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282782879 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294818887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.275236741 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271050918 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271736597 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269758059 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272594293 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27233702 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270465579 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272320734 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274468381 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275457292 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.271461694 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27215305 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.274890968 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280150013 seconds)
  done (took 749.718451798 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269736206 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269617188 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270369295 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26864165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269682725 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270027163 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270979664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269427588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270841977 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27124886 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269777071 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269865374 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271052354 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271382804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271394763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270526326 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269638257 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271147624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270881129 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270603757 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271106 seconds)
  done (took 27.868783773 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274428418 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.271297124 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27142773 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272659937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270645 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274011986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271662881 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273551556 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273125039 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271863932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273426472 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274163694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27274856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271789004 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272027428 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274846724 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275544151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271291313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27460814 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273075259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274540412 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.271210399 seconds)
  done (took 29.195146751 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274347869 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273563313 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27350774 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272424037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274966048 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.272843151 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.275245386 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27610892 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274767732 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.275207026 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.2734442 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.276752429 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.280314672 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.279779338 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277277449 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.2749353 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.417545285 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275669609 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.275685845 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274837908 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272403335 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280621539 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.304805136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.273388056 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273193476 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274974976 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276847171 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.277214652 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275854993 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.278071943 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281277602 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.276413555 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275370489 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277240184 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.274717903 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.276722039 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280261934 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277371911 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.277228658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.277330517 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286965316 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295270092 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276644886 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281810894 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.295844557 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.277589641 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.278003936 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.283268142 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273953092 seconds)
  done (took 63.953841262 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277279576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277432937 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27503263 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278339003 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.277114504 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.278450922 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276885907 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277256034 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.274693003 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274763439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277881514 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275189393 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275203513 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276547179 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277188261 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275476004 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274690095 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275343863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.275537978 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275302449 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.275020039 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277310469 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.2777971 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275417704 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278389799 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275196048 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276361451 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277744448 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27576748 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275576497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.278314715 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278785104 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278147407 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.276872857 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27654783 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277898386 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.278211887 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.275913472 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279522779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275867995 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.27857635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278763937 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278759732 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281332791 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277121196 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277066636 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277427107 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276448641 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277977713 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.279223709 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28328351 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.277029551 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280416252 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277905871 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280286754 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280168092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.27715447 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.277570899 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281389455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.277721398 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.277012111 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282309564 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.278595409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.280060619 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279608698 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.278633866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280561086 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280523269 seconds)
  done (took 88.075173392 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280112364 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279469749 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27880563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279194651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279940968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282318985 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278618695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279905038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277753413 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277848129 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278523892 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280899073 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280501003 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280876225 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277808193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278486039 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277900997 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278674318 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279655986 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278589737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279540592 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281239963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279247495 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280111842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280818648 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278105205 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278921103 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279543514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280374481 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278204607 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279833962 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.27951454 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279057624 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278911933 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279968363 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280009368 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280510244 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279163942 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278952683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279564674 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280750655 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278863624 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280051953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279453869 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280706386 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279972067 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278882704 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280511206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28049471 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280335128 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281173577 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280463136 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281091844 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280565261 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280167483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282238906 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28125443 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280207045 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280530094 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281109377 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280851832 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282915547 seconds)
  done (took 80.549706046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28170014 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28198176 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280116537 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278941383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282166923 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280041438 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282959544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281533843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281781802 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283627234 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282572966 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279391595 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27935281 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283490861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280885691 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280389508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279218058 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281373931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282579436 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28102235 seconds)
  done (took 26.824518405 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280546736 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282590944 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279762649 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28022045 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283959788 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280930639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283025983 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283924582 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280414648 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283151989 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283328668 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283570957 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281894959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280615047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284831076 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282564191 seconds)
  done (took 21.715201457 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.281375976 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283784534 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282666656 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282652103 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282052027 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280984003 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286336238 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282299127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281732467 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.28524896 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284226874 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283491842 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284987582 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286369519 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282868165 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284888221 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.28116066 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282005434 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285646534 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282616495 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281538945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284321684 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.284538276 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284532386 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282003594 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.282265995 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282406436 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281694623 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282574277 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286203581 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281867763 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282270691 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282776196 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282801587 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285438808 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283317604 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285306828 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286810428 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284911552 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285660844 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286567015 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284187123 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28612458 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286006332 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283775399 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286679525 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283694997 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283288883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28446584 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283432741 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286621157 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285825246 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286950319 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287019609 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285665608 seconds)
  done (took 71.82179084 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287029557 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287500455 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283739049 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286924891 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288550652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285409052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287346405 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286558079 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285559969 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288472443 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286856732 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288809972 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286460564 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288142557 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285861609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288143181 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284782734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286380232 seconds)
  done (took 24.36525225 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285405878 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286614144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287364205 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285581219 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286192556 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28823729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28629399 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291196692 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288516252 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287654664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286340575 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288132331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289708625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289947722 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286604186 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286177516 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291055087 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288706924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287124246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286361641 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288915822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288963157 seconds)
  done (took 29.535983976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.287951349 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.288042666 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.28777845 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.303612743 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.304706396 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.308734053 seconds)
  done (took 8.984946996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295333404 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289806155 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287698162 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290255616 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290735259 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287134113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286610056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287086656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290317956 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28668932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287713914 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289322571 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290280421 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288227566 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290412872 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291419575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287783864 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287719037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288506412 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291571912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2872173 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290611345 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289119295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287342203 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288012086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289522104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29159326 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290010948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289232715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292548983 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291058615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287639915 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290815019 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290009955 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29299091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292667215 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289190759 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292382262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291419803 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289712863 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291388369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29472367 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29120903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288666424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29156153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289486338 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289709407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290858338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291204007 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293136093 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292145978 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289841383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291791327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291387167 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29285426 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293604202 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292355406 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29068431 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293215853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290120207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290029777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292778088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290536768 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290312609 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295076445 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290393408 seconds)
  done (took 86.396374459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291602197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290760783 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290088124 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291808851 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291978005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292782081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29057372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291861319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290947962 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290887554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294102078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293321848 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293596139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29222753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291416021 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290989298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291102577 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291723018 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29159381 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295393362 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293093345 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292753739 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291917602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29269465 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292384829 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29464551 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291919033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292579074 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292594486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292305154 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292063777 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2932413 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29377442 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293434536 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293280288 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292566509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293540936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293002903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294172258 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296206658 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294034993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296445565 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293321302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293871744 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29484355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294648832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293737119 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294858728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293713263 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294485268 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294212569 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29471031 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295945536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294090282 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294365268 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294718611 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295091097 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294232777 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294598371 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29728867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294110223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294576527 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298251173 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294138108 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295287421 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294799886 seconds)
  done (took 86.576343377 seconds)
done (took 1749.94920321 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.340088047 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.372940393 seconds)
  done (took 13.926038841 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.459415924 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411018269 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.295460655 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.320457186 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29520087 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.313296063 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.312752731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296114755 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294901891 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29465425 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295408178 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482304299 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.348228573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296718452 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296238744 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389428161 seconds)
  done (took 42.616047527 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.322945114 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30270046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.406872964 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321427816 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.323193948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.475912966 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355363356 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301637951 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460127375 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346101146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.76487009 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.323554436 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302243539 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.341884878 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.317952256 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.475655557 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.529973439 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.767845843 seconds)
  done (took 29.655329482 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.716231635 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.322905262 seconds)
  done (took 9.253624597 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.30490641 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.296976296 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.296421907 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.305132844 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.297074839 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.35589869 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.374277374 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.377244946 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.328825452 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.334807687 seconds)
  done (took 64.487958229 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320046719 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302195856 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302957891 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300416642 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.294462491 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.309724502 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299961559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.294809121 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.750796204 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.42022297 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31961337 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.309906886 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318948113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304513495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300120994 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.33754431 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.429092479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.31847353 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300860362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308988388 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301892658 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416329785 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.34092517 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300853197 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.42174429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.718684513 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310920312 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309512334 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.412793535 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.320450028 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302459749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30399569 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305016879 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.872119544 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813010194 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311410436 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.326683265 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311384874 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302353146 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445259069 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322591897 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310399112 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298847272 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.773018203 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454231968 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.410538637 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.459140837 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.306151283 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306533794 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.365252784 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304700588 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305527416 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.332902779 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.058210274 seconds)
  done (took 109.217131249 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328839791 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.78482418 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46708754 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321331476 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.063630239 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.900556088 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314418964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56594695 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.34892814 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298365087 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.583108705 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781495883 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323270119 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.311693622 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.941345885 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.376881592 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299299074 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.059950317 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315038328 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299697633 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713361904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328467694 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298538943 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.461982879 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338006111 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744046116 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.707603089 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.725634814 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315470487 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.29834654 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.744266723 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322768964 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.333563781 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301304826 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562505603 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637638197 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630534849 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31586718 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342091188 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301289897 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317703064 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739052371 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.639929814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315575262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313369815 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745325333 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316258059 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.302814384 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.305103823 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499610165 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.067582166 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301264081 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.689128285 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301078144 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.645142802 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378166308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359436323 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771760346 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317398244 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.280944251 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36141348 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302284759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306069147 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303577651 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303857362 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.629167622 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.431300522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301239871 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630659935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.754132855 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32775681 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804894099 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.253061267 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316335116 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.389986064 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300822358 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.870517039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787623761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321634269 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302531936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616540379 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319668643 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.572716897 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316505999 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303646182 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722388843 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.318396054 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.367257784 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302837573 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303076029 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.939688848 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303315479 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.577260461 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.372686002 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302358545 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304108818 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.337548744 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303337014 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303260011 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.306743592 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.809045596 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.323971091 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.427613806 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32333805 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311241615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304082851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.304695792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305061158 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521285225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.860434694 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.309035659 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3050686 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.305294996 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.308165382 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.442112639 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.302902724 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.580016813 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311587286 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292632923 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.285089381 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.984359211 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313172286 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.272095121 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.268222564 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.089246734 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.498898284 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.284166097 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.267011234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264962204 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.278146362 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.579264067 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.265938926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.280403753 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.269300992 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949554876 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313449678 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.26897182 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.694524508 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.26497783 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.157768272 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.275598012 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260961513 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572980383 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.527542291 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.308781479 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.258833511 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.271946715 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953499312 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302405057 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.399287341 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268927238 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325319459 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44931951 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.529557282 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.251601476 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.823826299 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.250765327 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462445498 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.256881754 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565521329 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.725030009 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267498952 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25781151 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934977146 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917439166 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.865032729 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.252938658 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.519158853 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.219681684 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.702276509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.253256997 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.253446542 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.688369177 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.254863358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.252724265 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.253796449 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.253055701 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.406880461 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.426808513 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.522000578 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256706991 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.694329381 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.281530642 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255085786 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.263609993 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.255382275 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608844174 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337758355 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.253638012 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.293149344 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.254407713 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.261013732 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706748475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.233826768 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.26001663 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.40745383 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861569636 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.275267184 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.251543519 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.987323613 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.512539412 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.735742255 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.289787366 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.533222701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.265370501 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.280403504 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939674721 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296443835 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.739083023 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.25737245 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.240980892 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824027157 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.261176775 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.601935263 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.241095893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.243021825 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76473006 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.257182597 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.24652657 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.593167813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.2434018 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486433128 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.24211684 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.281795482 seconds)
  done (took 1098.553949566 seconds)
done (took 1368.919385738 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.24275217 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.245179279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.230030918 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.24530989 seconds)
  done (took 26.128921018 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.250719068 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.247214555 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.247505553 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.246850618 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.24983109 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.247077358 seconds)
  done (took 8.653884084 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.264626537 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.242322408 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.247582664 seconds)
  done (took 18.920152021 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.454814435 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.483466661 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.593582142 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.365138302 seconds)
  done (took 10.06154068 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.247723559 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24780785 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.24863547 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.250872439 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.251443572 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.252824028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.250108522 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.251397139 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.252985389 seconds)
  done (took 12.418526717 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.989155275 seconds)
done (took 82.335899262 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.93689693 seconds)
    (2/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.048070126 seconds)
    (3/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.751795239 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.479951316 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.26243347 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.413920998 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.526327971 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.286506946 seconds)
    (9/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.031238711 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.291537257 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.802343385 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.272563444 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.961869323 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.380996437 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.262127861 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.755813711 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.252422886 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.593285479 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.270654198 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.54576705 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.247597488 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.836615671 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.231738344 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.228580443 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.246919561 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.371525756 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.683797627 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.077325603 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.655506555 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.884072029 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.256279823 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.245512121 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.377315043 seconds)
    (34/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.452297488 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.631328034 seconds)
    (36/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.348680683 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.6761143 seconds)
    (38/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.275035536 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.716300718 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.524179827 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.288112957 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.46518611 seconds)
    (43/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.585499226 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.376327332 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.225735409 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.287147636 seconds)
    (47/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.850841806 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.248265071 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.613999766 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.378836427 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.274758793 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.504767352 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.247041805 seconds)
    (54/309) benchmarking ("sort", BigInt, false)...
    done (took 6.261910331 seconds)
    (55/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.442308943 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.479930798 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.265269635 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.311284134 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.531549437 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.323086809 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.392414658 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.806875755 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.291109681 seconds)
    (64/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.662604149 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.323767675 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.227277508 seconds)
    (67/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.615421369 seconds)
    (68/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.275583503 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.935896508 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.268614729 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.231727431 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.358438996 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.229250209 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.613812474 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.352362333 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.564856596 seconds)
    (77/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.7958791 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.036915187 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.992355871 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.396955062 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.637961461 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.672375379 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.848717438 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.349132975 seconds)
    (85/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.474811518 seconds)
    (86/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.63016577 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.572546378 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.355024717 seconds)
    (89/309) benchmarking ("sort", Float64, false)...
    done (took 5.532015985 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.553239843 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.653814962 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.457330567 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.280921977 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.357706085 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.332324587 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.293676422 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.276657242 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.35550924 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.131789352 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.282595943 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.389572054 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.276745216 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.798519548 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.59405724 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.074741774 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.959007308 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.375207835 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.264327781 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.258056112 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.77568614 seconds)
    (111/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.334509199 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.626271942 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.253650837 seconds)
    (114/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.254859743 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.769757157 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.953747395 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.487813916 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.375800591 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.336566212 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.453185389 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.257827846 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.2539471 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.266738543 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.869249605 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.137569851 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.505935869 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.509512181 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.431118901 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.561852 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.767343668 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.290970778 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.10817627 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.566173958 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.537450023 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.471474502 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.251073731 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.524322616 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.355063415 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.974262077 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.514443875 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144903523 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.443621275 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.398144059 seconds)
    (144/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.25462914 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.736742905 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.384316779 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.052391842 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.976159524 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.25993956 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.01300674 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.280573747 seconds)
    (152/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.003705436 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.327418606 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.406684956 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.361500049 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.263954267 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.541300385 seconds)
    (158/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.528111786 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.281916987 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.077031343 seconds)
    (161/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.981052412 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.67347133 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.272767848 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 5.27197146 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.039539577 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.268174103 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287500208 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.986932748 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.357166307 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.318667341 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.336535572 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.685409714 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.610831774 seconds)
    (174/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.304354958 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.271650238 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.66614438 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.243678133 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.266019059 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.669539542 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.568978888 seconds)
    (181/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.099390783 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.267672404 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.455297579 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.636295743 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.583427254 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.28494784 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.604673557 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.657904982 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.672809564 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.460567079 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314266339 seconds)
    (192/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50640639 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.278890631 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.760081914 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.337454321 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.281263107 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.320814766 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.236411233 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.564016699 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.259076312 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.304017318 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.2494675 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.319516683 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.884452718 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.159765837 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.616568618 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.566160793 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.534331346 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.26516816 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.368251418 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099866775 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.165393352 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 4.346046992 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.129161389 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.345790285 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.893741602 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.474714122 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.237671896 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.362887103 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.320361765 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.663386275 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.287166757 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.257701547 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.364862474 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.246597058 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.300161094 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.23820692 seconds)
    (228/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.299764371 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.259352895 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.289720174 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.29253863 seconds)
    (232/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.802546341 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.644355177 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382776263 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.258088621 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.276759128 seconds)
    (237/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.832950388 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.633460324 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.890403428 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.33145464 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.819515704 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.269728754 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.027095218 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.039575165 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.030915138 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.82681539 seconds)
    (247/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.295464225 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.267082686 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.16243739 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.342194322 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.259139761 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.267062602 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.292470859 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.682869712 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.081831461 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.619757115 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.286303621 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.637026616 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.472627716 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.603192645 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.175791725 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.265479957 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.004444121 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.292105894 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.323941982 seconds)
    (266/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.240610356 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.650837205 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.284768602 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.280638846 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.354620862 seconds)
    (271/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.803476196 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.889214969 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.651438548 seconds)
    (274/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.772084948 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.258785098 seconds)
    (276/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.848358362 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.836732975 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.274290289 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053131368 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.258926034 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.384305693 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.262021657 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.308182721 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.278920801 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.345142382 seconds)
    (286/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36805837 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.343251474 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.289748322 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.379760538 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.090929511 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.901109481 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.353161239 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.305048176 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.657431589 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.462793452 seconds)
    (296/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.843724513 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.312346986 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.249197728 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.250612892 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.337683535 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.269354275 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.281050976 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.560027924 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.302467726 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.113148529 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.267921037 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.140327964 seconds)
    (308/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.823943476 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.367569674 seconds)
  done (took 893.680096304 seconds)
done (took 894.846098882 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.295924511 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.2918935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.273501605 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.29516692 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.385235474 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.296937133 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.284994583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.27630131 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.321802878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.323225222 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.273045762 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.296003637 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.276273477 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.273602373 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.273993237 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28865979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.260005975 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.275775048 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.291706737 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.284690995 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.292735513 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274291172 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.325674882 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.29750246 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.279685716 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.278882033 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.279872566 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.29331883 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.386629778 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.278357826 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278711954 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.286956978 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.259873817 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.27418092 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.270822603 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.295616142 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286600798 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.284827873 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.28007175 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.307165415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.645092675 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.290753314 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.27806854 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.276654024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278124087 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.2812519 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.276984877 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.283228614 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290078828 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291925999 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.65325134 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.307071329 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.278719399 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.277940014 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.288795813 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.276863036 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.280660823 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29462718 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.297047341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295393804 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.250590603 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.281705046 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.279584371 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.294152906 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.285260427 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.674101457 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.290204026 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281928584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.649429546 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.299287469 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.678045267 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.301554534 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.279161021 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.291332658 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.310078279 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.263912107 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.272322102 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.277742251 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.284979957 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.276613827 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.288687075 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293792533 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.283958506 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280292544 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293471461 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.30290324 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.288467366 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.280312097 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.290364657 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.298887299 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.286054744 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.290661026 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.282790096 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273987226 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.288108948 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.283223752 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.283736529 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.282879242 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.285037295 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.290861184 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.650515491 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313679851 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.27702715 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.276506302 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.280862922 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.294910855 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.649416047 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.297519512 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.302518035 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.328288444 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.282694648 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256008283 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.284544675 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2991961 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.289733489 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.284391261 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.276784219 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.25811305 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.643733933 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.312025539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.282625565 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.279574769 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.298535426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.283426604 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.278279961 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.273206054 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.283626496 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296031709 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.403499253 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.29280104 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.313567422 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.279530312 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.285147916 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.305881041 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299473731 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.31248243 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.285626013 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299602256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.299208584 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.279875746 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.293136089 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.293968994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.284106373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.288476845 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.278157341 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.305675776 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296673977 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297503708 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.303718196 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.404133434 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.280183046 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.259433459 seconds)
done (took 216.22893685 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.340495952 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.278044235 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.364169235 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.27951986 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.379205352 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.382737821 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.279227414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.278519577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.278138157 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.654152543 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.27821328 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.278987982 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.27858551 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.278840142 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.365575472 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.280663021 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.277097168 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.617186074 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.281597597 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.349627913 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.278834089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.278428097 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.280032657 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.660334382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.273486982 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.282615684 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.35002183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.281680189 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.624988863 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.279037488 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.279589342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.626591768 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.369852184 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.298889565 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.290905311 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290012856 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.381259191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.300238826 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.360520637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.361539074 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.365388353 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.320785407 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.281806698 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.281775782 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.283184963 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.282836518 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.280199628 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.310302453 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.27877525 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.280635585 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.619316902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.292079832 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.281680557 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.280454498 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.280576706 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.312022779 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.280589673 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.282543886 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.371527866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.283356884 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.343826218 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.660531069 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.657104996 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.284418942 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.280464134 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.280988787 seconds)
  done (took 144.903821763 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.350709618 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.355282195 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.392287457 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.299800057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.332234129 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.398453001 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.300025347 seconds)
  done (took 10.626756069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290902198 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.284875005 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33430323 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33260364 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.285068798 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.432825118 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28527255 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.29564399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283049252 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337201556 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286541781 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28514457 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.291318773 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.284927522 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.332212488 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.296515763 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398916732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.285936381 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.285668148 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.435203273 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283384041 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.292406303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.336931153 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.296436414 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.288297606 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.290532356 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855265369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286206584 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284098122 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28545737 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283973367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.32335556 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.28666853 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.286511081 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284881365 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405174013 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.28638524 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284086929 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288216828 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.281474199 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.287023592 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287500863 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.287034857 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.283712952 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.28709898 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.309483009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.28702544 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.287723041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.287794996 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.288879772 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.337481728 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288734114 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.287156372 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.284653819 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343092338 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295235006 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.287819679 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285724718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.28803697 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285983019 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438027755 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.334884271 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.288196433 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335023665 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287624955 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289056888 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.28826294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.288442889 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341859769 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.288598161 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336446777 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.286290171 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.442131752 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.31068552 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.289742274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291642353 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.290699657 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287924625 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.283522043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.294129271 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.286875168 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.289582556 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.294237336 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286777486 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287004149 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.390935136 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398846021 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.287116749 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.301674518 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.296005384 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.287767305 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.342238668 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.289195161 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.287037948 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341616055 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.405062454 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.342041107 seconds)
  done (took 148.639731574 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.294724051 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.298004836 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.290593848 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.30518536 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.290466226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.28951786 seconds)
  done (took 8.972301282 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.292180702 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.291626238 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.290628639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.290864609 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.29099526 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.29194893 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.291151421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293187993 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.293782318 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.291169485 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.291665638 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.292541643 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.292746333 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.291685132 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.291047272 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.291085863 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.291468205 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288831371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.291897637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290979623 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.394690062 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.292017912 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291420648 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.291612059 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.296617499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.292201097 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.299441301 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.292513833 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.292346562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.296423081 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.310296822 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.293208622 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.292684898 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.296927914 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.29488668 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.292853134 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295738945 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.293808055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289733758 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.29318767 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.294294007 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292686313 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.293247349 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.294597049 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.294454909 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.296615832 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.298271202 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301161605 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.293337063 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.295596374 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.295272308 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.293953481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.293951107 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.295902652 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.295221895 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313001125 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.29817944 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294238616 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.293588272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.294514613 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.29402128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.295631296 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.295644307 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.29684839 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.292584004 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.295511684 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.293997248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.297821485 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294346015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.293921212 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.296755066 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.293424021 seconds)
  done (took 95.494680188 seconds)
done (took 409.828260855 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.632423469 seconds)
  done (took 7.84075315 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.412276737 seconds)
  done (took 7.623207144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.038910962 seconds)
  done (took 21.251521734 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.309203283 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.714211286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.312310219 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.291868553 seconds)
  done (took 26.838319136 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.671667837 seconds)
  done (took 7.882324143 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.304758876 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.290659026 seconds)
  done (took 13.807999463 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.699097008 seconds)
  done (took 7.909374009 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.557407639 seconds)
  done (took 7.773059468 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.299404592 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.310476928 seconds)
  done (took 14.077709651 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.272202491 seconds)
  done (took 7.484465152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.015751079 seconds)
  done (took 8.229853951 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.291646318 seconds)
  done (took 7.505892093 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.364288855 seconds)
  done (took 7.576775435 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.072966356 seconds)
  done (took 9.285100391 seconds)
done (took 156.291466607 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.29138224 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.294490648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.293306738 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.291159048 seconds)
  done (took 26.382529209 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.333858438 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.332900219 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.335121254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.344109822 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.337451759 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.33527469 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.326072259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.326135586 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.344307167 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.336376545 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.335967895 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.336560701 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.334606752 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.326352753 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.337122132 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.336564027 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.346061713 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.337136826 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.328185327 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.338592231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.302356056 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.345395532 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.338267945 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.302591646 seconds)
  done (took 33.211980406 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.82239356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.370650446 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453346033 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352880409 seconds)
  done (took 7.214059173 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.353026992 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.354665269 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.367452233 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.405739069 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.432319877 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.36497988 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.328470385 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.323457003 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.31080911 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.356395293 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.432734893 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.372029041 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.446073421 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.302052564 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.483530337 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.30312464 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.303089175 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.355379751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.407446965 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.419058798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.303143265 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.355533849 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.35941392 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.373019658 seconds)
  done (took 34.029322434 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.315148022 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.310729255 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30262702 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.3012426 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.323163949 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.301423662 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.30358147 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.304488325 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.303408573 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.309397212 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.302215094 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.315508263 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.302958375 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.302613133 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.309276028 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.305092197 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.308994838 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.302950863 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.303511484 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.306175452 seconds)
  done (took 27.351784874 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.295381663 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.150111236 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.648261166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.551854106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.296991405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.297074787 seconds)
  done (took 27.457019591 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.371187888 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.519594029 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.310338394 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.653095022 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.750352156 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.323321727 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.304730009 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537249053 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.845540619 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843882459 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.366938139 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370784369 seconds)
  done (took 19.415291647 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.299405651 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.300724687 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.313990889 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.317600259 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.356669054 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.326231402 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.310733621 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.298353847 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364872336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.37896159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.327277175 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.359351487 seconds)
  done (took 37.17352945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387898909 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34563836 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.252840008 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066481804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02085978 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511614543 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.055124542 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.729448111 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.308209218 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574012014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310111289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394344686 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557506756 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300507636 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320390464 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.294367673 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547225134 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788289633 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30536292 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.18812773 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330363312 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303021204 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.274248397 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334469298 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513162917 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.279887314 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.562568288 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.077029498 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581987281 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31679323 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312291029 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3013601 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576019148 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960727311 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418759321 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312058355 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001230251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.84993198 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.290027225 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.266785329 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.114606053 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308345261 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314551792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303410103 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.237064669 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303373262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753563 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.312494902 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.015055301 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303504201 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313826697 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398074297 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.30649022 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.872799128 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320938688 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308882245 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.302823134 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310475442 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872341279 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666215461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321371414 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.243765139 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.693975517 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.269919539 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941202849 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425864869 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.308626148 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30707586 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239554979 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.271759878 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327174741 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452587561 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.330128894 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953833871 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000208456 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336896114 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240077946 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859541381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318449649 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.245875699 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53175451 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083600535 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241137858 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.250247417 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.239426107 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02584906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315880486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.678986973 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312801289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.733328212 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.31759628 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322003863 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330399518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.529016605 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.183700293 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305107795 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.134629352 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456128865 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328833718 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.730690797 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241139075 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.310213569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563033157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.517496182 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312628931 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.289202954 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523980817 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315433246 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.324931992 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319172059 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323613249 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.870858612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339746159 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.668815661 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328448399 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.084735581 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047171083 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312439737 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.415272451 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.313182274 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554120947 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.079353836 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215704895 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375450966 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312970346 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307293608 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.292795132 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16581708 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.466758067 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.305223423 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313650748 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.32387317 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.308973442 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257093365 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.306296998 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328742443 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.090699485 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531886741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316574551 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590650252 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243388803 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457186377 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318751326 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.530867842 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496257037 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.327949936 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568786573 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31972695 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328129382 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324450709 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328390293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406850957 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33268467 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.309138601 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586185978 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.313028853 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.313531265 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.318286911 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091874524 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317116839 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315803213 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149558094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88271085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308353174 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31441409 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200585764 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.325695073 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380345324 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315622938 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.321599537 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.089847262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.13877224 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.31725407 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.312183896 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537030246 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321517543 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.29754741 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395086076 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.503128679 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88892025 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348352153 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.245890315 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.021156249 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.004544154 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311818259 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.500036954 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311868567 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321671033 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323171029 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.820634638 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882047242 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334565062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.231938395 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.321666054 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325034101 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.319749819 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313092198 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.071920454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713764553 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32388576 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327485153 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455763526 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.327663615 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247485716 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830019059 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319151303 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312061938 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.089565302 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348667141 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.216887738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790901339 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572749348 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.001910137 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328044117 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.334209422 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.351575662 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.367149165 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1769407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344552911 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.322904802 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327358691 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.325461703 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.290238037 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.755973035 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940826012 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016473509 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870792631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260609358 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.336148535 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203187357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.743832863 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254271712 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971030091 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501527854 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.763213412 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264571603 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509161111 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.512103016 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091077611 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333135744 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543518253 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236162958 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.190111014 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349642521 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527099076 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349589876 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.315054422 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26445931 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.834263002 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546129744 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.174060486 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401134336 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748357 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.195503992 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.119166909 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.313808879 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674522722 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505569251 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864571041 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.703327516 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319213901 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320555428 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814084611 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321356603 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842710879 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937320025 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352291794 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.515378566 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257060176 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.328946878 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.32852991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.313690734 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.596368921 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.332607468 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.578893008 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328554842 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253151523 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317059655 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857617603 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.192641749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.324555007 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317778684 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088414685 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322220224 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603123574 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.331258345 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.066997163 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343546181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25252321 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253627096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.011413904 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328120213 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29311556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826914417 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.677228277 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329676355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350663185 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17182299 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573895593 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.332398339 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894112504 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565815007 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.114815844 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343849702 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420549253 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230403545 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.322448895 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213098849 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554596628 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157214146 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544681096 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.29503405 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.222697515 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31877208 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538004824 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.212862186 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32021293 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562401123 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.053497051 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.337686429 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02234432 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369708336 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321148928 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354413771 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.701068026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331169612 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391224608 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332275441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.332509576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.332160198 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489289636 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339586469 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326732194 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.335242791 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415874455 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718534562 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.076495319 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.098205566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899926445 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079767851 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91776216 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356356041 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323654091 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322536999 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256103585 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470308381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.848254331 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597052748 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452064803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.812290717 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348016032 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.240541787 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35293611 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5413055 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597703158 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.192177274 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330909653 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.988385865 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.20503744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333601876 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.534482755 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832088438 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904043219 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461185339 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324997779 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.757404055 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602135172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41452481 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323897121 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912820226 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.325193183 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.683832876 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.352106065 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330648971 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47740433 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333826897 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979246518 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357082262 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.480063475 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.0977565 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.270021947 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585428193 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.787926161 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341807773 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904369182 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035901067 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592512726 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395166052 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337028806 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.42992009 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472568226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.334899424 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210040013 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326111685 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170887318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.034278865 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.335631867 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90189937 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611095246 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.322172844 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.335188212 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351324639 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.335367809 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549412402 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042873674 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553693806 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33576585 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335064955 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.898459004 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905167956 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362365003 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260082185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.330845 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565107687 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58553646 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351160127 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.780221033 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.038880425 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889531133 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.302194604 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347900067 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341719691 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02354621 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91204963 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.114660634 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839769932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987992692 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328568079 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605728011 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.333408629 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327754708 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627184726 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.331490553 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.327584374 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343452561 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.909972015 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107594621 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.339189258 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.296932413 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.26784007 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.553685406 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96726762 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268219637 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328102143 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.501980819 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329852473 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45830974 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340286544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.337319427 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340997523 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.091238479 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601521739 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.335412193 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.324935303 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.283866288 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342456623 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341223136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563452563 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335031103 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.005304942 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.6787729 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584899326 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342704082 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.316672635 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.333982805 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330301481 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046498911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299394101 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.861439317 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90934403 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.345285632 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.347960228 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334913864 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.547256273 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542359708 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335918148 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348180274 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337213621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350153253 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.231133837 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098147703 seconds)
  done (took 1574.556875128 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.376445771 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.334031961 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.341909044 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.381543548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352840292 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432565886 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.411920747 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410700064 seconds)
  done (took 52.291089058 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.335589932 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.489109295 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.361583905 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.335973396 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.343988878 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.340385768 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.783846361 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.350009588 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.341343292 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.340442785 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.332425859 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.345603128 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.985292774 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.344859324 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.333199209 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.31812116 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.345498663 seconds)
  done (took 65.277575439 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.3394501 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.885246292 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.43011586 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.342715643 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.367579602 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.366087353 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.11421125 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.340642296 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.336673006 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.675245049 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.009970308 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.358151136 seconds)
  done (took 84.817288325 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.340383848 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.340274271 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.340597854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.339840021 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.340352188 seconds)
  done (took 7.952620383 seconds)
done (took 1998.342227144 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.579198099 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.0139969 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.957606263 seconds)
  done (took 5.222360874 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.478551815 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.52738303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.647404804 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.653010919 seconds)
  done (took 7.556076643 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.611454078 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.714940482 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.530433209 seconds)
  done (took 6.105569864 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.719402169 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.348273371 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.470555826 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.33107939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.332497894 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.336088893 seconds)
  done (took 20.250237369 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.335555547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.338555643 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.33717796 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.339328926 seconds)
  done (took 6.600558074 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.312554503 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.027576731 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.315254329 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.334974068 seconds)
  done (took 18.240411002 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.082817594 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.095239712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.080461225 seconds)
  done (took 7.508273277 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.331555532 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.20142674 seconds)
  done (took 9.783356367 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.62617284 seconds)
  done (took 2.876595511 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.468550193 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.660510674 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.360078205 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.320506886 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.399118496 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.09842036 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.941700991 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.538714171 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.284318747 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.465456174 seconds)
  done (took 27.788784824 seconds)
done (took 125.298158615 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.114458575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.720044354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.533673964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.124153879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.563158026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533937068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.742745113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.090413887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.652773192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.58621499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.126143404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.570693854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.477598978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.715815483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.478430043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.71637669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.564063611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.261160835 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.883284836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.969348693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.741927275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.717991996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.955527963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.801067411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.569961825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.490002061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.297392378 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.71705073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.972514299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.375420441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.494735384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.138508523 seconds)
  done (took 190.948931054 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.335467392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352484311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.353057719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.335538298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.33557284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.339351364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.336466196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352449492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.336822906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.341998154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.340216657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.335466673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.335752121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.352403173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.355556927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.362996011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.343326792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.342986598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.335946335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350028397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.338067018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.336406716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.365670871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.341349793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.345350635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.337239719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.337443574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354032503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.337027809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.336951352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.343237687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.355577358 seconds)
  done (took 204.25706529 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.339378153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.343468723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.363836003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.34488665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.344548934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.352140405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.34430753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.358226712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.343475237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.361542797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.344785034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346415799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.345729516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.344532768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.377171978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.345621791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.347579399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.345415636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.34621011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377658509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.363168497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352596811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.349105913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.355562368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.362573731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.347513534 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.346868728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346055752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.360699892 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346366102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.364573147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.353437228 seconds)
  done (took 204.521868919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.534477813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.346879146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.347949374 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.278877723 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.346889488 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.347469452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.342059312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.543699993 seconds)
  done (took 14.345332903 seconds)
done (took 615.320838122 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.590680795 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.33217807 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.551568501 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.376909397 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.091139283 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.385733473 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.368325778 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.537143081 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.265907628 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.548268989 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651456367 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390194884 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.793494313 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.374208201 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.625418672 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.475935452 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.239191895 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.363385232 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.686179114 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.869485281 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.6316508 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.856036479 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.565487958 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.253384112 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.789819092 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.846129315 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.068969027 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218708494 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.38714959 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.695006974 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.959443631 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.31781355 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.431430683 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434314501 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.496691529 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.468247552 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290883304 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.429109046 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.570558342 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.608380945 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.865321417 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.084150593 seconds)
  done (took 92.045206512 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.332757244 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.331928265 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.332568173 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.332626704 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.334932111 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.333081181 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.332164068 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.333374938 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.333538426 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.331883966 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.332616709 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.334094976 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.332176814 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.333330797 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.333928252 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.332674016 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.333154364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.335135357 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.333085165 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.332482593 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.332707595 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.332833443 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.33387083 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.333076044 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.332989461 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.333618234 seconds)
  done (took 35.923788691 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.352287006 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.600365443 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.760531432 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.362413787 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.353415334 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.355443805 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.429202641 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.35569544 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.354197165 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.356091626 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.520247283 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.356181191 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.38875487 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.788535404 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.3621511 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.353466938 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.353194936 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.353273923 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.609618566 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366733118 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.453956755 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.355522326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.429650238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.365173738 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37805733 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.354493537 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.35847972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.873428369 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.372365969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.519796817 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.12447825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.431225816 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.821170604 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.782176192 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.129596668 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.363128659 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.355277868 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.524901856 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.356258262 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.354146916 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.42954557 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.359618398 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.766710634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.974329447 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376631587 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.355490723 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.89155533 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.544267261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.592714044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368091528 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.787849617 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.362354393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.357182925 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.357121415 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.592202891 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.366611577 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.355114139 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.881358835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.382141068 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.430929323 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.357530078 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.356807524 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.615857627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.362538454 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.6053578 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.365190395 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364466138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37641144 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.766350444 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.363087807 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.989031659 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.378840972 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.358381833 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.522774588 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.606596664 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.934177527 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.378158193 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.620510423 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843914823 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.447618684 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.36166925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.861375779 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.452521518 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.363980745 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.361677145 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.360124994 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357526571 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.403890345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.431005106 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.914758503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997336775 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.90223667 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.456963638 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.378222845 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.358323903 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.882984403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.385471715 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.3589173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.763976278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.994452002 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.380170535 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36651114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.000055931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.382653028 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.435178585 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.369135574 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.778384564 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.364588052 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.4057815 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359942716 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.370860371 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383514961 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.435953144 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.365562845 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.36106341 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.965527979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.552202452 seconds)
  done (took 178.472909584 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.353937699 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.369744036 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.365807494 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.352660663 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.351683067 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.359846931 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.352537299 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.353914728 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.359162457 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.352580587 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.352815125 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.353099351 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.356067754 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.352449906 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.365332421 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.360400975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.962110999 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.356764734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.355035258 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.370955733 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.144999535 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.362369068 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.35328415 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.3717825 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.355121045 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.35637687 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.361585241 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.357385531 seconds)
  done (took 152.690817597 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.362387193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.917464927 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.387886997 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.489772709 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.387022556 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.361109815 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.487286679 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423888428 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.384196902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.360006755 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.359829016 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.657810245 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.371368848 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.864486839 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.54889155 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.512186173 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.861485873 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.380444669 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.361024762 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.361022939 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.490223436 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.369075899 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.657347928 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.922213576 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.387512856 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.913785197 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.354470964 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.363642717 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.361690699 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.914253661 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.378861759 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.661376827 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.445222887 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.424670377 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.940634141 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.890272466 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.890940956 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.512491307 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370283745 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.361955526 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.362325238 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.345901467 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.918738227 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.389635011 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.363251012 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.909344941 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.390659258 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.365949764 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.370213492 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.362355895 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.422090104 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.44673521 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.687218825 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.929539091 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.461501351 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.383086245 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.491743161 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.751979719 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.366746992 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.865746154 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.34723915 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924979097 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.387968571 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.348451371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.364322127 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.370054448 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.509930756 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.499659366 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.877020749 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387231851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.872463299 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.530855518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.367860706 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.364497304 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.365988153 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.923795884 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.893446558 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.531786821 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504321842 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.561713708 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.358329277 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.363994615 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.34915766 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.439617222 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.372025324 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.925567231 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.891536274 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.38500792 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.3669837 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.367782855 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.367107799 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.535889408 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.94563449 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.463252013 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.864478383 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.681373552 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.667968427 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.371388851 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.424827028 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.387294305 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.665716632 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.368964491 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.422520443 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.816762415 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.673127627 seconds)
  done (took 162.721355409 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.604942835 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.597906855 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.456383302 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501624047 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.951613732 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.920100066 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.618021599 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.502025866 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482342547 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.624179888 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.496593185 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.457948857 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.533671911 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.445120294 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.105805023 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.454945153 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.478878606 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.524525987 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.478012591 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.402089876 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.010824536 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.645325018 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.539829575 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.244760325 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.458009974 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.13802207 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.924852849 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.899010228 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.543704428 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.700561748 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.909860563 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.52061441 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.330244952 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.039427436 seconds)
  done (took 65.820880964 seconds)
done (took 688.928918262 seconds)
SAVING RESULT...
DONE!
