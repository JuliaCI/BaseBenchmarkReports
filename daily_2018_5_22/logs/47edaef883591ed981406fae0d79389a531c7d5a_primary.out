cset: moving following pidspec: 14248
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.462861807 seconds)
loading group "string"... done (took 0.889246631 seconds)
loading group "linalg"... done (took 9.742658031 seconds)
loading group "parallel"... done (took 0.184217636 seconds)
loading group "find"... done (took 1.639087564 seconds)
loading group "tuple"... done (took 2.180528885 seconds)
loading group "dates"... done (took 1.502744823 seconds)
loading group "micro"... done (took 0.220529616 seconds)
loading group "io"... done (took 0.613297245 seconds)
loading group "scalar"... done (took 46.837262716 seconds)
loading group "sparse"... done (took 14.37862202 seconds)
loading group "broadcast"... done (took 1.26671235 seconds)
loading group "union"... done (took 10.489315699 seconds)
loading group "simd"... done (took 2.746373103 seconds)
loading group "random"... done (took 10.952647332 seconds)
loading group "problem"... done (took 1833.385735637 seconds)
loading group "array"... done (took 24.950074813 seconds)
loading group "misc"... done (took 1.194646443 seconds)
loading group "sort"... done (took 3.828913795 seconds)
loading group "collection"... done (took 19.609140776 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.726114318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146674141 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.229354627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.365240874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229933627 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155051433 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163772136 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.577143056 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.978972431 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229080706 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148216546 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.578023475 seconds)
done (took 6.181402401 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250420277 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073685119 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168876247 seconds)
  done (took 0.83593861 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.083212859 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178522499 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10633182 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093207372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106735927 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10574703 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.106919027 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10579008 seconds)
  done (took 1.39605687 seconds)
done (took 3.167858305 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520070904 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.858893944 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.584998362 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.157373745 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310959075 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.411911706 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.331417896 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201574955 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104449824 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.101567117 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171439053 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.443247506 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474221922 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.04850926 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103070068 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.090900934 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.125451137 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.803390135 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.074973654 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129383557 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.561643752 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.208343959 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.106452697 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113749567 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19403109 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113814969 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170496487 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100110749 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.648830389 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12504063 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.195379939 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.092182331 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.153809833 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.237848638 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222073521 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.103482977 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664308436 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196649854 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096445592 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.0965796 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664226298 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123705214 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.161523571 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100174673 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087189051 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180452217 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.111683498 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088510398 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.1083973 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083907094 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162970345 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463845372 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089462963 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.161635411 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.087977392 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701643916 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094624113 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274118273 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131545737 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102912601 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.07200859 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098299374 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151124266 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.104197601 seconds)
  done (took 20.550699591 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.153531259 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161456734 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.087638979 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137685461 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139047655 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089714704 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078123457 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087688418 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122228308 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.231524049 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134604586 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.165226191 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084586764 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082962132 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138271334 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246267465 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.114776979 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100934706 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096031482 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.099432149 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121263319 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107369273 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103954174 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091403662 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178221388 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198370303 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103305737 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116648593 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094838623 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109957364 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13616502 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143450763 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084420477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079422183 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182821317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.115748984 seconds)
  done (took 5.134360144 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219066321 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120547907 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.229129036 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172263262 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14279975 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161412928 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149090938 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.291412195 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.294446836 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.185077471 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174244834 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122670941 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106723379 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074094413 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094860876 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073987008 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.630091935 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180479825 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146767193 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.144429245 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099977569 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096339668 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385165029 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093416925 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.075179651 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096135404 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071723663 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.21442016 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096376241 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.188706015 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.079213384 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103207074 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123983838 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189859093 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129204354 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122276729 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097723904 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091782032 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213369084 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09284866 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087322482 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.087839694 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128228751 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124516351 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114144658 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094975654 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105436673 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231850253 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078189164 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114056965 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.144295826 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.205217543 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.114238514 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.091954893 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325500465 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107808628 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082193322 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093257991 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.329361974 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125081982 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075902238 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.090654201 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081141525 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089097079 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434927488 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102625132 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.4336245 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09094099 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16127239 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09349458 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100333048 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07939742 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097204065 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110267452 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077261893 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090668858 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073949608 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090997703 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073970613 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096437122 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112413896 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079443979 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093497038 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150668796 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089853131 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10930559 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117773439 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079471875 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088826457 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121263316 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076131557 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.094405787 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166673443 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097776752 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098621311 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094967264 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135287949 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090380787 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077330404 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.242463861 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090145072 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116027301 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094007014 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107731403 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109036656 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089822626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078074523 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.088645235 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073984297 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155826475 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075758724 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091919206 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.092364069 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090201706 seconds)
  done (took 24.040007685 seconds)
done (took 50.317789413 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.511400104 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113776166 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1137382 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097732175 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114672041 seconds)
  done (took 1.628747297 seconds)
done (took 2.277965001 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.371618615 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179903385 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121091658 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17917622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100502757 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.18602898 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184749137 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09734521 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214345473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093756983 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17966151 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093331483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083360955 seconds)
  done (took 2.762934236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093840131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12224414 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094364798 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108804552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073109498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108050468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106243367 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107318307 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106388244 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085254404 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089523322 seconds)
  done (took 1.742214253 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090998524 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11614065 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081335936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105546822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077000862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105323809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087901445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119705937 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104699362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08595476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088866946 seconds)
  done (took 1.70879674 seconds)
done (took 6.855508743 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.132933309 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.625074449 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.142785563 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.194466246 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.368374313 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.243190329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.582056519 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.159217231 seconds)
  done (took 11.29903754 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.173373557 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079119163 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09643069 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096552163 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08181377 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097160557 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080503973 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.0950412 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08163786 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095162319 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079697491 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094460387 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079881529 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095090593 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093068793 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081958933 seconds)
  done (took 2.222916068 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119986751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118459626 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102275501 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10599002 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085276414 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101588933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102964137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088807886 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098178134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085544604 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104661622 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103645491 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088076962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098898105 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101786638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093705716 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098295189 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089021609 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103999954 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103199236 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091278149 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101132901 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103538512 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090352772 seconds)
  done (took 3.144942245 seconds)
done (took 17.311943955 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17243917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.093856775 seconds)
  done (took 0.924726563 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146347202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145893107 seconds)
  done (took 0.954412443 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110709547 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093839273 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137329213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113600209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079334937 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093239318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130726605 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080096727 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093836495 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079918279 seconds)
  done (took 1.681266877 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085033074 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098141396 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091572607 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141078868 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107297257 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098458133 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084892912 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098743343 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085633511 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096412747 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10208237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117541657 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088906839 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12024588 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098843877 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089835955 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108482369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100784926 seconds)
  done (took 2.483246874 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079841826 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094534429 seconds)
  done (took 0.842691475 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085923958 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095090037 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085947048 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099194637 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093644712 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08064333 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093613108 seconds)
  done (took 1.30187487 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.552620248 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271069833 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372698232 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117452536 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140970559 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.394659643 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14094593 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109737815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097260248 seconds)
  done (took 2.9070458 seconds)
done (took 11.761172158 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08657717 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.230196042 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644462547 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.102815411 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095251654 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.138529533 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.315951773 seconds)
done (took 2.286218414 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341651238 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151354564 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085958537 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091597885 seconds)
  done (took 1.337444067 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075363898 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103440796 seconds)
  done (took 0.851313398 seconds)
done (took 2.86556272 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078854073 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076098173 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091772293 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076516807 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.09196791 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077573513 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09109772 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075853111 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.112591232 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.093046706 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.075838268 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091970081 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077074931 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091983557 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077698674 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090702053 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076924408 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090927735 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077166682 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092137803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076344874 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090134475 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076298295 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091536691 seconds)
  done (took 2.767775329 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101796031 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097021962 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.098839499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08441313 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100453956 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085021675 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098122164 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094714504 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084634234 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095117456 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086571661 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098807113 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094213411 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087988181 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094869249 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086172546 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099176607 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094766038 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080612569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100663994 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083927567 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095595576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098898645 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083764551 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100800604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08488413 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095582815 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09651035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08481884 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099814644 seconds)
  done (took 3.465503071 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086938203 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088412924 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078195396 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.098680641 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075495974 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093408572 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075579845 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090456027 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079970158 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091816588 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079999068 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09121523 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074955633 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094115571 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079762564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096909101 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089315134 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089835376 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074336654 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094006842 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080789436 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089565941 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078419901 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091843535 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077249425 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089345388 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078714787 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091122573 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079750443 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091600067 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080298206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095711269 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077073289 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102602808 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081981406 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092249868 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081750295 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089563235 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078899272 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089926441 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074705168 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092857256 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07514753 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101463047 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077833801 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093654412 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075030586 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094872459 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078942695 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098757228 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088022243 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075625204 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095616003 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081200488 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096150221 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074536617 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092920055 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074486003 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093855972 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078163043 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088454025 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07544599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095904737 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078981996 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110640726 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085949329 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08925564 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080458015 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094359233 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082727221 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096014661 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105306211 seconds)
  done (took 6.920565264 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093785029 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105056663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080075887 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096039445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079200653 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093521651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08515012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095117675 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093332806 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087908843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094218629 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080156661 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095729593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080295641 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093933034 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081084767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103152862 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094218439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079404054 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094205194 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079232666 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100767708 seconds)
  done (took 2.66852889 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.255277664 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08649382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1498986 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112018997 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116622905 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095890281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100952268 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100836077 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084605526 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105358071 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103611136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085025157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117207275 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105664676 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090588502 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107417667 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098617944 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092643824 seconds)
  done (took 2.692985573 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098549996 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097917775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104020634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097519157 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096255936 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081466437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105385111 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112328559 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082893783 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097161727 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092154541 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097649596 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081660337 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097853799 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096883323 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082436903 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097007308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083671108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108256859 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105798179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089498608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109365669 seconds)
  done (took 2.804476937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098047105 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098055181 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131312951 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086014956 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095778618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080169233 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104180463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081981148 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.217519977 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096947082 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083774491 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094660028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091159208 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097495749 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103594786 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081908564 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096132395 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082455928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097217237 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081192281 seconds)
  done (took 2.689339638 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173379467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097877904 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111197763 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12531842 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09599704 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110707202 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126740962 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096805869 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111168455 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127689639 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097893215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112955745 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12533944 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121270939 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096446433 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124827465 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125814823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124634336 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096587607 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112893487 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128653721 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097932594 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125501798 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111694243 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095763108 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112302143 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111001639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105830334 seconds)
  done (took 3.896142126 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078457006 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077859343 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093459196 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077703074 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093832773 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077521502 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094667778 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078340877 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093913056 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077289059 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093981854 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078952285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093858128 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078538049 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093898062 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078313404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094365719 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078699578 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094308158 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078412245 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093518506 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077755073 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093941903 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078719319 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094122124 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078317161 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093543094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078921927 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093571778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07923471 seconds)
  done (took 3.262744899 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093004481 seconds)
    (2/2) benchmarking "in"...
    done (took 0.120322828 seconds)
  done (took 0.907852408 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088227303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115288747 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078134374 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094609825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088851503 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094691655 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106516248 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090432956 seconds)
  done (took 1.450067339 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144159528 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.147078684 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085947761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108981091 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.144359801 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138749642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141863362 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086105227 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.097451736 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.074490166 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138025398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092764785 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083850862 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097005226 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.082977346 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105391447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095030586 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090487024 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104876231 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082350472 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102378604 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090426517 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102444245 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107216667 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075911206 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102962672 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088266984 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109622164 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09627267 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087555455 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.098473793 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08019431 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100741585 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085041499 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097601689 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.143303554 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109400695 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081931407 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10046916 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086315839 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106720896 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079635909 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103034453 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096837782 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088053441 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101324796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085868634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096104668 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076080841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092638826 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080987117 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096235652 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079655564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102302343 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100921129 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092359895 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098348698 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.077416953 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095261224 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079265163 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.099694547 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080050788 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103092471 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100376892 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081044295 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101121561 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084315744 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098259425 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.082115868 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097125522 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084771209 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115733648 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103396065 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086227981 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103967657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079928461 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098252072 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103392003 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083884438 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102815058 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084273133 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104362935 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082258478 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096301274 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.095706052 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088416149 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097800961 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084794623 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089542619 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094960229 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099971379 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080670733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093422478 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084260541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.096208217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099297292 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078316379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100652007 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079959687 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101886141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086356031 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094453528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087348 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102611437 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103179356 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084944689 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139403961 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09779342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080737568 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099974675 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08641726 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.094428781 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083120781 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095696794 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077379676 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096968581 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085584785 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101119048 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097265631 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085963806 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098816366 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087486891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099862885 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078962788 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09683485 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084185226 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107350677 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.103096811 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082867221 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096902298 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081266803 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10094387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084202058 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.099271918 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085887507 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098269526 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095635708 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081536321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102089149 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.085344822 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097074319 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084203622 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105268994 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100065459 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083536833 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103174708 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079180998 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.092743974 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086180862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.097690087 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081269865 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106558136 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097041038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083118621 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.096990923 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090073058 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099003128 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08582166 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099864452 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086305722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103020208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091403359 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081577693 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099720746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087455678 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097869969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080950893 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097332845 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087272436 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.094740788 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083998828 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094100684 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077884447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104817515 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097572176 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084600755 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096460664 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098023533 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111490146 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086404765 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101995302 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099833552 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085857756 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100095185 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083762218 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105788947 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08743565 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09837675 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084569081 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102320584 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094296352 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084511563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100354438 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085846904 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092196648 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080964193 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091951229 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084167695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104039427 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084406672 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103303693 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082455288 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102815019 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110204656 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081129362 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101581897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076098295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102901203 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091433148 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10503604 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103381007 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.086943664 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09897031 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082180572 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109337131 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082961123 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10099135 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081967782 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094255183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077553128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111370516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100099137 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.081109052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097447206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087453177 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103986285 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08359567 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094752836 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085315405 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106660392 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09742511 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086096129 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096557156 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082895761 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110517621 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076620757 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097040534 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105316911 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085819277 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096718635 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082358099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09998177 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087586823 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100488551 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090652672 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099603205 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087960563 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.099841832 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079676121 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098515652 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100770166 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078408201 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098526578 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086023789 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.098970081 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079957258 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107681309 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088094742 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10371548 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101286434 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085835585 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104613392 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089022205 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096570811 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087615654 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096603508 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077209048 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098358981 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.075627351 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099769701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.097038274 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086274977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100392675 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084118891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103246785 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087021177 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099204295 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103666469 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096845348 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095491419 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077651473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100298803 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101276987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082173717 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097827345 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082538279 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102625881 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085488278 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105465785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079355181 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097900175 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086177494 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097891249 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103789764 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087542849 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104872974 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079980946 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102643739 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081102659 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108170911 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078190166 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101567241 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10105334 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084972809 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099699099 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082747652 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098604591 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077633683 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098939442 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087198585 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095076762 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101789848 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084663783 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100026663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.078709689 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097429377 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088149319 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095240187 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088995036 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098148671 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077973882 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095128686 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086914285 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101692018 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10478848 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080266128 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099973215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087911392 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102238054 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079527695 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107700792 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088772315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104776663 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107884025 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07602426 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099422113 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090481502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098096271 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08288968 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100482488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078562552 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106800575 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088154449 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104619561 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100953446 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078179207 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097728867 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088717953 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101216361 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084693904 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099020261 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086292861 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.097989808 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085709786 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104717283 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084941612 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105962907 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102916662 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086308647 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100300894 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088646273 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098963224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079270346 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095365286 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082614312 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106712632 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075360963 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103397445 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086232842 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099769001 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100872499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085399809 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098752852 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082901967 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103640694 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080700056 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111279369 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081805953 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098434287 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086091152 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103785995 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094579396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081602527 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098295001 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088638902 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101378223 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086815836 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10231901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08527934 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.1012663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086546201 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104121325 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104875866 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078976983 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105902556 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090151816 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101286895 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082394932 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101436428 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078893439 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.101196418 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105376583 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082598597 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109046441 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087712517 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10119843 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08268409 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105465781 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084912737 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105689603 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096790632 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085669379 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095204561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088766738 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102228084 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088421237 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099303817 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079171464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103669024 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085278981 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102502813 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.1055376 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088271662 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097621212 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078841264 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102186206 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.081913787 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110483725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081493218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100698354 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100978483 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083866526 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098701555 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088833275 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09658104 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083006186 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103879492 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08560078 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09801302 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079672957 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104268244 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.084767057 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10283233 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102650179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079960217 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.101395919 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088976896 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101816122 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.077917774 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100496443 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089128653 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.102522356 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099101824 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080325144 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111484007 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088791968 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107130285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081442883 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103845782 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100322088 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082985327 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105740991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083174441 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103613354 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084107858 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104860902 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109240744 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.07832716 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097381379 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093143575 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106242906 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087979993 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102260799 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084788455 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106923599 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105990753 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083307433 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096593057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080369708 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097461689 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079346192 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101320379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092871049 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.102458519 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082872966 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104271638 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084469448 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103327423 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082928053 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097309171 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107111406 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082127735 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.107690252 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079118307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093793396 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083655415 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105233275 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081565246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098207052 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081263879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101775854 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079159286 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101032772 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108234482 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085596246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104761314 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085021555 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101377106 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084297945 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112169147 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081315311 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.101170663 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112819774 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08878977 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104366009 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08586142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107467939 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088110112 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101704259 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10624776 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084030645 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097722695 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090411612 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10700635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095855357 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103231238 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076902602 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103872614 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097427158 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079133053 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109282141 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088861509 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107254349 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084905466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100985381 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089878741 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101542101 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103659239 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083898907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102168133 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085979761 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099935338 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08493088 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098893537 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090040003 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107800829 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086216912 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107882301 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078271585 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111467723 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107208919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090032188 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099374091 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078922518 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097394786 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084105863 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10745798 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088321879 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102694784 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084058226 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102916434 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10417842 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086759716 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100042539 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089399951 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105277872 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082685465 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105007396 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080067615 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098702049 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0818959 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105958644 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088909303 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10564152 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111229249 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088570665 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101833689 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082758519 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104755342 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084005167 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105350419 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084681536 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100479956 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097740605 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088591803 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107059974 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08569554 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106447925 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091510888 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10220269 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087888795 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109969307 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104367084 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082996688 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105082202 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084354148 seconds)
  done (took 56.95040635 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.159435622 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090515216 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101521976 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083959413 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131753 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103659799 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083329517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10409267 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085714074 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116599136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100638132 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084146086 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127101215 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134135912 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129450633 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116966059 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083826999 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103367257 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084559608 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10346977 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106229691 seconds)
  done (took 2.979958117 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108422852 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121883733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119157546 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123308808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095577639 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117960262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119209966 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118362906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104668892 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114011424 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122104903 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117809943 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096745053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114566887 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114304623 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114167902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104838361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113037592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120769395 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.119786494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097031997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119760298 seconds)
  done (took 3.242980032 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092112993 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103784222 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089157739 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.101155456 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087571778 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101625049 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092370268 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101313747 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093610774 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.1017081 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080318404 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099681665 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084488659 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101430335 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080858002 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101167037 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110261531 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086373995 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106890088 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082906031 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11796352 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.083915283 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102069846 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080815461 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116781531 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106676173 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084431707 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104178194 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.078772646 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105021077 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083432806 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104116398 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087619083 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09966074 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079109531 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106214009 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086361861 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10172123 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.084312404 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099132974 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.083773914 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105800251 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106994078 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.083560911 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101519782 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081953254 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105461704 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083243645 seconds)
  done (took 5.309116754 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122756096 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159401119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088842581 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149806456 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12447637 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119149939 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088119629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127783615 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107020114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.107444766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106837104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127617977 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110530704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112622687 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087983542 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108582686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092586803 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107663509 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114170316 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090485533 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11682817 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110173792 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104312883 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123913525 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110854692 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106724702 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090506544 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112430398 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123094138 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099326027 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11281402 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114746035 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.106054693 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112310666 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109143412 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090749982 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12691864 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11091094 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090615588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10696285 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108573145 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093892991 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111242175 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126736081 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090856509 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112515863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109424705 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086732749 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124774833 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108624071 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.100112566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12669571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11145152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091408254 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113097063 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126254888 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110071813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088117142 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110236341 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122029307 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088434636 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111227144 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123671679 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089860072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115912667 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126136159 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094518146 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112133369 seconds)
  done (took 8.388732723 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120926398 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114662216 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126758683 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126403344 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095005648 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114333137 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111644724 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095374478 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113770333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122653731 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095304944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.21762533 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089689948 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120744539 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113454825 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096266264 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11364957 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112856066 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095856529 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112929184 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112725209 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109893455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113033464 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12705542 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129466129 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090972464 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113516656 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114116486 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107134663 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113715119 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129309433 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112906045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095185206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127349342 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129699775 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114318146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087191377 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113466268 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112782487 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094809176 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109062878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126855251 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096079142 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110462123 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095574817 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114340799 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126828914 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130190378 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120527534 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104034603 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113375917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127623839 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112775045 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095088012 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127690775 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136253555 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128128061 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127130904 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095754352 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127586383 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127253052 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137283955 seconds)
  done (took 7.903714235 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084800679 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083929852 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102934311 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083837277 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105429425 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0831324 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103036598 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08346509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102962526 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084518958 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102508622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083367398 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103277737 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084157498 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102772828 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084175684 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102428292 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08459952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103019491 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083881327 seconds)
  done (took 2.610192174 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097581468 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127304002 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087475815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118173642 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107956064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096570967 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105842615 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088039186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109062621 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106648512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099821848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119352105 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107739901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097119633 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118574484 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11464282 seconds)
  done (took 2.463335146 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112305527 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128813951 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.162310595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111378918 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088529111 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11573543 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087734264 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.110641725 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104842447 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094547561 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110521916 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091387649 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10638256 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0878102 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106969704 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109314814 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087227107 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110173643 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089283634 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163145573 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113212141 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090666335 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108460269 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109958911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092052013 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113365543 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095241915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108523361 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.108490468 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088552249 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110485727 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096730372 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107150692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112024951 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089195372 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108948833 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087837854 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107760865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092099822 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106905149 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089049857 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111026843 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105734554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09134598 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104269599 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089749886 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104771443 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096592564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108736547 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109553542 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088144549 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112127827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092683958 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116877906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114606857 seconds)
  done (took 6.524264113 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103854853 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109372933 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103178122 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103801047 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087732477 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109776371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108249767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091101022 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109054521 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084991072 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109636625 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09023567 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108920721 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107860309 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091934716 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109400363 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086436649 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109221163 seconds)
  done (took 2.588598349 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09443912 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107368609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094640207 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106693807 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087885623 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107898495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085142861 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105381935 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087039446 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106176192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086437687 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107133484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085485528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106505751 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106588824 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089012208 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106535288 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086095567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106109789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086222694 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106812945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086195115 seconds)
  done (took 2.907814803 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100276236 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.162892064 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.117933581 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.174932226 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107243951 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.085823281 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117970328 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.106238633 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.107159651 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.104118621 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.085124841 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105137404 seconds)
  done (took 2.143600058 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116154484 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146961416 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107364141 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090122151 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121661864 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09556525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114540809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115426929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124223018 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111655291 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113671063 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124902794 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124495156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125836048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102125284 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120024443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112553279 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095225945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107842449 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137724731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094846963 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126011099 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114485496 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114886416 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09565198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128485083 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126271697 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131851475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0958709 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126419388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120162461 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113938151 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106578373 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130004697 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107806482 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125016096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095538148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138005666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120072115 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12723388 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088872694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119853855 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12431619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122235406 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107200806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114789089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122259736 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094667899 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112860717 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144673127 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121141731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12706459 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100466795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126504678 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125189997 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145413009 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130366847 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127910177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119754762 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111822837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127793654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119907989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127133276 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131701467 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100811663 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128702642 seconds)
  done (took 8.543537387 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13447739 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109631208 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114285632 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130184023 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1086466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115091746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113385321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094449933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114331417 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110723986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16662569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096144766 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126796226 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127429603 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114232818 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096906934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113476396 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128529857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090491982 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145372085 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115225882 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127789043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12820807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127723531 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112220835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120586071 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114636581 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094362077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115478246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114720338 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103822543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115669562 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128811539 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108615694 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108648832 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114553432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114221511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103820978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115266432 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121644548 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127525161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137763866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097343946 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114984896 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131068553 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095258908 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115040361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109862193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096414911 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109184848 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131871153 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131494599 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111524531 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128381395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114654332 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114052649 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096141129 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113623568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114260289 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102626215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12857119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115053542 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14591261 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095391741 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115732108 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127871961 seconds)
  done (took 8.45683198 seconds)
done (took 155.212166681 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147635785 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.169136543 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144468087 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.145814723 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100650227 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117759318 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135466465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145745887 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081710027 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101733916 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081936173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.105258162 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.148235353 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102068695 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082143674 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105196464 seconds)
  done (took 2.683829763 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201999113 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.313530339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122688101 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111496472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091125514 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104925331 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091399342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113385298 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105624445 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.096634228 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104138166 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.084468384 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.117533965 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104906227 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086723409 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106287394 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.115992889 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085582725 seconds)
  done (took 2.937823598 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111534971 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144121344 seconds)
  done (took 1.038459984 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122570787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18872099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321166472 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154580201 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132613287 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.108555308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156084561 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124115695 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197262463 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127622584 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12744432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107844423 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117585375 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117286683 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120198983 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090132331 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138407775 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11837046 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099134184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111272405 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134658274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092749501 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11627987 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098558066 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.207984927 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10790228 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111168724 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.111363478 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091721424 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118243798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091584966 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129036718 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127307533 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.198347141 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097228136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193021284 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097853886 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109586448 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118150513 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089845598 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113827224 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112171792 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105835541 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.108940958 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.109916398 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099111264 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111058005 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090440142 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11301524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119989413 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112175911 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092818687 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189949186 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099752865 seconds)
  done (took 7.580638235 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.902405257 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150139784 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088851109 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.02294992 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136865581 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126201351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.880306916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131907549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.272350284 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.8973533 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10406817 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121980576 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255029941 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287973089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.185799766 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36593145 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.755406708 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121714027 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119646004 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158400428 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118864073 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135214251 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131696523 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.4408882 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.088332111 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110017622 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117890052 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101448722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.19333582 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086950501 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112531826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217412321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.279173402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222454813 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107922002 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086886481 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106727384 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183847703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.293966323 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.242806669 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179318929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10444092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086135599 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117184071 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130205666 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083894837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198250647 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188108236 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210772585 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093549482 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121994454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120601613 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.114577144 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175562965 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103455146 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365282118 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366536174 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106650717 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099090588 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124284119 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.288008834 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105759491 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253532974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135210295 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.235445414 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088296072 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817482612 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.201894912 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087123653 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115011463 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096998592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115691076 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11550354 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174993561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388779136 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119840911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093918133 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106782735 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.263643223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088490179 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105923344 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180734111 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108811309 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098590336 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122036293 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118680153 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186932287 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.284533237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100836881 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118489568 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113527847 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101502953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110512772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22498615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.262024045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174884645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.24842 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098946166 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.199142551 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181405139 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11507959 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186601875 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119042236 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123801275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09576198 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.262405064 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148318214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088298235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114172164 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098683465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.170771357 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091300888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11837719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183781287 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501015499 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180943287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105352403 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092098611 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120994837 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176217084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119482467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286380656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119912971 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182480116 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117904459 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083732974 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121853468 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.200235729 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097243345 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120101477 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117798383 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098238352 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.287739164 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24349403 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120721042 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258219264 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182750529 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097360182 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.209483168 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098779859 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.206209929 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118878254 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096554438 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110578555 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808271754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123269825 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098443686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115278318 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199953358 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106535106 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090106264 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107408418 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086124994 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832417074 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109261042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085901613 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107470028 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095815058 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11892973 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116667644 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094961056 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.197587486 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259543747 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121720674 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096833971 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10791887 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176275563 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110955942 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086199577 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108016536 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087189388 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11992589 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113339258 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089983553 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207368859 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1736177 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.245465884 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567956054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107648925 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087442653 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.277832086 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088352437 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332945439 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119069095 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254336662 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.202501798 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085783527 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363878203 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.204491173 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205764895 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089955441 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.209827207 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083406257 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118742736 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.194722176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088448093 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117113254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174099828 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123813904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121469622 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186573164 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086428611 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26419448 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084037734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.205327231 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08899137 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116354599 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34118282 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10778491 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123872607 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178253609 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114787218 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088831407 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.682458193 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087721745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123430718 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116040217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.251157225 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18058376 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118736095 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119339122 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121211566 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179091846 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.249052852 seconds)
  done (took 46.211567243 seconds)
done (took 61.227381261 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315081551 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273181013 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.3299786 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226294566 seconds)
  done (took 2.026480744 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222737003 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156697176 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.186050375 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107577279 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.194953458 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107111525 seconds)
  done (took 1.776015357 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.527426502 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.405150557 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.36468534 seconds)
  done (took 2.101190622 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273964591 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267016717 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.357558924 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.486341074 seconds)
  done (took 2.31950683 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.248798278 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131199105 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123834599 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.176811875 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.214106726 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.216703144 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147879202 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.164167331 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.110029833 seconds)
  done (took 2.388817483 seconds)
done (took 11.41729944 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.337855997 seconds)
    (2/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.14261031 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.275921671 seconds)
    (4/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099235509 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.164342502 seconds)
    (6/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.326726877 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094531811 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.22298882 seconds)
    (9/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125764469 seconds)
    (10/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.253032168 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096877281 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.312950821 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.195974141 seconds)
    (14/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116988586 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.327950722 seconds)
    (16/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.334626901 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.198783705 seconds)
    (18/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.235658041 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125271179 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143509377 seconds)
    (21/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.218699714 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.316645249 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09406669 seconds)
    (24/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19067251 seconds)
    (25/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192406254 seconds)
    (26/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.079671032 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.148680653 seconds)
    (28/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.174227706 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.207216517 seconds)
    (30/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094112919 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149158764 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113704633 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095432666 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.114549405 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152407371 seconds)
    (36/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.158782708 seconds)
    (37/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.308415369 seconds)
    (38/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078891364 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116639868 seconds)
    (40/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.179739115 seconds)
    (41/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.317850003 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183549733 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115019556 seconds)
    (44/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224524521 seconds)
    (45/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.197279288 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.146680587 seconds)
    (47/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.232596363 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094324491 seconds)
    (49/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0998051 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109299091 seconds)
    (51/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106104471 seconds)
    (52/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.171756508 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116145399 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07928335 seconds)
    (55/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.191837376 seconds)
    (56/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.115436441 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.156675783 seconds)
    (58/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.21839971 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106728415 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095013577 seconds)
    (61/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217855206 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114624708 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.211654123 seconds)
    (64/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084176313 seconds)
    (65/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096847647 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078943663 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078885259 seconds)
    (68/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179733339 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.330213194 seconds)
    (70/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076817171 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131980158 seconds)
    (72/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.17470186 seconds)
    (73/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.192764672 seconds)
    (74/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.109010681 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.284001501 seconds)
    (76/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078187889 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115815023 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078173393 seconds)
    (79/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077645803 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103694209 seconds)
    (81/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095911457 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.27190473 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095560221 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13180138 seconds)
    (85/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078442084 seconds)
    (86/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099261678 seconds)
    (87/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095969394 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114445518 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096384387 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.19267193 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131373522 seconds)
    (92/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077155541 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113082063 seconds)
    (94/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096137996 seconds)
    (95/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09639915 seconds)
    (96/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.15292867 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120980525 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077305 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108611035 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095917309 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.217244109 seconds)
    (102/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097729883 seconds)
    (103/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.161701933 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124291788 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094499359 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116041178 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111858518 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127018671 seconds)
    (109/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.160373715 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.099025749 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079805263 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077764406 seconds)
    (113/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.196554205 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09647 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079156668 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116712057 seconds)
    (117/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082668203 seconds)
    (118/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.171194346 seconds)
    (119/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076805918 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115795151 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11513061 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078790841 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.214206636 seconds)
    (124/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.077253015 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118498573 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11533743 seconds)
    (127/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077167498 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085722989 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.133051907 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132146171 seconds)
    (131/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.155570235 seconds)
    (132/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099985874 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213969204 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078896852 seconds)
    (135/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116790196 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095606559 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116332155 seconds)
    (138/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078973374 seconds)
    (139/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.10445183 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078701153 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114648879 seconds)
    (142/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.08432987 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.178489935 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213522521 seconds)
    (145/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.194553928 seconds)
    (146/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099274481 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080614485 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.099267484 seconds)
    (149/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.108302804 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.101925338 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096282744 seconds)
    (152/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.212725578 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.196820419 seconds)
    (154/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07907729 seconds)
    (155/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117476694 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077050401 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108175064 seconds)
    (158/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077507326 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107583796 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079380355 seconds)
    (161/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106948872 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095399825 seconds)
    (163/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.112337587 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095204392 seconds)
    (165/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09978757 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089664286 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132699555 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079752569 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077441641 seconds)
    (170/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.098710784 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079084923 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116824666 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087784721 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.099897439 seconds)
    (175/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095830719 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100642882 seconds)
    (177/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084913972 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.097231112 seconds)
    (179/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079206285 seconds)
    (180/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078857085 seconds)
    (181/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118292518 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090901397 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100470812 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115643907 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079818095 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131960824 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079256057 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078169206 seconds)
    (189/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.099294447 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079884773 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116617141 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09571644 seconds)
  done (took 26.892215796 seconds)
done (took 27.708454706 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223021233 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103524747 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.120573224 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118803796 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.176607056 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100034284 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.13036927 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.121615985 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103240211 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.115568983 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087504952 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126082585 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097720832 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199374836 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.101742928 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11160655 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090118759 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124919096 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127670088 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109064521 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.175792662 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112171475 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103018498 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111530551 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177275784 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112358291 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099070588 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.344089577 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104728107 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116091819 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119112729 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090625232 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127833117 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106984437 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109412724 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094791651 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108407262 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086417222 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116682967 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096469292 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127689927 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115950719 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.099550041 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112238146 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096016646 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116672781 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10846699 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.102796677 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108929885 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098716058 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111540359 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107920289 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115181283 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108541572 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089815383 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111636042 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.105241555 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108649279 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105391716 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108927946 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09083048 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110503191 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11802914 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087677825 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114829306 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.090617788 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115545325 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098026837 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115677304 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089959639 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108888407 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094094492 seconds)
done (took 9.248344892 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095008444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172401575 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176203488 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1825553 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.143043229 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130631436 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130392186 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119182588 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.129413402 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.134389419 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.126872198 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14163643 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.185820953 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.125792819 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129285897 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096612878 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12614735 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097580305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206320979 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115348381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14605389 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125719232 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14759683 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.110550918 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11756926 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.151105545 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.098284835 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11770562 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115958735 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10466632 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13733299 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.096570549 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120280899 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130940667 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106580802 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123615063 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129661203 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09674399 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11623238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094061802 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130633768 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127994749 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093814864 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.129670018 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117684635 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103857937 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125081339 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102639031 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120860314 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119322095 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098832044 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146242439 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123907279 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106726041 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125860951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122377892 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102970836 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123395595 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097837309 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123228067 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115817759 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09590879 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12008208 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143252038 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098094338 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124542736 seconds)
  done (took 9.039422565 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117579563 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15283866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127180454 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105202297 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.124174701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106785968 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085465816 seconds)
  done (took 1.676929326 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088043998 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179399271 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.177061607 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.177648138 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.174969559 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.209922692 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109847138 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109583959 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.145585806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09950282 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.177452209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.230482066 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095449367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.127711865 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18175467 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086376317 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.203536949 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088278211 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122544631 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.179373225 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103775977 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141602193 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.126540464 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088890483 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.171785717 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113370004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233586499 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127121479 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116025249 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098619146 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123520072 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.195086798 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.175579155 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125538032 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092437548 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.175172967 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.172124406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123195057 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.188658584 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114714456 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.173729283 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100132287 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.123379119 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.101837816 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122608587 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.160632829 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127275752 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.102489361 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120692184 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.17998207 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122621358 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.173909086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.096722778 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120909048 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099471293 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123560829 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128907191 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101949716 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.181522338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126110605 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.174040956 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.175782345 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.174769661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.175347436 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133473249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.174417919 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.172506998 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098604948 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119751609 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122765835 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.173738475 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100798569 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123766605 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.16289639 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102160388 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.197462419 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.175236685 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09670069 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125198473 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.093205015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12047846 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088317606 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.163370418 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121288335 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096960447 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132458405 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125588392 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.101747405 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116002007 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13665943 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.102343462 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124604876 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128072344 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099872756 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128539511 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.176379192 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12289533 seconds)
  done (took 14.185413796 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091283494 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.110894723 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096740643 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113991814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090700612 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112979786 seconds)
  done (took 1.489242309 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119931146 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124077582 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.133909797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.103347274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181494229 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.182474418 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.184476064 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120935163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142287764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.112232809 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.202904067 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.186708303 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.184203957 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104430773 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.184663583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128070093 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.18328683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12345504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110253482 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121191484 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13032356 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.104956781 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121389727 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.172540658 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.126325627 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104015562 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123604441 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133236852 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110350464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120953431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126331091 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103381771 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118628896 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097676886 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.205478541 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09526445 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120054758 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.106705312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127884386 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126169576 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.185721161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099067854 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132746921 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130088942 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098396087 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119274137 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12971202 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100658386 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.197951402 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130514108 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.130221901 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.10234625 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127646662 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128848035 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095631713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120843798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129259197 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.18581936 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.105461268 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119222866 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124462355 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104230119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120781571 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.107376915 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127131554 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128749661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094865396 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125041962 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12113468 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103695078 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129667951 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.102283062 seconds)
  done (took 10.243555936 seconds)
done (took 37.49088647 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.113212439 seconds)
  done (took 1.987072806 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.895449416 seconds)
  done (took 1.771172725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.812258455 seconds)
  done (took 16.723410766 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543925038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.63620671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.948204417 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180228341 seconds)
  done (took 3.183847853 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956609907 seconds)
  done (took 1.848303289 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.374865062 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.254088111 seconds)
  done (took 1.508534513 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.682800456 seconds)
  done (took 1.570046272 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.0934995 seconds)
  done (took 2.970661615 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.369856503 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191018296 seconds)
  done (took 1.456318143 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.672314073 seconds)
  done (took 1.561972622 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 28.270658384 seconds)
  done (took 29.160970322 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238496271 seconds)
  done (took 1.140464575 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308251156 seconds)
  done (took 1.200751486 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.345845088 seconds)
  done (took 4.24104952 seconds)
done (took 71.209439891 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102744403 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127071594 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104551294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125376701 seconds)
  done (took 1.349175585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110756633 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125613738 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105529566 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122903753 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133144385 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103059599 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122802736 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10820413 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124548199 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125721307 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.10157808 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124927793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.104744938 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124217421 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122950725 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10293435 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128206873 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102124348 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125351821 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125452001 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101960423 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12632264 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126374328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.105466069 seconds)
  done (took 3.702578083 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100777634 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116447116 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097101551 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11661617 seconds)
  done (took 1.33390056 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110310618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140965108 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138947194 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.108414458 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140079372 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139481311 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098983567 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118613563 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099817866 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132026224 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.146705965 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120081456 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139966437 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125562431 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110976635 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116755483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103518596 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140433196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.132015678 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.111522908 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123602787 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131965865 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098477706 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137166911 seconds)
  done (took 3.866472903 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.209090816 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.11455178 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.148902795 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178226512 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.156398135 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.09867299 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150162428 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129066609 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.107882821 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.127318409 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.125958887 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.185376005 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.103979349 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123792056 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101529617 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130524838 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137518051 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128640063 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.171581331 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.106831498 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128672142 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.135000838 seconds)
  done (took 3.902681403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100723348 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115851142 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089023099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116463438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101125286 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119308897 seconds)
  done (took 1.54361104 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097516493 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.111398538 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092937293 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112481879 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092992688 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109548598 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087522606 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109983382 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087469787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109320345 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090187329 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.086431023 seconds)
  done (took 2.090571218 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.302368446 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093088812 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120058042 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115338812 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101204256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116059709 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133671314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092395386 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.254641789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088750625 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.13573479 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195885935 seconds)
  done (took 2.656550875 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221205487 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101933458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313501426 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380080405 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165529769 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174873295 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279989568 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178243241 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200865191 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145003928 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230439826 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141445632 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162161633 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188508238 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145674161 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.220202137 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184246727 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211075697 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155271657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242128064 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172802761 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173507515 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192511601 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160331751 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120147171 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16778063 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127688569 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131307398 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183320185 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181538521 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187790635 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155747019 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148196542 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216383209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245318925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192017965 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323873624 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139476313 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201832338 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193704097 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283705426 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145007891 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210840965 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162467429 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134677068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190753405 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162850083 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.191838459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112273954 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14671064 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220943313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186877049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197654629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145666911 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299809615 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153650771 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15471908 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185489916 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199121082 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202552514 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173452496 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125706589 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191682174 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191100395 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210092963 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.129465595 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180102817 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131255885 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182984905 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206132378 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215088929 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171627152 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.196493454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13882816 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171409713 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178487054 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160403775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186227216 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166160165 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099750909 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157749638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142172388 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129640597 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168694185 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127414517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216845086 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140723204 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.390263227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214798921 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166718692 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171128442 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172136326 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172661046 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153191792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126738074 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152689254 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.169473683 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141097819 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139059457 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165778001 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147717715 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133764815 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133811302 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127885327 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166021716 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157530236 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17803732 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171713474 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111787827 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17121413 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156564804 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164679365 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180289662 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194029678 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136998355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137126776 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202690103 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16320142 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14014977 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185350369 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198132504 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176374511 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117549077 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198683721 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205366843 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1235696 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224878966 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148422363 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114080292 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161874727 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165525183 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165366233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160078471 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10791123 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160294048 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231273665 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106659466 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141776925 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181869173 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132552432 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106902873 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14769945 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142738773 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147199523 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132541569 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144204095 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163557825 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166712399 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15971271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167926419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148080384 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205546261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136676385 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166001116 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128549812 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124066429 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193216507 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194041131 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134688318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208505133 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180288363 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228443923 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171172065 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133806028 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186685749 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110468762 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12583143 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172607613 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170157774 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172802094 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194988954 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199577778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202383171 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.137077849 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155354407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177570267 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18353415 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167754125 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.152397402 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168745262 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178262737 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126019473 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104384102 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135130895 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14674228 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109707505 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137507795 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193642449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172584941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217399829 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167733304 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14404361 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192804915 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106359348 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17245239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.208382432 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118530194 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197871163 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214308517 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174863315 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123736754 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177271271 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125568932 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103494106 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14078361 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178617688 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138288507 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138664071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125690738 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216363597 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187371924 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155527566 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212046789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177275872 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227172414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102463983 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173266125 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179586854 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165983697 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183490157 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11563218 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1699642 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187011629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150931703 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203674535 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170227227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175904411 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241021343 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162389096 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110028012 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157536417 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173714667 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150599682 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174040001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151678263 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114385165 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162104136 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14415952 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133054532 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19413065 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148768203 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193391575 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167178612 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184632882 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129890965 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153503571 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166953141 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151411696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100301181 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181188948 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201775775 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152690319 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165640247 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186139444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135619348 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.324473587 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223767837 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198239083 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143010971 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124242216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169806433 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169384042 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172352079 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189195358 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150909568 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189891556 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165704353 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148428544 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140099198 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127709314 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157880738 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163268443 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141389374 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162205826 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122555625 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223216166 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14555357 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140802036 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171095606 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154357433 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162337865 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147262945 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212627946 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164059528 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187381899 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16296724 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178652822 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209331916 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128672063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106503592 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133726649 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189257361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137279804 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166980901 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188055059 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204683524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165658395 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17425399 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143480668 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129923135 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141141082 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154808274 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229010843 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147919279 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119238464 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229663812 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134855808 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136189542 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172717824 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285509907 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150429219 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18452117 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.125195013 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273610537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107116662 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135909368 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169207611 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18185909 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15462129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164614377 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168232501 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149475468 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170614762 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145417779 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196662256 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240899279 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178546569 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187154386 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151178965 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166476781 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172677921 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187244726 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148003714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1283889 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171116187 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192377717 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222540805 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11502954 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169689995 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169482486 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166129556 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186910824 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139116968 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209144212 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135317835 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172730969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146369248 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104324271 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165455922 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211732648 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114201345 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187135002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165733538 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136262159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132943479 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159202206 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140351207 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150807091 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135389831 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191954488 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131835333 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169889417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18770511 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109055963 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160996629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152292847 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137532886 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123825954 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150660456 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14022129 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149745227 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215264581 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111663724 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185857616 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205273162 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175551641 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170091176 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125308534 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670096056 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133418915 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193034379 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153319286 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199551248 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1549345 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17257853 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144772826 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1308044 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17468749 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156588916 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229120643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172079173 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169730322 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135702409 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150867868 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122565076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.140542015 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159479723 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16831841 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119405139 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1452704 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167000288 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15234927 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152316367 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118337784 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219848656 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129992125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2212945 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189785357 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120034857 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174127023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215261282 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107852068 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173354904 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181671259 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146958924 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160682422 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139287864 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.117065332 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187409071 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128629581 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168210834 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167023932 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167438134 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169888333 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116977603 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166338764 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149603211 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168443637 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132850694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163349292 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137743609 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138280965 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133630297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161401894 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166917976 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162732862 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107250783 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173884762 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191833678 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101572209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139504883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281640264 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165467904 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201471084 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163439302 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140096276 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150012624 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164038049 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.136546486 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165438708 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13589497 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1345608 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111589858 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187713162 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165699666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161718667 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188490308 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169401923 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210010872 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.151038561 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27521427 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142213972 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136858291 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138840107 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137295532 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121230585 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140413296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15257567 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198875016 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187411249 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158521871 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152263382 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134096996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102458313 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136403754 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170543412 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162858118 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138413346 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151710686 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125196646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150807911 seconds)
  done (took 81.229183477 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145531539 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138703915 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149222041 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196719426 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166679306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258851335 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204520582 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.229538171 seconds)
  done (took 2.478652695 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104371247 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138536714 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144665304 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125987408 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.124919732 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.423912001 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.139516499 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124294279 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.18697061 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.137896713 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.122316042 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.613991123 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099769726 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.126013323 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117941148 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.124074856 seconds)
  done (took 3.838933232 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.208940352 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.515740863 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.539806554 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.245495383 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.231256166 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180511576 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.691754909 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.171869719 seconds)
  done (took 11.775866592 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131228778 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145991684 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.34562693 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.2155302 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162931741 seconds)
  done (took 2.002677873 seconds)
done (took 122.661768939 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104024978 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.144441007 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105765616 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.1462723 seconds)
  done (took 1.487132036 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.150016469 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.113063905 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090560094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.112001045 seconds)
  done (took 1.464365604 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.518014852 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.085434662 seconds)
  done (took 1.632266281 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129214928 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145462481 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156914808 seconds)
  done (took 1.43565 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111353627 seconds)
  done (took 1.107258616 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102870968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124149511 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.179943056 seconds)
  done (took 1.408552202 seconds)
done (took 9.534646696 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126211856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424792497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417242361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112295274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727743172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379260396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.064742871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.158121215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207577533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118794068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112781614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700001032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01820846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33790871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001548427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.430264467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.720259412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092363956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12696724 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119228445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014530832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117641073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095421405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11735792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68472297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.439460451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116070918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.451384541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117407623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100130635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405610388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092320788 seconds)
  done (took 17.139114532 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13891733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18739261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131973534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096272181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127997928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093304091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.130950868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.132648976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199788519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091936866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141017816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091424906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126308386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118409014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117668973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118649185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09342024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118381232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1010421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121362348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138222897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092297516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119830536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093716428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11886693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.125939635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118882565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131442218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09389458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127347967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096324052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117855538 seconds)
  done (took 4.861779567 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142818756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195761843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132296078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126965241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178551841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120994776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.209572606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160564659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199846761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117437297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116001047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118884783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.137530613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119798676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142753573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093856589 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11953732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094182298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127483926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095065117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139879117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116635055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095647361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118567312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093623683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152110123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092299535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134358202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118176638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101485513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121657148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094202586 seconds)
  done (took 5.132843587 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106265528 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13273956 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119131484 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146770754 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100015979 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13143844 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.131305184 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100799186 seconds)
  done (took 1.979410315 seconds)
done (took 30.113961803 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12040939 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.137575801 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112362735 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.133171593 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193831786 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.095468909 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.136995143 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096185658 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133624845 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114143791 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.118923761 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.098551255 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139023351 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102686915 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.17816881 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.135578516 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.185201022 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.17870991 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.098666733 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.133262008 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.09818247 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.210445487 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105472788 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123834463 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.160947159 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124284761 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.174752135 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101792689 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.129368786 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127776644 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.151775378 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.131738682 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123913768 seconds)
  done (took 5.406052803 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.195824579 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.203402336 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098632025 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124573238 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.205638136 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098245048 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.195674524 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.125115285 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.098552863 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.124252666 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097879573 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.196977688 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.207731193 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.216988187 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.235540304 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.205597174 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.193003954 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.204637122 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.191343443 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.209259184 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.19794669 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.124491153 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.20873871 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.207183763 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098243116 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125287578 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.231878801 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.202850515 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.232051236 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.191603106 seconds)
  done (took 6.258306406 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108503952 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140724314 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118836142 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.193384343 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159033426 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102642144 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137097894 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.144006478 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119712895 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120286208 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.109673922 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157841279 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137393308 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10513265 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.124804243 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11513855 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146463161 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095324011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129349925 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114455135 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141121073 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140209388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109988362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132557919 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093433785 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128945089 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0982127 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134409456 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.129350958 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108132934 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128050551 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099281532 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124843433 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103977705 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127079037 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.130168687 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.122221598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131045212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104660101 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150666219 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10284048 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12731892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144991176 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.147580628 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121939381 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.105955593 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.136525077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132295746 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095134237 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139812027 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109696827 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121789779 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.115278147 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121913297 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094443041 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131451666 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120652198 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098478869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134261249 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100520135 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148033815 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101254031 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130939053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095464044 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127922437 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094564495 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.120484035 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124509398 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.121322869 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128701403 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130062218 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122777521 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104761762 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130960701 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100807058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13088184 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120207245 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102002878 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128650689 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101509112 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133507624 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098135933 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126123485 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112410347 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.139959185 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130900872 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.105097985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132041073 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.09846084 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123781133 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134707218 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096859315 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125358739 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109653567 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122049823 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098926112 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132342401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103601436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.120932384 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114926364 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127345385 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12050797 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.113826492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122001453 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099648524 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132456902 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10813398 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122010315 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104197015 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.133429342 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093670093 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125696608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098918368 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120898497 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137755627 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10654188 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126045676 seconds)
  done (took 15.165412804 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.295064577 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.303464858 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204141892 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.360974109 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.148786919 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.197881797 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300061011 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.316200184 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102233881 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168570497 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183660747 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270743883 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097374717 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.155449808 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.299539577 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365754434 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.125902152 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169072771 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166838853 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.148997809 seconds)
  done (took 5.408669241 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118412779 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167634418 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.153853227 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15458754 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.102695586 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136454809 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094899904 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147573411 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.128622489 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103875081 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120332952 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.110575131 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131634976 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.105708707 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.140794248 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.170158422 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099837871 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12935878 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145524377 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102211974 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132064703 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152485605 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.107496167 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.15056362 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138056189 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111778182 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120840783 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.10236084 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125192537 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.100249328 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12966043 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143670759 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101526058 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128550358 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105201304 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.136325394 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.098896693 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124693433 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.097059093 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127603113 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111759752 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132715791 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125437876 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092535922 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.108254707 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124438645 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.10753945 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133765688 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134665724 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109799545 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133770272 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107414193 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128149041 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141993569 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.098790104 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138682205 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110556082 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135555254 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.128334557 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094697433 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120480509 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100713626 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126335824 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108096604 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132268445 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143839099 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.110335244 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.122346201 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101666973 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.1277497 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098759736 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141263348 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148908685 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10192205 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.125904984 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111946877 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.127070673 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087243166 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133326499 seconds)
  done (took 10.708678473 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125293945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127736737 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116687573 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.160572265 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.136652156 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102548527 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127698186 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.116787527 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.136252425 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109260264 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13566545 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137484559 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122842305 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137398838 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099302519 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.138557964 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105329121 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.166418294 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14385969 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.157163864 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.109442225 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129618976 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.109445653 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.136485895 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.15789754 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.108818814 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.157248619 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.13257566 seconds)
  done (took 4.68708497 seconds)
done (took 48.646347963 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.136013559 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.311123304 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.104878665 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.106720023 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.10274526 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.119353462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.106025942 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.296919508 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.705824388 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.103554155 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.103568349 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.101903952 seconds)
done (took 26.332855504 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.341312778 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.659814667 seconds)
    (2/2) benchmarking "String"...
    done (took 1.394571591 seconds)
  done (took 4.084565471 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.097846318 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.098852198 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.342552282 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.097932523 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.097642804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.111613382 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.096681507 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.099080875 seconds)
  done (took 14.972816092 seconds)
done (took 24.526421091 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.107556784 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.304625363 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.355934729 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.115061686 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.10108415 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.113346576 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.116853559 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.109941307 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.112919482 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.099830262 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.455860397 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.366194559 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.12512818 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.48751132 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.099146143 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.111696865 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.099760617 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.341427629 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.099389185 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.134427704 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.090834803 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.110848798 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.116495885 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.108609109 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205524324 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.111566156 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.184265611 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.099731912 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.283689784 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.108146989 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.138814233 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.100545388 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.160158166 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.117626004 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.106901181 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.102256188 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.287078989 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.204805896 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.098710968 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.102655786 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.277734114 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.118103335 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.101171655 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.103560694 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.103939602 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.106277668 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.099198287 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.202111654 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.120680526 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.110513907 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.127833142 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.487438133 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.106661824 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.111870925 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.1133018 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.328692948 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.114473263 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.142653712 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.122785527 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.11248576 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.102392992 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.102370123 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.142814074 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.117998162 seconds)
  done (took 137.306514621 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.102806249 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.106980542 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.106330387 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.121443394 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.105946289 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.10648406 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.102208581 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.102402347 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.107071427 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.133850959 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.107161382 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.102845006 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.106437241 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.050368465 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.108338351 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.118382042 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.103878703 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.104080874 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.111423348 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.104962399 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.119889454 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.104463557 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.119645699 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.104624091 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.131724372 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.18697389 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.147675596 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.122507956 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.112410161 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.103396926 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.130076872 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.124426224 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.628460208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.972677277 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.1084663 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.127036377 seconds)
  done (took 76.492951455 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.105676243 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.103891647 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.104789012 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.132064139 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.106334177 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.590035093 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.590213523 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.805530002 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.462408723 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.109132195 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.19054099 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.282350163 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.10465315 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.195071094 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.11888298 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.110978641 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.120503752 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.147557451 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.106524836 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.105037836 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.590866828 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.120602266 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.116487106 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266741898 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.120931822 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.132953599 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.504158907 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.104853681 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.132198833 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.421814757 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.148265155 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.106962983 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.401199235 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.36294049 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215537409 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.107781866 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.132702938 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.106861465 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.378208485 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.106706497 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.10622601 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.109308511 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.109957291 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.697703158 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.10683121 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.59185095 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.107367768 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.977505984 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.107234983 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.105879598 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.90332837 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.608583677 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.121396422 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.106029732 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.110191206 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.106638963 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.108091471 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.13371198 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.894621283 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.198814573 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.122002913 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.110573137 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.135400978 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.10668827 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.278653852 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.104850319 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.395787704 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.166703952 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.31482024 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.572155317 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.090463095 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178842725 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201534362 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.086116674 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.085786586 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.087442289 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.087855501 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.081413292 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.19048053 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.082909804 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.443642022 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244068264 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.097745044 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.181192992 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.170016897 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.078308343 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.361396319 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.081451516 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.075726391 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.732168306 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.170349113 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.077350297 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.076242235 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.078106361 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.437991463 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.563943401 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.230092532 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.081450229 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.079111182 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.183825107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.081262063 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.446768851 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.555380422 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662557541 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.078913972 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.184640282 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.238843744 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.093465398 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.078176683 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.153985218 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.081462067 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.133334118 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.081522601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.47150428 seconds)
  done (took 351.789685286 seconds)
done (took 566.62032359 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.760716867 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.737942253 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.860548118 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.760273515 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.730082991 seconds)
  done (took 9.858581337 seconds)
done (took 10.868511117 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.252286622 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.254373673 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.136148584 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.253735927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.113272777 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.266657763 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.23583169 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.104304508 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.179136993 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.15293226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.179683291 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129477197 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.115467545 seconds)
  done (took 16.389494409 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.331923684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.091036248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.15401186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.317630527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.1298119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.35019097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375587901 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.092129266 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.228127992 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.102813176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.101849829 seconds)
  done (took 16.291432802 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.342617924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.092856017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.173077862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.319011513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.132187441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.350957754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382380235 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.093493693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.243147228 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.104713546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.103188115 seconds)
  done (took 16.354793656 seconds)
done (took 50.051155389 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.12839568 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.252011369 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.116026611 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.105616012 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.101667457 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.101584164 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.107081771 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.100029528 seconds)
  done (took 10.030776194 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.099174286 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.099263154 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.098532069 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.099521442 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.099498567 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.098379115 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.098677054 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.099886613 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.097808897 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.100203376 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.099010374 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.098952698 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.098543764 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.098929331 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.098772011 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.099971488 seconds)
  done (took 18.605672409 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.103855416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.098660826 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.099316537 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.099262324 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.099433793 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.09957659 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.100091657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.10195413 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.098541454 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.100430953 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.101871016 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.100427481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.101001299 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.100710864 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.100624862 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.101159332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.101149229 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.101629988 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.105568204 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.101586943 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.100324094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.100146947 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.101095381 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.099609391 seconds)
  done (took 27.438518877 seconds)
done (took 57.093678554 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.091046192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.114345404 seconds)
  done (took 5.225714932 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.162055668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.161803014 seconds)
  done (took 3.346631202 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.102817268 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.101086441 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.103195106 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.101027518 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.102005348 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.100972023 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.101084116 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.101306532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.101185362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.101261802 seconds)
  done (took 12.037653546 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.101972461 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.101009283 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.101923233 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.101746909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.102535362 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.101143485 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.102797856 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.102443784 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.103180077 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.100730197 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.103310609 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.102531449 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.102071872 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.102675775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.102028074 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.102885742 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.101764011 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.102487118 seconds)
  done (took 20.861998585 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.116887468 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.123229583 seconds)
  done (took 3.262878125 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.245058842 seconds)
    (2/7) benchmarking "second"...
    done (took 1.14396192 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220062573 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208674497 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.144872346 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.123444224 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.144658666 seconds)
  done (took 9.255496349 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.106029097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.313078109 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.414243669 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.648875252 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.104628948 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.129737592 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.898467731 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.13142739 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.126337422 seconds)
  done (took 12.895471934 seconds)
done (took 67.907942407 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.093334153 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.138441608 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.118420141 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.114963713 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.443515775 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.120389686 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.096576548 seconds)
done (took 15.149358067 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.082336296 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.085926164 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.095516662 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.08720885 seconds)
  done (took 9.374155403 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.020697434 seconds)
    (2/2) benchmarking "read"...
    done (took 1.428193182 seconds)
  done (took 4.470062755 seconds)
done (took 14.868626953 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.101507007 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.101382141 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.102645763 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.101774895 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.101918055 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.101159589 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.101313526 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.100819646 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.102231697 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.101757958 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.100211921 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.101745868 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.100325006 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.103287129 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101848069 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103156274 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.103770416 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.102313741 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.103260373 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.101587182 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.102105124 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.102172473 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.102199553 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.102101883 seconds)
  done (took 27.469037564 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.103646504 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.102863051 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.1023751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.103016895 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.10223123 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.102723721 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.103373052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.102156563 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.104022975 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.102469338 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.102703741 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.102680957 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.103964249 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.103561388 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.103754602 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.103671809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.103873406 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104083053 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103765903 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.103354573 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.103362378 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.104486079 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.10498477 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.103211703 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.105898015 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.104002245 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.104240589 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.104190071 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.10404169 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.103539766 seconds)
  done (took 34.130804075 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.108144557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.108554333 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.103295613 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.104124861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.103373614 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.10505458 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.10418177 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.10450961 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.105684809 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.104502252 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.104673738 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.104266269 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.102913747 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.103969882 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.105354472 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.103783698 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.105332061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.103910861 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.10581403 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.104358447 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.105758109 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.104531776 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.105891059 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.105684644 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.105391145 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.10477621 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.10560574 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.105349858 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.105333082 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.106365559 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.104441412 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.105641909 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.106479751 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.107259947 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.106832079 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.10683637 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.110386556 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.110400289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.105707891 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.107009743 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.107260159 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.106579181 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.106275465 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.106912052 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.105533254 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.106816153 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.106704147 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.10620728 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.106309924 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.107379214 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.107200685 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.107384349 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.106461663 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.106673681 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.107130109 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.107052131 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.106695841 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.107818171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.106781019 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.107092265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.107695352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.106538539 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.108366088 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.10714237 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.108103263 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.108973704 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.107671586 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.108380867 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.108102888 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.106593364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.108329514 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.108437943 seconds)
  done (took 80.679860182 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.109756656 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.109258844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.108501534 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.107177715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.108809015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.109433272 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.107926138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108313776 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.108048673 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.108821992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108367267 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.108264236 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108400379 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.107725071 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108590201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.107331571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.108151177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.109045361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.108694258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.109100562 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.108605209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.111006399 seconds)
  done (took 25.417341689 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.110847542 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.11077051 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.109731022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.111060991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.110941549 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.111091004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.108456933 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.109637009 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.110792109 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.109902213 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110004084 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.109948567 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.109947967 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.109887529 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.110064207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.110964323 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.109762175 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.112738615 seconds)
  done (took 21.015660268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.111487136 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.109934955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.109952833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.110450603 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.111327616 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.110770076 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.110314738 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.111886897 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.111971505 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.111855982 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.11134809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.110760888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.112637245 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.111507424 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.111967291 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.113587011 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.112036899 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112831565 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.112841494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.112594283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.111147122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.113515486 seconds)
  done (took 25.486718004 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.11446317 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.112313853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.113122562 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.112818988 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.113252853 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.112657094 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.112682933 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.111050791 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.11223076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.111854815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.111366546 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.112321997 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.115268906 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.111669756 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.112918263 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.113006328 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.112839507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.112635919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.11333328 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.112575101 seconds)
  done (took 23.286588645 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.114204108 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.11555424 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.114297001 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.114053754 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.115206985 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.115704147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.114436838 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.115514335 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.114792319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.115429139 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.114688841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.114939917 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.113862055 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.115091858 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.115109897 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.117553262 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.115188894 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.115042073 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.114099551 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.114961726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.116247486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.115222343 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.114328117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.114935869 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.115849401 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.115030288 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.116188216 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.114191631 seconds)
  done (took 32.255541063 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116130816 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.115094625 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.114812647 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.115854809 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.116464037 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.116039239 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.11543432 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.11486439 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.116414682 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.115165865 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.11501909 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.114611748 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.11553574 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.116062126 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.11706663 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.115874193 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.116717434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.118594665 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.11567877 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.115685168 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.116610182 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.116566544 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.117217135 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.116676814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.117290895 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.118301798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.115645972 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.116842465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.115825393 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.116995571 seconds)
  done (took 34.520127372 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.162472385 seconds)
    (2/2) benchmarking "in"...
    done (took 1.159121488 seconds)
  done (took 3.355944611 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.116297132 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.117877357 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.118396704 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.116449785 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.116243258 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.11760556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.117323533 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.117143676 seconds)
  done (took 9.97264629 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.114906471 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.118709451 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.117816474 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.117519918 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.117385568 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.112684807 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.122477193 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.124443624 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.114447091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.115595535 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.117343915 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.1172553 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.117260398 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.11747694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.115145406 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.118081848 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.122360329 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.118990052 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.120185617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.120242176 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.120891991 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.11729003 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.120221924 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.121962375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.115591844 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.1246444 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.122769553 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.121995717 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.115208625 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.121744615 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.118573258 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.119946611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.120221798 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.119603495 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.12022177 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.120018164 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.126387272 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.139159703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.123802481 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.124364315 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.120505376 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.12021972 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.117060888 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.119192949 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.119037615 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.123470352 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.12042897 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.120240057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.115431202 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.119113767 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.124704398 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.11466676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.12131645 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.120835748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.120674203 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.126132726 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.144036686 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.119437636 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.12081442 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.124960048 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.132482683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.129086969 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.121565736 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.122596514 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.124879961 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.132216222 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.127265009 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.127715724 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.123211511 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.121668261 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.124685007 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.13351236 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.132163213 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.123315817 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.122090154 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.122793142 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.118929397 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.123487812 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.126148264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.128080724 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.125574186 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.122942867 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.127690715 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.131947622 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.120160072 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.122735545 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.124607077 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.124782105 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.119686282 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.13024737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.145662009 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.124959826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.118623867 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.121200906 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.122192254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.123418403 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.119688579 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.121682367 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.126170167 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.124441844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.124150151 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.12338477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.127081639 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.126097 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.124675097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.128174498 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.129161052 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.119893387 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.127815214 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.1298154 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.123690125 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.122350099 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.124843007 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.126501282 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.122361387 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.125572049 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.12619984 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.122559782 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.1271028 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.12637977 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.130316903 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.137345162 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.128104961 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.124288244 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.123840853 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.1314523 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.125516931 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.125156591 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.129524041 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.125657506 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.124277303 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.123667448 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.128610504 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.122231761 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.12662359 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.12285365 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.126578628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.125451387 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.126048044 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.123263558 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.125545893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.123884026 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.124747254 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.127810672 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.127669636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.124897965 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.132480381 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.12763807 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.124788966 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.124927939 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.126629895 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.127489696 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.12399191 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.127625499 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.1226766 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.12804306 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.123760598 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.127257981 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.126825192 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.127516897 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.127362831 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.122292542 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.12571787 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.128599834 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.127634576 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.125460079 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.129852984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.129547746 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.130697337 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.126199053 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.132337985 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.125092414 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.12813565 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.134179504 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.132458964 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.130741029 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.130058699 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.131823417 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.129742525 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.128533145 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.128043244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.128942222 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.130070468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.131542104 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.13151756 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.128548593 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.128955144 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.126024175 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.125800482 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.129991074 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.129363651 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.134460728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.138380465 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.138569725 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.127425855 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.131889469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.125260259 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.13142412 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.129683412 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.133440913 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.12878752 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.128867108 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.126445097 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.130073839 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.127595478 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.131386902 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.126744539 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.131977559 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.131785269 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.12976002 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.130467029 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.127603295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.129488712 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.132403894 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.129714839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.129255723 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.12702071 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.130568132 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.125648584 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.127955185 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.131799899 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.129612921 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.133980411 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.133782231 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.129502761 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1330668 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.130342906 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.127317164 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.131187556 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.130561253 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.13006892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.136025615 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.13351674 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.129961016 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.136997662 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.151315459 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.128191573 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.13267013 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.135314172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.132958536 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.130152477 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.136768749 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.132929404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.13105896 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.131189238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.128733858 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.134675053 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.1355039 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.137395919 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.129767088 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.134361655 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.130684045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.134631999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.131220787 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.132867461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.132738444 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.13532719 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.1367366 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.133575258 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.13071647 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.135166939 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.134878013 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.133531347 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.130542283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.137018137 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.135896372 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.133632881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.133658387 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.133508538 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.136920127 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.130117381 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.134379847 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.130788256 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.14248195 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.147257056 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.137338905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.136519454 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.136663956 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.137402125 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.134928447 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.133392936 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.132592142 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.133088179 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.132443256 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.131601601 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.136647816 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.131601559 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.13649055 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.132468102 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.135638895 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.137210044 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.135391733 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.130756787 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.136473502 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.136173346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.135322 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.131083449 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.135745454 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.134737952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.135304132 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.135257379 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.132431014 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.139837534 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.139001022 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.13422638 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.133737512 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.132728336 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.132660904 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.134109955 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.137234035 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.133874462 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.139494652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.134255375 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.13841164 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.133827751 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.140246684 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.139951014 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.134956469 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.140051773 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.136397793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.131654739 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.133604964 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.13809624 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.14146431 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.142631863 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.13335737 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.139110072 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.136619553 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.138348085 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.137773609 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.136506823 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.138232081 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.136806884 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.143312852 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.156724436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.135933344 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.137507971 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.141248291 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.136878319 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.137437014 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.132952748 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.138432257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.140959537 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.136751813 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.136210305 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.135431398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.139564635 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.13788676 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.138938337 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.139134111 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.138957523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.143465672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.142247155 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.141339742 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.139437518 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.142282228 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.143285308 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.145121497 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.145306527 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.135873153 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.141027514 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.139680481 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.137620528 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.137110493 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.137285775 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.141680277 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.134685859 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.144240359 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.139676197 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.13753724 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.138739905 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.142015757 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.135116834 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.144203915 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.153469837 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.135653785 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.143003919 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.141054132 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.135335661 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.142589348 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.140288605 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.135118638 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.138510882 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.14215313 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.145201849 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.137033409 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.142336823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.138617366 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.140892316 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.141868722 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.14169485 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.140019768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.141703719 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.137313634 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.142830791 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.142151622 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.144700056 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.138929801 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.139967915 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.138813211 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.146109891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.145976295 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.140096713 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.143019673 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.143305219 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.138703542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.140154489 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.143333714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.138349113 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.144538151 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.138433457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.142062812 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.142040339 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.141034297 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.141533702 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.143903105 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.139014346 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.140675721 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.143240236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.142005878 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.142778766 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.14127048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.144924063 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.139677154 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.138778326 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.144086457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.140815988 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.145752209 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.139842798 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.142382398 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.14217006 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.145025067 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.143342796 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.143599048 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.138621253 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.141172864 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.147536768 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.145035294 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.146131092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.143957727 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.146545365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.140145095 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.142435484 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.144545123 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.138810937 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.141418634 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.14553623 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.141705205 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.142501121 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.14207583 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.14583546 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.145769332 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.144002692 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.142013343 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.151302991 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.167309474 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.148907606 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.140539641 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.143951829 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.142182469 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.147249293 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.146858256 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.141353809 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.151580309 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.147669291 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.14783161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.144159347 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.143349319 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.143446394 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.149155886 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.147097539 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.143034153 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.148254401 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.14348269 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.148354896 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.146048935 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.145653374 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.141205004 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.142918706 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.145355562 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.14609773 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.14630015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.145582195 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.147025646 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.144909778 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.147736859 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.147832157 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.146935183 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.145894806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.142014018 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.147064999 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.142437496 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.145470611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.146438087 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.143702914 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.148973745 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.148120769 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.144885916 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.149641371 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.153123415 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.148910508 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.143779667 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.145985589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.149912657 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.149805853 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.148225079 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.143695915 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.146774792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.149075293 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.147611331 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.14877342 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.14681824 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.159028812 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.172657732 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.144988577 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.145954664 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.149945708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.153082816 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.14855481 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.150153614 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.147262165 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.148988251 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.152367363 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.148733285 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.153020336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167962935 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.145424583 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.151467331 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.146591373 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.150669932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.148961553 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.151353027 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.148764612 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.148380359 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.157153089 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.153035867 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.151054632 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166692547 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.152313599 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.14737605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.150306747 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.144423815 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.149390245 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.147626651 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.15119234 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.150115912 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.150463552 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.149477349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.14654 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.151219425 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.152795283 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.154803129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.151253996 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.145860891 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.148278046 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.150945116 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.151157312 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.153623311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.150602507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.149802797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.150863621 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.148948733 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.159468719 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.162592305 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.154646739 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.150367006 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.150850793 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.151052795 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.151352692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.153818662 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.155539127 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.150984617 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.150749331 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.150058561 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.154645168 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.153054245 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.148022682 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.148527324 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.149451358 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.154710971 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.158702035 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.164510965 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.15389566 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.151414143 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15434086 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.151735434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.15052986 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.153583864 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.152957619 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.148721968 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.151060967 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.15493167 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.154191548 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.153244401 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.150507227 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.156902048 seconds)
  done (took 678.236503778 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.154199597 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.154222308 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.154564583 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.153402669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152561865 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153017168 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154049422 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.153503837 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.154850239 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.153919011 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.15301299 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154287701 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.153351347 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.154553018 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154164983 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.153046682 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154295187 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.154555811 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.154458402 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.154454841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.154306114 seconds)
  done (took 25.301712568 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.154782616 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.154586829 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.154500246 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.155717299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154873001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.154806269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.155172091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154967 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.15584367 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15620554 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.156126293 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155772135 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.155747853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.155216302 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155795531 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154888701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.15625134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154930671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.1560197 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.155516228 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.155955112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.156673345 seconds)
  done (took 26.490203485 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.156290314 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.156576162 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.152469146 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.157412343 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.157109514 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.156983109 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.156949455 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.157510054 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.157509879 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.153058081 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.153028606 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.153087602 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.157429064 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.161344299 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.154001842 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.158396167 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.15673789 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.158836735 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.157406956 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.157186126 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.159607825 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.162332163 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.157375335 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.152607688 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.158738827 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.157512509 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.157353218 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.15728997 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.153660258 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.158990257 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.15763085 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.15367527 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.159453798 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.156507457 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.15562476 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.160870735 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.157127128 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.158430047 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.15809586 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.162284123 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.172445477 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.157565251 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.161750079 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.164670349 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.159477927 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.157186288 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.161765071 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.158585204 seconds)
  done (took 56.649819469 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.158672827 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.160347101 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.15849907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.159085303 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.159230781 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.159797562 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.158854114 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.15931772 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.158587198 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.157760531 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.159760278 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.15927056 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.160253878 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.159055049 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.158755379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.159623378 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.160541816 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.160433201 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.159991436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.160160972 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.159717897 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.159600282 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.161031421 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.160854242 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.161028634 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.161199178 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.161048752 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.160447438 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.161028665 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.159261627 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.160476389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.160660715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.161875329 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.161514637 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.162340777 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.161635739 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.160574342 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.161113336 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.161228205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.161338639 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.162144382 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.16193386 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.161439242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.16228755 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.163225891 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.163651926 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.161250855 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.162127135 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.162897746 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.162351419 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.162575265 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.162274212 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.162255386 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.16290155 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.162604738 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.163054568 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.164078726 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.16303599 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.162149382 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.163194995 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.162020573 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.162882458 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.16456489 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.163040593 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.163150485 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.164045861 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.163889234 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.163112278 seconds)
  done (took 80.039039384 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.16279214 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.162277742 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.163985249 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.162550504 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.162195959 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.163298284 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.162789806 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.163084784 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.163991366 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.16548349 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.162610565 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.164190788 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.16372007 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.164333617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.16342819 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.164492544 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.163608562 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.163583145 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16448881 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.163603907 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.163558252 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.164579343 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.164393508 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.164097144 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.165109217 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.164531757 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.164611223 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.164727357 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.164375996 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.165976495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165246891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.163722071 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.163109314 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.164646705 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.164597182 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.164593435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.165977458 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.164346775 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.164540297 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165446683 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.164547407 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165596021 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165542814 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.165304402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.165815345 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.164973844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.166190098 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.165556237 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.166630821 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.1651028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.165245109 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164394169 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166179056 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.166598873 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.165595912 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.166527306 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166108863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166320495 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166442751 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.166589176 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.16653519 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.166090326 seconds)
  done (took 73.289590914 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167259931 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.16704081 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.167163895 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.16661037 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.167703326 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.166992477 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166073229 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.166964413 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.167526296 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.166811826 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168301161 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166366423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167102738 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16797267 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167735721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167487119 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16609908 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167403965 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166381289 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.167996465 seconds)
  done (took 24.423394298 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.166795649 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.168616346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.168054266 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.167932003 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.167975033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.16943463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.167190778 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168517706 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166957481 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168404762 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.169162097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.16753154 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167305844 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.168441289 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.167298068 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.168556765 seconds)
  done (took 19.768773767 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.168124472 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.167373306 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.168252637 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.167790284 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.168044042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.168027551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.168268385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.168789873 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.168223194 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.168126022 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.16961707 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.167625275 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.167755952 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.168271678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.168070431 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.168645268 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.170375639 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.169452659 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.169617019 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.16975215 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.169395234 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.169796163 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.169664482 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.170029082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.169400401 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.17055266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.169799264 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.169707483 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.168218005 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.169401799 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.170872267 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.170336154 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.169899218 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.17066445 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.170492827 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.170438989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.171934392 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.17086518 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.171835259 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.1717867 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.171441509 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.170639445 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.171442003 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.170534213 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.170527575 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.171631669 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.172157943 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.172310999 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.171246601 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.171495754 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.171377588 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.171053771 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.171421235 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.172233671 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.170952622 seconds)
  done (took 65.429503959 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172125806 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171394789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.171969386 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.172456829 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.172484723 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.170803812 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.173308632 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.174115584 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172246463 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.172552722 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.172099163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.173101093 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171822062 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.172878334 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172658949 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173538861 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.173618618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.173701533 seconds)
  done (took 22.192079256 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.172908241 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174925342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.173421283 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.174564171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.173806315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.173507752 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.173033176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.172542462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17274478 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.173880475 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172452878 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.174011686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174391001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.173412181 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.174244503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173620939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.174624156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172568761 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.173934853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174295487 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.173840501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.173532656 seconds)
  done (took 26.907266113 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.168203097 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.169101716 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.169644733 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.183789831 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.182022125 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.169635639 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.170220607 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.170290355 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.188583362 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.210331714 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.20490063 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.181440571 seconds)
  done (took 15.254731166 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.174537807 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176203298 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.175259961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174984205 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175980666 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175992547 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175914628 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176436425 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175560852 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175920286 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17626755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176801755 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17682638 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175892895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177775788 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178638061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.177162241 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177634887 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176560037 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17764811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176833005 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177522826 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177501708 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178108315 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176231986 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177658515 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177816159 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178209799 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178191724 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178883849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178314893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17805936 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177921032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178174947 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179395144 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17691563 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177820185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177495024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179541895 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177869947 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.1774083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177770195 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176429083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178139979 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17883367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178037819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178553491 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177460758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178821361 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178503269 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178125947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17860517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177894896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178660946 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180220456 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179819763 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180107725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179465027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179587819 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178836602 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178734327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179280523 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.177816842 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179794468 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17891852 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179212751 seconds)
  done (took 78.821425701 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179259239 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.178609523 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179709597 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179587256 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179894325 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179489675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179370046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179761274 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18042716 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179874325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179368946 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179412622 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179137698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180083229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180276974 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180646123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179967126 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.180520445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1802626 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180573883 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179976738 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181056204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180720705 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181351266 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180062634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180941407 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.180949257 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180796033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180930327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180338 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181137896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181205406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.180585612 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.180814308 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181521147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181651718 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181639058 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181878592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182148247 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181542782 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181458713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182404897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182028544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181734287 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181611351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180784505 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182577649 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182471112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181659908 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182297768 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18225653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18296255 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183048169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181608605 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.18175483 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181671448 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182972737 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181145079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181926974 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182241092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.183070299 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182546719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183325369 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183231327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182655417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184020445 seconds)
  done (took 79.050639036 seconds)
done (took 1590.467603912 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.344201157 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.295717308 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.178198909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.188662507 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.175651785 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.172493797 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.192364387 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.1778266 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.176806419 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.177057351 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.177623841 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.364727004 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.23400298 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.177199484 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.177987929 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.275191272 seconds)
  done (took 24.580284489 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.203782664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.187897946 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.288036359 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.20006416 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.207191097 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.357416447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.240359618 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.185265341 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.340446198 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.202295495 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.187226782 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.20609714 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.184067807 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.17711959 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.215504905 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.358326764 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.41345185 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.189704701 seconds)
  done (took 26.439595617 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.593649125 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.189542985 seconds)
  done (took 4.882393933 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.203818102 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.186526034 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.187701862 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.185753185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.179164441 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.178664314 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.18573107 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.18200202 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.180845389 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.299088467 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.187408189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.198896084 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.203018104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.187448346 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.189532854 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.226420461 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.325816881 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.190552023 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.188868281 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.191558728 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.185999456 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.275459032 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.224689943 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.191098185 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.298475868 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.184353268 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.188102637 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.194662291 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.380057019 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.192048497 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.186231864 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.186881225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.188117139 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180571022 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.685348069 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.195379445 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.209831406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.211751189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.190929777 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.334728344 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.189265259 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.193963171 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.18197341 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.67053909 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.3153874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.295211537 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.194235345 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.188094178 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.189353335 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.248609822 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.18831223 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.188956744 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.244192551 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.955237979 seconds)
  done (took 77.289600851 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.18425062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.180742473 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.357976317 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.200457132 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180761634 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181863233 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.197223406 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.442794824 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.203744836 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.190925802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.457085025 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729166232 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.200398665 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.26136269 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.087685724 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.264473388 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.183388107 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.182100327 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.182882917 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.1832901 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712198365 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.183019982 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.183954409 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.356760992 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.219929661 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.673995746 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.18402427 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.198489133 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.184066948 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.18407821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.68439199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.201799072 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.249623305 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.184236182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.44289728 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.532887034 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.497535961 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.187050659 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.211016272 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.185993805 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.195854389 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.657942614 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.516884222 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.184583743 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.197202702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681515466 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.183563165 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.192495453 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.183511534 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.431621488 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.18373502 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.186658176 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.185063667 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.201134158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.184428178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.207724573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.268337637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676096703 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.183470343 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.198219073 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.219730937 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.186798636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.192623419 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.186204845 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.201192985 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.519780931 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.34406978 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.184673756 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.522244749 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.672482767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.194401164 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738967025 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.195461918 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.19221609 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.39280657 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.177942041 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.182214243 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.659814536 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.195411116 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.174440571 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.48999273 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.177651945 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.453048769 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.189425011 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.186843981 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730021676 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.174893318 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.177645736 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.173546879 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.17268809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.173673216 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.174662144 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.439679253 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.218968517 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.174246006 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.174529278 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.189202724 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.185179158 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.1745191 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.174471593 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.73724037 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.190647836 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.174035401 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175608397 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.184761751 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.177403034 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.178832959 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.178438947 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440045221 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.174330686 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.177625635 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.177391509 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.175516533 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.178472217 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323760951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.180876043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.458362817 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.177312972 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.176671384 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.179785887 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176443549 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.24251781 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.176464167 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.178756428 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.053657134 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.442295959 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.190813109 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.1753297 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177489005 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.176023476 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.175720439 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.178065586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.220607409 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.179419341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949675573 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.19590639 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.205988817 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.176087756 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.181759925 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.176156354 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.178467978 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17891475 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.46163791 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.439666457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.331974564 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.180235304 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.179033385 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926968113 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.220862303 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.357892207 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.19393884 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.179083581 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430799525 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.402790863 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.183479142 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.181442746 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.184126353 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441969251 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.18369353 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.481312039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.708823048 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.197250259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.192235345 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950617083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863801229 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.181925297 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.183456591 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.451126348 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.196031686 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.179436592 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.181015567 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.182475628 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.195701205 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.196753685 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.182552617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.180913334 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.181950649 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.228744368 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.36834314 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.195648786 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.190020746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.666842812 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.194463524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.181442384 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.201043845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.185273469 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.182622588 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.265639162 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.185374223 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.201994463 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.183250327 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.185227467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.681600309 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.181719559 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.186228433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.37172566 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857594184 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196267382 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.1828671 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.18264112 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.084559738 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691384836 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.221532622 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.467944805 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.186413915 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.219322998 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1825151 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278165152 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691914283 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184668672 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.183634792 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816869217 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.196837388 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.690264495 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.183573941 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.184188382 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751267482 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.202251832 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.185639732 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.184484723 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.19406721 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479217737 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.184185619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.207494509 seconds)
  done (took 463.345659586 seconds)
done (took 597.631358719 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.183781494 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.182628136 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.179441351 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.188006219 seconds)
  done (took 9.838733193 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.198777203 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.189811561 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.195349949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.188573382 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.195764526 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.189454301 seconds)
  done (took 8.262726693 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.183808716 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.185051353 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.188343403 seconds)
  done (took 7.662349505 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.380277664 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.200945265 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.498651362 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.199547133 seconds)
  done (took 8.385885171 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.194832785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.194946663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.195809017 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.196909329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.200136641 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.199842022 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.196739961 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.196566944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.200718261 seconds)
  done (took 11.881380414 seconds)
done (took 47.136067823 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.002572485 seconds)
    (2/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.223314988 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.329340241 seconds)
    (4/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.247760047 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.253136415 seconds)
    (6/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.334230845 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.233714936 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.266895 seconds)
    (9/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.226097784 seconds)
    (10/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.239715998 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.238884289 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.285316724 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.312854694 seconds)
    (14/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.214012996 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.379142157 seconds)
    (16/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.277141192 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.405318828 seconds)
    (18/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.179959127 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.23629359 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.179457065 seconds)
    (21/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.339360153 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.185516933 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.289155508 seconds)
    (24/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.329000982 seconds)
    (25/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.931756879 seconds)
    (26/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.934521001 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.33983223 seconds)
    (28/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.352595401 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.321473416 seconds)
    (30/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.25375601 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.314942659 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.339538734 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.298006971 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.383640267 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.263366032 seconds)
    (36/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.333290729 seconds)
    (37/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.25346342 seconds)
    (38/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.180353928 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.225759926 seconds)
    (40/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.179425285 seconds)
    (41/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.181340887 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.182396699 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.309986666 seconds)
    (44/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.181159617 seconds)
    (45/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.18213052 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.194820215 seconds)
    (47/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.259874082 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.220361378 seconds)
    (49/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.182606543 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.280370009 seconds)
    (51/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.182013476 seconds)
    (52/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.372064546 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.295270899 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.846989609 seconds)
    (55/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.182412524 seconds)
    (56/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.897430587 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.338975136 seconds)
    (58/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.187634378 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.348563484 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.278342305 seconds)
    (61/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.183489938 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.332664391 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.86444525 seconds)
    (64/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.358828074 seconds)
    (65/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.335543499 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.183651085 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.183726097 seconds)
    (68/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.417443944 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.43943966 seconds)
    (70/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.282616116 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.291149156 seconds)
    (72/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.183816429 seconds)
    (73/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.309916959 seconds)
    (74/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.092089852 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.203367943 seconds)
    (76/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.184086894 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.286958646 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.195424629 seconds)
    (79/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.185169346 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.094085624 seconds)
    (81/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.2465006 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.876507507 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.280820811 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.273067209 seconds)
    (85/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184673866 seconds)
    (86/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.186474662 seconds)
    (87/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.239804558 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.288674102 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.330048314 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.898040778 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.269360097 seconds)
    (92/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.278272648 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.258976473 seconds)
    (94/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.23278774 seconds)
    (95/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.32755518 seconds)
    (96/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.249502345 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.212047146 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.852350061 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.298335285 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.226392011 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.185400358 seconds)
    (102/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.948966709 seconds)
    (103/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.443123442 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.241050936 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.221888441 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.208751701 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.220920244 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.211103739 seconds)
    (109/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.36417006 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.329277486 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.186970808 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.211276765 seconds)
    (113/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.229817559 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.227335424 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.186132962 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.235340864 seconds)
    (117/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.252921946 seconds)
    (118/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.232780727 seconds)
    (119/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.355157848 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.301652805 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.276090509 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.194888171 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.371292063 seconds)
    (124/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.004299704 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.22853071 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.398898972 seconds)
    (127/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.281515283 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.268037259 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.273301847 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.324938504 seconds)
    (131/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.253579116 seconds)
    (132/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189466619 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.381055321 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.938936099 seconds)
    (135/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.239450808 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.227125706 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.231721339 seconds)
    (138/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.200116913 seconds)
    (139/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.30551021 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.332720967 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.351238957 seconds)
    (142/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.253400899 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.342285869 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.98277748 seconds)
    (145/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.871042717 seconds)
    (146/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.332620261 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.19234056 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.34406842 seconds)
    (149/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.24572633 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.880905291 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.236121224 seconds)
    (152/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.853097968 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.063256983 seconds)
    (154/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.978990516 seconds)
    (155/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.259125914 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.279824324 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.264072375 seconds)
    (158/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.234755149 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.293822468 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.207907186 seconds)
    (161/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.292840909 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.235647555 seconds)
    (163/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.189297085 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.349475464 seconds)
    (165/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.189907867 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.278621285 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.303566281 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.18942521 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.281840554 seconds)
    (170/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.403651889 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.982668465 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.230541889 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.293277157 seconds)
    (174/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.377459734 seconds)
    (175/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.245321436 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.190414034 seconds)
    (177/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.30876299 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.204194439 seconds)
    (179/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.966371912 seconds)
    (180/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.109613084 seconds)
    (181/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.262841012 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.219062707 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.877286349 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.201009026 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.99020912 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.449969144 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.335802366 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.938833591 seconds)
    (189/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.240651011 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.192492136 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.261595867 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.23696802 seconds)
  done (took 309.970452671 seconds)
done (took 311.077738394 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223785268 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.38892845 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.208113279 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.207716762 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.208741125 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.212913758 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.229738057 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.209205916 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.218968937 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.218996849 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.211975199 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.219209492 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.22107931 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.215907036 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.241903763 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.210629913 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.208798819 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.216768178 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.220545048 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.222044559 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.210796949 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.210111221 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.228107027 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.20726347 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.21720758 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.218128072 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.215150533 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.209467345 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.214102939 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.221300489 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.211411416 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.216805746 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.222524116 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.217641115 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.211133689 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.216808107 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.210519805 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.39128508 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.226529216 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.216945859 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.213850185 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.222619494 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.21413635 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.215755814 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.218998242 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.229735683 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.219491317 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.22652052 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.212591775 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.203289381 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2308338 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.220431429 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.214446589 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.202856373 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.209829112 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.228994716 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.217131825 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.226639703 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.215784403 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.212933447 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.245484689 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.227757688 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.219271924 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.219468289 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.215050998 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.223919366 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.218301364 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.22391033 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.215383545 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.212470743 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.21234039 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.216491201 seconds)
done (took 97.139576494 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.338019191 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.212244394 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.352090699 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.216420673 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.376756047 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.358571124 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.216562635 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.215934756 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.216367386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.059519815 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.217339144 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.21574273 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.212952886 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.2158064 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.34125314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.217723004 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.217612114 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.951702515 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.218201924 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.356867 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.210468765 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.216969243 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.217826329 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.075135077 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.213401626 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.2080954 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.356277968 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.217888456 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.971612907 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.206475455 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.208060141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.968859707 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.358741377 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.237207623 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.227623417 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.226323024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.376750948 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.23365777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.341694435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.341725812 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.354125947 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.256588711 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.20771545 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.212649865 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.218900699 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.219002201 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.218341288 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.247380677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.213326065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.218660602 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.956356925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.227462885 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.228964347 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.218537849 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.218466229 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.238209371 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.219260743 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.220375738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.361816954 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.220849055 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.343272309 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.081775212 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.062056946 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.220517913 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.211807391 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.220120394 seconds)
  done (took 100.885137005 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.279858799 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.301193955 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.324010371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.218074115 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.26717699 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.32782538 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.219173587 seconds)
  done (took 10.063734057 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.220797363 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.219802705 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.264428311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.267209988 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.223614479 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.375825034 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.225148451 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.231196407 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.223286502 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.269138649 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.222855491 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.220788821 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.229756525 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.214219392 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.264037748 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.228012577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.331223478 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.217328088 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.219915377 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366534103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.221544855 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.229475564 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.267692176 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.227708574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.222869063 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.222143298 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.981881699 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.220792692 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.220428279 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.220480238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.221410167 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.269475736 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.22167272 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.21643018 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.220263466 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333341148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.222561028 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.222217035 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.221976386 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.219291699 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.22267588 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.222619732 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.222551381 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.222437711 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.223269126 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.2419496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.222881876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.222531706 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.222448178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.223714979 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.268278251 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.222703052 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.222150222 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.222325824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.273033743 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.233152766 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.222268562 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.224287916 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.223462965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.223042848 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369264464 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.266522279 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.225124421 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.267124106 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.223991074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.224934352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.22375652 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.22366742 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310885504 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.224735968 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.267906545 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.225385695 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.3988507 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.244280472 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.225372185 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.223940363 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.223036668 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.226052451 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.217567058 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.224385866 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.225123486 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.220997924 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.226997674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.225144338 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.224886369 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378280801 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330774936 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.226068609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.235559659 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.228408055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.227192052 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.274220497 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.226283145 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.225691563 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273840569 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.336394019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.274918637 seconds)
  done (took 126.550068006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.234027542 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.233846172 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.225537092 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.248818468 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.222408797 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.222496469 seconds)
  done (took 8.520139867 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.223537359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.227633971 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.226451579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.226476464 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.225933814 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.227586164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.22845905 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.223030677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.228510241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.22765163 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.228340425 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.229808264 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.228851064 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.227594694 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.229356124 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.227659251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.228648629 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.228273897 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.228434076 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228766418 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.223234107 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.228554352 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.228613482 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.224801694 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.231460794 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.229687767 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.245683916 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.228618222 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.22918028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.231841623 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.247969023 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.230642313 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.225614211 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.228038843 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.232203177 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.227082351 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.232161702 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.231067972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.230153229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.230761608 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.230334815 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.231488348 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.229929548 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.232637301 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.22807148 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.229092604 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.234799616 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.247989232 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.232608043 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.232352849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.23321137 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.230794779 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.23161412 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.233579626 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.229134498 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246210089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.234673971 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.231924112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.229538404 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.226867784 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.233519075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.23060375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.228214901 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.233716544 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.230826308 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.233791823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.226427129 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.234312842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.231527666 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.231532502 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.233607879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.231777744 seconds)
  done (took 90.74166647 seconds)
done (took 337.883835582 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.207694215 seconds)
  done (took 4.34519219 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.223714204 seconds)
  done (took 3.363676412 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.562466969 seconds)
  done (took 21.704667337 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.242926633 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.340665932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.243969858 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.229431742 seconds)
  done (took 10.196925873 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.462469369 seconds)
  done (took 3.602387784 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.232811737 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.22974817 seconds)
  done (took 5.603993415 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.377047999 seconds)
  done (took 3.517301159 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.360089179 seconds)
  done (took 3.500370078 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.253737785 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.24426836 seconds)
  done (took 5.645375676 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.225513259 seconds)
  done (took 3.365845005 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.899275136 seconds)
  done (took 31.041270461 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.233274699 seconds)
  done (took 3.37764562 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.250297493 seconds)
  done (took 3.391363584 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.69226754 seconds)
  done (took 5.833579695 seconds)
done (took 109.627437441 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.224499747 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.231247069 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.230282435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.229221047 seconds)
  done (took 10.055827883 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.288769094 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.28746972 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.288042182 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.287873567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.287154925 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.288581759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.261584216 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.261596673 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.288919609 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.288335097 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.289548996 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.288082743 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.28835416 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.276950071 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.287693201 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.28879531 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.287935087 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.287837189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.262770953 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.288313639 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.237089303 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.288905219 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.288502416 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.237482844 seconds)
  done (took 31.869514807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.746469514 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.302568484 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.386503573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.284654897 seconds)
  done (took 6.863106448 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.313773543 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.314473817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.327211299 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.366663258 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.379472481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.327158624 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.263944993 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.258467622 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.245008282 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.31568223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.36552639 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.306120146 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.39316819 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.238123641 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.44318423 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.238543683 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.23864928 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.315601657 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.36726582 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.367942288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.2400899 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.315191569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.316097754 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.307096273 seconds)
  done (took 32.708742694 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.248172598 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.25647425 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.24140317 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.255727062 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.239992237 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.243345478 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.241831343 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.247086885 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.239747066 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.238879658 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.241263099 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.25388935 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.244000146 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.23953519 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.248132887 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.241536017 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.242193488 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.247164145 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.249966352 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.240044109 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.244251723 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.247116815 seconds)
  done (took 28.536556118 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.229049467 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.2282738 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.578817531 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.484804008 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.229437478 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.233265341 seconds)
  done (took 13.127488945 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.300604579 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.445467728 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.234130547 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.566840341 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.655233652 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.240488801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.235542842 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.472621251 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.767979601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.753441272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.29080129 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.302818886 seconds)
  done (took 18.410514084 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.23671857 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.233849181 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.23516062 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.249082431 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.288335417 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.244028096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.242034336 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.230605579 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.293429684 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.296200913 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.245273525 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.289073835 seconds)
  done (took 20.229432327 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328711177 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235964771 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234290739 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29722076 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256904234 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077239031 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285208862 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940206831 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.259110779 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512268992 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235282901 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328874445 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.489544031 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236085326 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23982955 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.196062084 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466510054 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694879099 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239304193 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237232168 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273826392 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243245472 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237356104 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.458195376 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081122731 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238487846 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.500451458 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236449712 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502101699 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255169979 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247958723 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23862238 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514331509 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875846715 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353576134 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436934683 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237830956 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259588489 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.242342194 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.238781149 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249605524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243268041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.249638324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240231257 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239732548 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245444307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929306274 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.266140445 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.24008409 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240329574 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479221202 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342148848 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.247041094 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240013141 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260105504 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243992388 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.244912235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360689751 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831559035 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239093745 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258338171 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.24139216 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243471393 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245130067 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824461832 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.248211962 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.246528256 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.245265372 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2409791 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240786628 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278549952 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241507819 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.266253909 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240757651 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916950989 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24708301 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246345738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764832701 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246441471 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.24478253 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472698451 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24103913 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24166386 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.24147063 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241377246 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89783316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250049099 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.230158473 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283036699 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943833836 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.46126908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261105695 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272673895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465511762 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.228429929 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243099052 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.254884031 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244398116 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264243425 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932409066 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260913947 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.248742193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499052443 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.453399629 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252713019 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.215637639 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696303443 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266677267 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.263713926 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242800531 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.445973767 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.804555625 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.259939101 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243755637 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264767998 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243854827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935596117 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250883405 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.253427657 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245360926 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502725503 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.97740805 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24607733 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312009026 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248599669 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24431486 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245448419 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250840688 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245580818 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.436670841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268983558 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.258155771 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.245467493 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245189915 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.251458178 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255230269 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.250814207 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466940526 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255623193 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526174558 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246004309 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245882456 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246731683 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.467398968 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.25541557 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.257212435 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506404984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260036326 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264119496 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.261061428 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264764809 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349301551 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26837711 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.261332601 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.505350661 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.251748582 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.251813336 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248440215 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252915279 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254742741 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.255691761 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247172955 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814390216 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223241762 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25124069 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133288765 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.264377947 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.314283482 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254694057 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.45013408 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.249169585 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251043128 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.275271133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.247685456 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471562541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.256756854 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.248252305 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332311822 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.698850069 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.826782216 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2629357 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.248917792 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.246720518 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.247718178 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247283821 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248173294 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249487435 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449892103 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.261626954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246012498 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820745081 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251403265 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248584446 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.261092124 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.259355069 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.255880146 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249408295 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.261859157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253711499 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256091594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.26186334 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393227811 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.265423031 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250469942 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.769181319 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258234906 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250515791 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249475556 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284202978 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249365951 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042476979 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510323211 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245547797 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496348959 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25672327 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.271899207 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.251485745 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251130176 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25659879 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.275312842 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278960908 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.262005665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250700631 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257346494 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820004486 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96419748 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767005817 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267041344 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.252462602 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25693644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944985023 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269071043 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251358239 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476754296 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943484458 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270315609 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707349612 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.283111262 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991112244 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492874223 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4880008 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266379203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.253415033 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499119125 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467396988 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286424029 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254557522 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254150789 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.237961296 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785979925 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270734984 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354784819 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946687804 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271197518 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254402891 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.307781991 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260145602 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639906966 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270269317 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253154633 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267912799 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2598264 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041628518 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256600445 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25435084 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854751163 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257695831 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.708923747 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271462921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.456465083 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.266420032 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.256954161 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.25392684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.275768103 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.506418662 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496607297 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25937629 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252172655 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771383349 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.122748259 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.259655376 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254009519 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943766783 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253491389 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529321238 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.261131078 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.258247458 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26062669 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25389681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252461219 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.252935311 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255807254 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226239505 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711076923 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.254554379 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271955935 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273565812 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257658215 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.505937186 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.269303934 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81423482 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482622125 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250829403 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293150858 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.259333288 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253784236 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.243711972 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253792449 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253701108 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271331591 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.475111763 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262681037 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.241370096 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268819418 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467503711 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254372741 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260418228 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485413837 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.256656658 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.277137755 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978276282 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287492457 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258786228 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256821087 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270334991 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297337903 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325070073 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460437832 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.267904305 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.266277901 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641851449 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282377211 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25951785 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.270850134 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352438624 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260581346 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.262333673 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.039902239 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822993686 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957809373 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.821970055 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503081234 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257651519 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262815245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255933141 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418076421 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255789933 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53118906 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257329308 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.270519159 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280110954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260525492 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260609901 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471659 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534040631 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257174186 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26730745 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260981313 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.256890887 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266312983 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.467121898 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715335791 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779069876 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260551602 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.25847559 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955441492 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551233314 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258856505 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259040387 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258221202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.261709334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284649309 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.266570875 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270392141 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403972329 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502354743 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903053474 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.289492829 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.290245587 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.778000647 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260087285 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514893805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273284515 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466260179 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825556668 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932401545 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524580187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329888062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465665016 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.260686438 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423479226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.269648626 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264042971 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261025954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26095324 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.2606157 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.269268376 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827170562 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525078271 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.266720449 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.266820109 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295085616 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.269603442 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.48250305 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927017705 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484204026 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270026015 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266070185 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262480101 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827487073 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510619739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264125621 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.267517001 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489982656 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264129968 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286230459 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.780290154 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.262551564 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790232169 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.233043641 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282514234 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270289856 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945040564 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828716311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.267876612 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722885359 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265257052 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277299281 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54176384 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.270211994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269433526 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545863827 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.268274502 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270240741 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473550063 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.823192172 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998868429 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.269725563 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29170374 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.266569872 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264481009 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341400613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283477332 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266669938 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.663265522 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282275345 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264768806 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277240427 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.264199955 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26945341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.268427887 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263395148 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.272300523 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.275059205 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.253023139 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27590076 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389609723 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804686654 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291682545 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.940665458 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.589693106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.519141475 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273031288 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.255718089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.270860504 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266147059 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26629767 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266751638 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263607635 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784498344 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.274730109 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.279413357 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272931125 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.267194631 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475000126 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276514285 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472749332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275791717 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285735384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.25290314 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266459125 seconds)
  done (took 915.099522035 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.294477159 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.283320512 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.274439719 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.328399601 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.269244924 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3740392 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.331084123 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.267939028 seconds)
  done (took 19.597429535 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.267812125 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.27041024 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.266796261 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.271441356 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.262125705 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.725303174 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.279960222 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.286309702 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.282569914 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.273695356 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.263332739 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.902680635 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.287366006 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.272793649 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.264065773 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.27182093 seconds)
  done (took 30.623691409 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.14286985 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.372216685 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.984281361 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.267495903 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.276402016 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.271254775 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.446148466 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.279428373 seconds)
  done (took 25.216613966 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.273345612 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.270922384 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.271266892 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.270863572 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.27181094 seconds)
  done (took 7.535287454 seconds)
done (took 1161.015441838 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.272277829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.270942463 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.268565148 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.2676389 seconds)
  done (took 6.253120439 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.250535772 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.253703015 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.256360656 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.26650711 seconds)
  done (took 9.199213475 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.934035886 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.884108657 seconds)
  done (took 4.992413966 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.737332305 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.73221108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.730932584 seconds)
  done (took 6.376705429 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.544356321 seconds)
  done (took 2.719197426 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.140189735 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.267594053 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.899850659 seconds)
  done (took 7.483550459 seconds)
done (took 38.198931065 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.258663475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.509150241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414868376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.267303706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422809327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415371376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.063834168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.260779217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.261988552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.258833503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.259725034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.421762733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.979610251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.508676185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.980950427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.603182669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.423232513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.264512439 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.260562998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.260731358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.085873273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.262371935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.260230203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.27928996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423006346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.406876096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.267679784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.599198613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.270065169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.270774939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.407392934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.261006375 seconds)
  done (took 79.066415399 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.260090884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.261364534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.26977071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.260319014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.268005048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.267864542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.262617774 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.262185943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.263843735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.277735798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.278696799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.263822451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.26449086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.273001236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.262461973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.270706991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.270220945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.263905661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.262795947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.277738871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.261999956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.262317549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.26384199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.263192164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.264735868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.263987343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.278574854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.26271089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.262715928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.26276345 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.264362338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.281654054 seconds)
  done (took 73.709239743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.262320382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.270919966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.264054627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.271479198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.263568398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.278147004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.265663508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.263693197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.275854012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.275032235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.265380343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.263597773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.27960468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.2639823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.264521732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.273649983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.272923507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.263865841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.264216256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.269783961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.267998986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.274715708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.264054638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.274905013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.271850385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.266716106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.264280291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.265139544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.28516842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.264345016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.264139071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.264713797 seconds)
  done (took 73.778198924 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.547416204 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.274615744 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.277606237 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.269648212 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.277687907 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.273706037 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.270182855 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.554643497 seconds)
  done (took 13.922986058 seconds)
done (took 241.651043966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.27286871 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.747703624 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.312869056 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.281571698 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.291827001 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.295825248 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.483422127 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.311927772 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.486101543 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.287563585 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.291692743 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.27998914 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.034334046 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.416384341 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.097626978 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.200944762 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.109063722 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.266520423 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.81893743 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.540875849 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.296578595 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.276298211 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.091692628 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.138830399 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.275355815 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.347469908 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.366666846 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.486956737 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.424769585 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.347814646 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.760701475 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.272140919 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.2925481 seconds)
  done (took 60.384523918 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.272257129 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.37288882 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.278463794 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.279376883 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.380555146 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.277757019 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.273022191 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.278860761 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.278054212 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.277763251 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.277894459 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.280624278 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.279949915 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.306142471 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.380324035 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.271393116 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.27293975 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.373022091 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.272911973 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.272772247 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.304495015 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.279147846 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.283015183 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.307004244 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.280300103 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.279778278 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.375110892 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.281375184 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.283927461 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.373805953 seconds)
  done (took 40.185863705 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.279441093 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.840667868 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.999763197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.283751298 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.276976641 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.281510112 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.547153148 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.281910729 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.280796578 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.281173895 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.750063482 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.285482649 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309642161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.027529597 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.282313458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.284767436 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.283635419 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.280841534 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.849885913 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.289063697 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568799565 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.290119582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.549537942 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.290338974 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.302220412 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.28171013 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.287041618 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.087693895 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.301733493 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.75364129 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.011972859 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.552110242 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.027679451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.029242401 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.017795708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.291448964 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.285871209 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.758501478 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.282549412 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.281956914 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.550812838 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.282047698 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.01362144 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.965784706 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.297938793 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.287310032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.103598781 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.770878635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.51155878 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.288642477 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.037409402 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.285472515 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.287140259 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.283263054 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.511767147 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.284928386 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.283025134 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.112489776 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.306063606 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.551959378 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.287435496 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.283275579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.851447213 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.284822203 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.851933514 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.285460136 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.291805818 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.302315297 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.014401873 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.286815631 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.982494544 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.300459023 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.287060452 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.754506481 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.844016323 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.16294964 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.286017569 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.852968982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.057737961 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568793223 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.287786894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.067588438 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570027452 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.286649283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.291074283 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.289702531 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.290029788 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.366624863 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.55121933 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.908059759 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.980091907 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.130735806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.575139717 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.292071169 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.285378307 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.115103738 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.307068549 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.288997394 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.013789581 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98346357 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.302793131 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.293176543 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.991290424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.303998342 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.557711181 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.29393768 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.027274748 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.285734095 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.366389231 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.290610358 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.291845026 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.307622123 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.556127836 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.28944799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.290921622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.968272685 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.791647875 seconds)
  done (took 181.377357116 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.293288666 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.280232641 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.28916938 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.280291985 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.280875286 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.288582415 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.279360419 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.282718984 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.286282141 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.280386744 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.280366267 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.289083143 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.286634678 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.281986382 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.279948842 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.281836396 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.28160759 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.281310749 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.281376455 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.281965574 seconds)
  done (took 42.858764098 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.291812468 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.814656096 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.787588377 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.297677619 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.291504541 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.288296531 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.340566628 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.293104875 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.292792708 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.571451849 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.454583794 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.294237433 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.293344006 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.292840951 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.787743218 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.288249696 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.572235372 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.816991891 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.292725342 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.816813599 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.283051661 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.293173823 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.287559781 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.82047946 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.581105117 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.558210388 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.342893805 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.818299698 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.294192508 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.292880505 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.820879357 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.299061983 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.289584266 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.815919178 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.309972946 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.306426052 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.292799175 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.341889239 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.344611368 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.572566352 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.823078069 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.564908288 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.304284698 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.472207168 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.297044934 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.283408325 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.826232795 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.312357421 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.284439989 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.296480351 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.300513307 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.801212356 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.307875392 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.801726939 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.312277484 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.296391963 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.821647598 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.802311962 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.813915392 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.453161447 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.290231564 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.561494186 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.295855818 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.827950054 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.314089959 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.29540656 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.295999471 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.455608172 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.837462399 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.563250881 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.575573958 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.576472501 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.296862063 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.351194781 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.314141796 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.577198573 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.350737875 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.709931854 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.577995719 seconds)
  done (took 117.582987406 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.556257311 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.400755731 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.681118046 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.88761769 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.292414141 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.422713254 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.399947042 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.542456867 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.306102516 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.370733044 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.903852803 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.418329214 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.050364353 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.38017331 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.392488279 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.431494336 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.668517698 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.25271034 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.974341023 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.886954364 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.293537649 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.39840606 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.839995481 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.499861069 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.302836412 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.88206698 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.225612704 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.929294458 seconds)
  done (took 50.788410691 seconds)
done (took 494.356187642 seconds)
SAVING RESULT...
DONE!
