cset: moving following pidspec: 12449
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "string"... done (took 0.694890041 seconds)
loading group "linalg"... done (took 8.169559132 seconds)
loading group "parallel"... done (took 0.297700287 seconds)
loading group "tuple"... done (took 1.906018496 seconds)
loading group "dates"... done (took 1.388194337 seconds)
loading group "micro"... done (took 0.454615563 seconds)
loading group "io"... done (took 0.434071958 seconds)
loading group "scalar"... done (took 36.768603606 seconds)
loading group "sparse"... done (took 12.308049928 seconds)
loading group "broadcast"... done (took 1.152228017 seconds)
loading group "simd"... done (took 1.932135434 seconds)
loading group "random"... done (took 7.472571826 seconds)
loading group "problem"... done (took 2.369208543 seconds)
loading group "array"... done (took 20.470348989 seconds)
loading group "misc"... done (took 0.857287997 seconds)
loading group "sort"... done (took 3.096486223 seconds)
loading group "nullable"... done (took 6.374310798 seconds)
loading group "shootout"... done (took 0.933016483 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.430831323 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.13240322 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141553475 seconds)
  done (took 1.001294298 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.090538329 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079787451 seconds)
  done (took 0.895985655 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.080186314 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.265891703 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082010987 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.474462919 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.139724193 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08263006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.080907775 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080772562 seconds)
  done (took 1.930457986 seconds)
done (took 5.096180108 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.362431843 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.802654374 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.486976451 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.135076185 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.270907145 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.224131156 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.197979715 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.205983457 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.086435852 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088690119 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.165294903 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.408874201 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.295711347 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.840923905 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096638546 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100041703 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130532312 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761856938 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084204912 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134299062 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.352718037 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115300347 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.104507004 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.145056924 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188300341 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105453423 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156393351 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083009718 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682594903 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120496468 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.202917074 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087123649 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155306132 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.126904057 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177655623 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114217667 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671410659 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193958184 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.137942402 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.083943985 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69001065 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.098123582 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.167022217 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.09654852 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.084827058 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163490413 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112718733 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082880092 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10477324 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084269026 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160906425 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.583863143 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.100586255 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.18879838 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100362134 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696940373 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102474414 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.250035567 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131369639 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108330465 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082378283 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.081875006 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.144376251 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088105618 seconds)
  done (took 19.145411229 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.142058778 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135723474 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084877553 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13068233 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09653525 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081979768 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084096588 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083870442 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087974455 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138319544 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088987363 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149267166 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082156816 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.132848457 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.142542777 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201530307 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088543941 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.095183892 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098921168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086524411 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110456505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087123928 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085431674 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083649395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140251075 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210123299 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113412676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117118525 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.081137134 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094319047 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133239429 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131442762 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.082399375 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083491134 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121205078 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122834755 seconds)
  done (took 4.766657757 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18378154 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105932186 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168294166 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.134087651 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111456072 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.148733648 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146698404 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.225882216 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.174109501 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.155972069 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.491018306 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165916141 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082138517 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141237723 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098323048 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081346448 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08637537 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083241381 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.539140696 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.168045671 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113914277 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133264712 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083605674 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084826988 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392679195 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082820448 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083697514 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08228672 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084530302 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158718368 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082250892 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.582579181 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083286429 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08053566 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144186911 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197724235 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08662568 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118865115 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093625313 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083838245 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.08416608 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082936524 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.267493304 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08355434 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093282463 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116974651 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135917005 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082809552 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082776238 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181789249 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08214222 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090141002 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.802725263 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.174462618 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144676429 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081607165 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.158318806 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101835087 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084648684 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08144213 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.157977352 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.083916397 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08162707 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084413947 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082492055 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081721565 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082316683 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.498932162 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087025382 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084570671 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082841261 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.350570628 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086701738 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086311744 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104449665 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081197965 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082059109 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080843939 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083884969 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084521292 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093786787 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115048848 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086725205 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083277699 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146747502 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083001616 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102900585 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111367025 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095222095 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08140274 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115928988 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082671407 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082218416 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148878778 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080613743 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11813681 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084359261 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142497171 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083071388 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163309385 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085440055 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1035455 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085005223 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124008717 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0831494 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084747438 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085779903 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082885051 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082956219 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082116797 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143779317 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084364569 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08371714 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08369563 seconds)
  done (took 21.047485717 seconds)
done (took 45.688911699 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233124548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082999731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084799051 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082734893 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082015807 seconds)
  done (took 1.363286002 seconds)
done (took 2.137469227 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.415948984 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.632761191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147644892 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197939836 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.230418408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175998428 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27404714 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.160832952 seconds)
  done (took 4.116978842 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.182717858 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084200861 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083841108 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084545667 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083038283 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083173636 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083903756 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087517344 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086983337 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084966811 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084026257 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103464554 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088978703 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08615956 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083612658 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0867933 seconds)
  done (took 2.298579729 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.126013301 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108078688 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.08605424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087236372 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087680773 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088497776 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090494608 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090811898 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085185762 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085349122 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08945977 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101093931 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087358455 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084741224 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087559388 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106400332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084970093 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087666526 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104194465 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088462087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086244906 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08506375 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086390315 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.085710411 seconds)
  done (took 3.061553358 seconds)
done (took 10.254735397 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108558846 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083539534 seconds)
  done (took 0.967427422 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.156557269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151407103 seconds)
  done (took 1.091565903 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112167057 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082013502 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086448004 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084566899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082092772 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082664562 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085442429 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081669115 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081960842 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082043883 seconds)
  done (took 1.681911017 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084553071 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08386262 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085663686 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143844828 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.083792849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081985426 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084402423 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08282401 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08428516 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08237549 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08290747 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.091151187 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097800705 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.0903397 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083870652 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083470531 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083690601 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083033534 seconds)
  done (took 2.383347072 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083331686 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08265269 seconds)
  done (took 0.954431147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082475082 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08112065 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083703381 seconds)
    (4/7) benchmarking "year"...
    done (took 0.081922569 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081621273 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082094308 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081034746 seconds)
  done (took 1.361252852 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.432996123 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.197331518 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.283896088 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099377372 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083221756 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.286372869 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082308372 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082450918 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088271142 seconds)
  done (took 2.458019137 seconds)
done (took 11.684561633 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094062241 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.1578244 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.476334316 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.10358042 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082803826 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147209432 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.190607688 seconds)
done (took 2.049376181 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.245415705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.136324249 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.104927729 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.151321477 seconds)
  done (took 1.424505379 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085510455 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08996584 seconds)
  done (took 0.973181646 seconds)
done (took 3.19282019 seconds)
(8/18) benchmarking "scalar"...
  (1/15) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083529268 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082629921 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082152346 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.081901058 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08285069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.081638105 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081829959 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082208149 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081352245 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081878359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083864435 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082423331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082086207 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082096543 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097644609 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082513216 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0828546 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081921102 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081496886 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082101223 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081687692 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084045534 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081737349 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082369064 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082928912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082324854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082680906 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083176848 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082066302 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097990184 seconds)
  done (took 3.290985536 seconds)
  (2/15) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087422988 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.080184987 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085573103 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085616893 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082327648 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082065882 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079714257 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082064835 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082364664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082198442 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083167 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082125178 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083101839 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100443359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083373381 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083255489 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084624588 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.083047153 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082380378 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083648696 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083067756 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082886169 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082616511 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082396721 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084267839 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080668988 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082600099 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082309978 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099001346 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082632016 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083564816 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082917667 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082661559 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084989369 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082485769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085246804 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083423597 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079937261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083098696 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079861552 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079378669 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082429686 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.099418579 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085149446 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084650429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083455515 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08443001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08331702 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08285949 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083594149 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082338124 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083055744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083858918 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083547356 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084618442 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080765299 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084314633 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097889333 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083643946 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.083054487 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082865915 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079679895 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083474093 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083205623 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086779331 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084208125 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083327984 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083328054 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08455803 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082962784 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.083362277 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100906827 seconds)
  done (took 6.866531701 seconds)
  (3/15) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084595045 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087293433 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.083417661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085614519 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087088658 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084447471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083661617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087442195 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08295622 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084105947 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083067546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082752492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084821261 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083316391 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0983264 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084858557 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082783921 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085685547 seconds)
  done (took 2.346144995 seconds)
  (4/15) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0868065 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082834836 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083453629 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082737756 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082568391 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083076207 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08333001 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082826175 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086462252 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08306168 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084454315 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084687585 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087035649 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083413679 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097757683 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083424016 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083233768 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084109439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083356201 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084114118 seconds)
  done (took 2.504867134 seconds)
  (5/15) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140300244 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085535528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087980811 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085874747 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086115001 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086793859 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085359807 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086052982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086100404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085960722 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086416786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085895629 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10149517 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08774349 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085875794 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086592716 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086396671 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086474265 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085352824 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085241007 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084812112 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085945915 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085074576 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085850652 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087514411 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084742061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101329715 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086341846 seconds)
  done (took 3.310051229 seconds)
  (6/15) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087106468 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086475103 seconds)
  done (took 0.990460728 seconds)
  (7/15) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141926568 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158605574 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08446095 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.090413243 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.156428552 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15253923 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114508276 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085784373 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088682995 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.134421912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139080466 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085328239 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088032004 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103652567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08828951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090074932 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083063985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091299529 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086727859 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083803464 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087665059 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090085198 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092289878 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.088206957 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086581121 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102334173 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106761412 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.087869554 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089080601 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088573973 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087217515 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086063039 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085381946 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084482112 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083788588 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15909139 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091674367 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087565046 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113964353 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087395122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088250747 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084087229 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088182931 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088771763 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089574031 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086150341 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084586734 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083235445 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085365255 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086058639 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086548436 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087387579 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.101637715 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090215104 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090269929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091662983 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084356677 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087275553 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086582589 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09047198 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089056227 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090637574 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091282628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085860151 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092242456 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089861986 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105726643 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085183597 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.085834239 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083530943 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092801954 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112003698 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091638608 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084565572 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084710563 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083913324 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08784923 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086151249 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086970417 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086035452 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086359096 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089119783 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088806055 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089474716 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087834842 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085497674 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086271166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086901134 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094748571 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086157115 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084941108 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086384099 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090409402 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105121119 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086187078 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085864551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088788874 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084139401 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085258956 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084946976 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088029001 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09059099 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08621229 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085858474 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090959332 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.168175017 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087543675 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093109257 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086035661 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085250995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08839057 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088393853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.084441184 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088414316 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08442582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086679598 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086410081 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084482881 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085312036 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089467243 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105366052 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086286671 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084351998 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088713446 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086197274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087179313 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089450831 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086068347 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.084855832 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085417007 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092097256 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0860585 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08965316 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087799014 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106275386 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085141413 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08449133 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088877783 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091054107 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089782088 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089713433 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091891434 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088528157 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087645923 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090268183 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088566709 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087243008 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089324208 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103642579 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084429731 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087224011 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089804996 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086649845 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087394074 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087350913 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089507053 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086437947 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087145369 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087631325 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088077611 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087077694 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086169198 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086746297 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.105753253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086241693 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085036023 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083961235 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085905547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085984188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085827953 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088250957 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087810678 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085416797 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084950747 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085061236 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088347897 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092106615 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106739062 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086064646 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087455605 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089126557 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087791122 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090078564 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085266359 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086097681 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0858957 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088499732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088983801 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086466442 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088027465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086082385 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106969329 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092747059 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086413712 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084925464 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086679877 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087243218 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090236755 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087003103 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085870277 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086026512 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088523477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086587757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090324684 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085557598 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103445627 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08722024 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088279941 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087170932 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086775979 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.089113777 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089034716 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085009273 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088288113 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088823307 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090649446 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085663757 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087502747 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089254436 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104286306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087108913 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093697879 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084517033 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090993763 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090940894 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089170138 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088382818 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085430207 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087075109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088566081 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087864106 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087493319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088606589 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089068868 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102892903 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087542627 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089617402 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087951407 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084309115 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08781857 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085536226 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089013624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086037128 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085054461 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088747319 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0863137 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08993511 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.084281318 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108000046 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085729407 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085935579 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084800937 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087749846 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089422893 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086032378 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087090195 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0860189 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086173458 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089202335 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096308686 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086118842 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086149293 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104817239 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086953725 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090605516 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086603331 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086532722 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08729476 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086188893 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088769598 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088127687 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089331681 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088580119 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086909376 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08662163 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089931618 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086266976 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102254204 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086400442 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087100671 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088869612 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090677872 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088305015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089045542 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08464994 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089259744 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085484823 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090744291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087795522 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084775026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087213255 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104946376 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089478907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086899598 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086936684 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088859065 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086165566 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088788805 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087526284 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087246919 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089617681 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088259408 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089066494 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090413033 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089170697 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088532278 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103366007 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086582449 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086783801 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089901586 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085912881 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08815269 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089179707 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08810436 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092008278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08610648 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088710932 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087502398 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.084076264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086773534 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103039011 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085682684 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089262818 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086690493 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090173269 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088477872 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086796792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086061293 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084957242 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.08795071 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08794589 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085720538 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088063015 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087393376 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105180135 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088584799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08726864 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086523782 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08471587 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087218703 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091450386 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086316633 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091034901 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086200766 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088917034 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085273763 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087236233 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.087592982 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09018144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102796731 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08893163 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09015923 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08784029 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087232182 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090353808 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086738264 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089419891 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087194887 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088416621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08631789 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085202525 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086652849 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086442557 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105688579 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08697342 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087520138 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.088910469 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087292385 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086082875 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090655522 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086826753 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088868284 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09105278 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087174005 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08783163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088513491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085122067 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08751483 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103331366 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086974188 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089281396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088774348 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089755478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086673871 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089174818 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086444931 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090376507 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087461472 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085183598 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087303979 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086026582 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087753407 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10367317 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088053306 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093408456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085705312 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085944937 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086852804 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086536214 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091161523 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087116245 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086627148 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089770005 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090285713 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089425758 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090420297 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104330027 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090943129 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087723586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088714983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088393293 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089009015 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088720011 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092013796 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087139782 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089202684 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086996608 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088230843 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086949116 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087206551 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091892551 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104308655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087127769 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087828557 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087936183 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086227027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087410277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088840138 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089439516 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090253167 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085058093 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08580309 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086645097 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086915591 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089287471 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106898231 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090337884 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090297306 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087307821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086905814 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090500614 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088470189 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090837948 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087313198 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090452005 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086704741 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089837052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089179357 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088595694 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088348944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108470078 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090336139 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088136068 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089050011 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089793541 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08710123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088669655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089737738 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090771808 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085790378 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087392119 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086554792 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089369046 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086008144 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10545978 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090662856 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090015916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089919605 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087570773 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089751008 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088591782 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.086196436 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091775567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087355242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086831712 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086116677 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08752363 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087926055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106786694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088687535 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088429751 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088972627 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091156425 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088112951 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088233846 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086594881 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.086667655 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087093548 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0875149 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087257256 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089555103 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090510671 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088061896 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104564903 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086893033 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089392792 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090313998 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088328062 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086481249 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085751966 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087493528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08688116 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090524291 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087402525 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087720931 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090474703 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086299732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103087341 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088918709 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085373147 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090936285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090930418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088965503 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094362419 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093173581 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094814501 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089800665 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087601852 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087462798 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086882976 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089243611 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104021817 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088957681 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091859516 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092450304 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087385623 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087850068 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0894113 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087806207 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08839923 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087564068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087520138 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090312462 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091820126 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087842316 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09402753 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106910104 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086887795 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087132728 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087907547 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089811212 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087465661 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087148093 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088401605 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087359224 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087761998 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090805751 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088706253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088995046 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09045836 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10904145 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08751462 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088399719 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088965573 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08641483 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087910551 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.091273408 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088848309 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086927465 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087379757 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090439014 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08986897 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087387789 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088374296 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088520195 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103803074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088995744 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090403256 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093197885 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085914277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087627065 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08755436 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090601396 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087955179 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08802949 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090543218 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089566906 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090606843 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086450798 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109574199 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088195014 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092785053 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088695986 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088991415 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088322544 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09110963 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089130329 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087560226 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090636386 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092112202 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089412068 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.091055085 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086654804 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089483447 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103482363 seconds)
  done (took 54.557361939 seconds)
  (8/15) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100673556 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087125465 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087347909 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087553592 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087049128 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086306645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088846983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087799154 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086853154 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087342741 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086279757 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086267814 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086802099 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086567642 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103750973 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08746175 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0874093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088576138 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088461179 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086843795 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086982779 seconds)
  done (took 2.748224198 seconds)
  (9/15) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088898037 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088580258 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087863408 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087661078 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087568049 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.087436468 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088120982 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088295935 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089615865 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089577522 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.088390639 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08840377 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088022506 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086230658 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105081309 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086494309 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089516551 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088316538 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090632824 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086291071 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089047497 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.086761103 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.087755224 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089157846 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087912786 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088590525 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.086712354 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087590887 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106077455 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087942677 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088911656 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088031446 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089013065 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089378475 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089304233 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088018106 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089088633 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087023496 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087491852 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088149128 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08724168 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090011586 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088327643 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104722605 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.087434093 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088516284 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088794811 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087224639 seconds)
  done (took 5.172817507 seconds)
  (10/15) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087145718 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111428066 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087713877 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110826803 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.089081859 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.086997237 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087337293 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110605755 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087282049 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087411605 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086930887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086816347 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105181742 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08774803 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087150607 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088837205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087206062 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087399522 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087472855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08762029 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087556385 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087436048 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086900506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.087024404 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086594671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086896246 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089496367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106364573 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088531021 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.087854887 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086777446 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087025871 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087563649 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087043401 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087574614 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086473845 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087713249 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088838812 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087429973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08681963 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087234906 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086817395 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106353817 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088139001 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087549541 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091644755 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087122182 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087164856 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089443776 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087499814 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.08703551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.087637681 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086908957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087223592 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088150036 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086727509 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087350703 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104852509 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087292455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089071732 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087833376 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086743502 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08697335 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087283446 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.087179592 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08716269 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087005547 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087064494 seconds)
  done (took 7.088109319 seconds)
  (11/15) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090340817 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.088896639 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167015373 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087994151 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.086777794 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.089599592 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086413713 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.087149839 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08718029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094924152 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086612132 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105251303 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099581937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090384957 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087661916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087294271 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.088431986 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087523141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087418938 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.166076007 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.087916696 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08695184 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086841769 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108182751 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090166424 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088228748 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087967052 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087979065 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09086791 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08722876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087038233 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08787542 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087558062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087583204 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087989122 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089888386 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087188392 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087066449 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106801011 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0876601 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088159814 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.0882101 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086992487 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.086664512 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087536621 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087119179 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089681376 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.086966856 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086957426 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086948138 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087056811 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087546607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087326538 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106868199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087903985 seconds)
  done (took 5.984552435 seconds)
  (12/15) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089095338 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088714843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090474075 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088889935 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087202709 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088379046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088323452 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091934038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088025649 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087367604 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087776385 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091453808 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087341134 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089395307 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105517119 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088264646 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088609103 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088176646 seconds)
  done (took 2.519946217 seconds)
  (13/15) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102765583 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.154718278 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099540801 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.160551701 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.090355205 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090510811 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098851886 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089592748 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12088723 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.091822151 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090057961 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090675567 seconds)
  done (took 2.185669281 seconds)
  (14/15) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088869332 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088236011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089061325 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088665954 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088560983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09106577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089001402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088182303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088527458 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088207725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08871205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087966703 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08806036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087705566 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105601836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088802913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090644418 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088711281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08887932 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088525433 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088639275 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088879668 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088401814 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088492678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088212125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08830704 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088076773 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090860856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088369827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106332306 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088955376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088087738 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088618532 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088191104 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088262481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087800271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088095281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088266112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087960487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090259453 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088021947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08890949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088498335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107107056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089316666 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088960614 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089342158 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08866791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089219027 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08888791 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09034005 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088434989 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088789923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088705833 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0886765 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087916837 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088600582 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088916265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107057678 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0892749 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089251224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090626887 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089431275 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088255637 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088771903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088916545 seconds)
  done (took 6.84138402 seconds)
  (15/15) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090618716 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089416957 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089551122 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088679853 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088622722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088446163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091176609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088686558 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088849497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088621675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088580188 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089013414 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08811358 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088999306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10622936 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089685427 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088986107 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090873218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089926101 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088302919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088455522 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088908862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088920665 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089025496 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088532347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088784684 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090028069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08936297 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090544266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106997684 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089378684 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0889493 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089482329 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088208075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088427725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088948951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08839064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088565173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088901249 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089510125 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088450075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088855224 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088809758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107309177 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08952577 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088659389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089722233 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088534024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089132564 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089306049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090812526 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089847948 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089575357 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088989599 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088662881 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089277274 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08857991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088657503 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107216567 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088850615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088939452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090679758 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088331623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089293408 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089746678 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088866119 seconds)
  done (took 6.872368057 seconds)
done (took 114.075992767 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157885162 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.177144174 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.237733234 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149743693 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.135408769 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119966094 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091565484 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.089669783 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.090538887 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.105791805 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089875815 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.089660214 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.138596815 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.184571306 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089933364 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.122917446 seconds)
  done (took 2.979879844 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179001604 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.261127829 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104696484 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089520951 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094786914 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089589046 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090341447 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.137310129 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093014202 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090889282 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08999189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089628576 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093176933 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089936157 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.090655313 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089777338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.090537142 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089798431 seconds)
  done (took 2.877530586 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108208523 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.125728419 seconds)
  done (took 1.16127868 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113281235 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.130278648 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272637952 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120633707 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105407049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093822965 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117818055 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.117016906 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.164563943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.090456405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.089901377 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091742812 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106505653 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.090433078 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099240274 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09142252 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108826758 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089159452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088933307 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09005377 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.129513886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091425593 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.089563694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089766374 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.158015625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09165118 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090447256 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09068283 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089389999 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089268125 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089465497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090578768 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108545646 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.091205663 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093021536 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.091507726 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093149066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090360513 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089709523 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090245205 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090149732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.089669364 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093566647 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091303859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091366157 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09238179 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109702289 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093738247 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.090569409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.092872983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.090818741 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091063116 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.08998351 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.092203485 seconds)
  done (took 6.430936364 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.493984116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.125786387 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092190145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.543169701 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094870234 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093192647 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.471212785 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113768308 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198988643 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.510319224 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105829659 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091406106 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104160103 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.198619741 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149948747 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226501429 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.406020556 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093911244 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116643813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103104173 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08992198 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092834012 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092901339 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.69478507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090011307 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091433904 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091550958 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.090380906 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.118868747 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093674132 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091083999 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.106596866 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.210838124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.101275309 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090963523 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09147504 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091791491 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.102520299 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175740086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.101414712 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168726693 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091284863 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09130791 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110411457 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093848387 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091071078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092354761 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.107134084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.10613703 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09089403 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091003891 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091300297 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09114099 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092877942 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092713885 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.225443822 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227186362 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110162054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092758653 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095217974 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174984193 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096400597 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103964687 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106616491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.10060155 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091382291 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046708314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102531684 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092371942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09078431 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092413428 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109397291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.091070171 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151703998 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.674496247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.090675008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091640984 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091306583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169388929 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09250506 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091972659 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101851359 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090817764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090694634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090931676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109025037 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.103922922 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.188609529 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.090682202 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091895904 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091641193 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101097912 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092270812 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192496476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092222971 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093288539 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.178355502 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090696939 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.112040015 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102590001 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09079716 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.103601373 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091764323 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096156082 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090395503 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092872006 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.099537309 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.096759302 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090848983 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090814481 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.103513862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096732971 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090843187 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.124033999 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.698258137 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.10379155 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091489287 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09682621 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090977979 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.103159347 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091933199 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176384372 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092791408 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100578921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090728647 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090201415 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093790698 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.111550219 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094597993 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091301484 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091609554 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094730552 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.197259093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.10083503 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090552856 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.172603164 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173427012 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092793783 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.107349406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091792748 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.105690046 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113113127 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091469034 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091718717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047156905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095168736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092760469 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090844304 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17642481 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09228003 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097724159 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093978361 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090615993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047122054 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095293333 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111692416 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098843714 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091416932 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092032165 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092941288 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090600069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09402711 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.104018395 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0908105 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091539713 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091712291 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.100919258 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091267263 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092420761 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092908881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113595172 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09355659 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092101865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098459797 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.105513907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.093050939 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.093707238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.86811137 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092717098 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092745383 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105124192 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094167002 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.196770692 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091348139 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121365852 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.100116992 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09279951 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.101336141 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175083717 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096171308 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105485761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093290564 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092167517 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092547592 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092377041 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091015484 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.092673656 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091332494 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110870803 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155048487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09255332 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198782541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09329692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.10562705 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091094126 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091398284 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194157791 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092221154 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095847733 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092628749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090675568 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092533555 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.935572603 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.095648825 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095374977 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091544882 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095106648 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.101579817 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092131968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09190659 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091737434 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.09406245 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.178958442 seconds)
  done (took 40.191766286 seconds)
done (took 54.562793007 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.157452355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.136359588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180630093 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115176378 seconds)
  done (took 1.615837112 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175437533 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110424726 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.170263062 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090718519 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.172164771 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.128627251 seconds)
  done (took 1.806019397 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.123400049 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.108357495 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.107518422 seconds)
  done (took 1.295951112 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.151151763 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.143848251 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41261909 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.33258957 seconds)
  done (took 2.092589847 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20227691 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092899523 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093372489 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.172701849 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174302682 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.127123288 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096370844 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.101297588 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097909518 seconds)
  done (took 2.158287796 seconds)
done (took 9.924300849 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16540588 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118936144 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099291956 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100428064 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161329943 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119783668 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.107943964 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.120433262 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100785651 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090755536 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091515339 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.103902249 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099939944 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.172470536 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102297367 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091222354 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093239022 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.10064101 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125366221 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106243468 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162771118 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096364908 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.101249468 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091828297 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16163061 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095433853 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099520197 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.130463309 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104315431 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091194418 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108014993 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092129732 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105707786 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.104477462 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093955104 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.091067796 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094337974 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096498514 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093580475 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09192419 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104999875 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112276707 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.099533467 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.091741415 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091411275 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09153678 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093538152 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103678198 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090992786 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111821901 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095890826 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.106212459 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090694494 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092067713 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112638276 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092466018 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.100415703 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093771632 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104220865 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094335949 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093949796 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093600241 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090324545 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093762272 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090446488 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091659002 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.090723897 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091840729 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110675177 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096651327 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094414939 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093350348 seconds)
done (took 8.452130331 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092992272 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109123304 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097510165 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.165376267 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.147404987 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118913585 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.09158071 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092092018 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.098899588 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110263393 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094192565 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093723581 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.092300984 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.092115345 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092075326 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096806235 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.090142049 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091457021 seconds)
  done (took 2.826532829 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102913855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.113983 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102239538 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10406463 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.092012119 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092058355 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091626945 seconds)
  done (took 1.67561734 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092690209 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.175987394 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.158799733 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.159455892 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.185746875 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.163602579 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099818979 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109563863 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09169071 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.173133329 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.19721635 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094020406 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.095557682 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160856279 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091408971 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.153705998 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.170298053 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094676564 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.155828614 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094535625 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108568834 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.099580749 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091985091 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.172172942 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114094258 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093883307 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.168747506 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094739003 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.118686671 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.16887783 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.098211512 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092200412 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.188954126 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093558057 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.169993755 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094527942 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.170908046 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100053645 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099684185 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.096085473 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117930918 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.152819294 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094543168 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098727918 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093456507 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.178007204 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092389682 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.192166895 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093716806 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095622495 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096634076 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09301106 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097205657 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093234831 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.178374778 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094754997 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.177950841 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.156268265 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.171851463 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.154684894 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095945022 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191450184 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.163895981 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094912628 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1507661 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092863555 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.176619597 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097091188 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095957663 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.153353859 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093701301 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.15909139 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.181356931 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.096813917 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096345492 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093535987 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100556153 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.160655905 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092185187 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093874088 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.177950283 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.09710795 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.152778786 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09244765 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095141009 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.098116248 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092767873 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092816691 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157146171 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.179492169 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092424043 seconds)
  done (took 12.466736797 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093124901 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092422437 seconds)
  done (took 1.191561162 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099966833 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091782551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101157976 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.093942742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098370261 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.172247462 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.172492955 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091820894 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118392639 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099581728 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.173015088 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.174662713 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.172708135 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.092634405 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.197008083 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098883314 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.173082625 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092310691 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099310743 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092866488 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.096562908 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093286235 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092556742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.176024409 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092316208 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100802763 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093407479 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.098923963 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.098927036 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092099491 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093164501 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.092353155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.092978444 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092770526 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196535118 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093308933 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09481464 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09242544 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091319364 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.092174082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.174852263 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092958539 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.098869276 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0926981 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114167241 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093676367 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093499809 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095446704 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.173972962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.092301402 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092686089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092340584 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092624278 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092224158 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092803352 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113952619 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093008685 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.174284034 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0961616 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093124063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092181136 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092288692 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09261904 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092752996 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.091843034 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.093381288 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09305038 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115239235 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094067479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094957955 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093273593 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092188539 seconds)
  done (took 8.871712387 seconds)
done (took 28.005668598 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.109639292 seconds)
  done (took 2.110471241 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.565392778 seconds)
  done (took 1.568169807 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.907651664 seconds)
  done (took 7.938710642 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.333136288 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.272899508 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.857867052 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129857994 seconds)
  done (took 2.598667261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.0559289 seconds)
  done (took 2.077149126 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228508598 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.189763377 seconds)
  done (took 1.426774313 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.661330117 seconds)
  done (took 1.676022558 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.289181187 seconds)
  done (took 2.289538216 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.187863065 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156965142 seconds)
  done (took 1.362404465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.515594267 seconds)
  done (took 1.530858917 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.140431545 seconds)
  done (took 8.160628108 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223488545 seconds)
  done (took 1.221690621 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.254985428 seconds)
  done (took 1.260394984 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.858092359 seconds)
  done (took 2.864193904 seconds)
done (took 39.103153621 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100260235 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.103534814 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104398402 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.101038477 seconds)
  done (took 1.401764987 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098857613 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094335809 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095895993 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09362664 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097566806 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093720298 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.097294565 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09437506 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095081645 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092933815 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093421586 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092885764 seconds)
  done (took 2.147671292 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137483824 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.122177828 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.136060668 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20643952 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152513669 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273299 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.223686336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235608942 seconds)
  done (took 2.496207723 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.096181784 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.115738252 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.112331324 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.110307812 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095401308 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.288068336 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128150445 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.095683117 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.134916598 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.094338603 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113720537 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.415350932 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.093008964 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.113595032 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.094819879 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094261498 seconds)
  done (took 3.197509614 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.044246898 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.281552214 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.785244479 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.175301971 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.342029458 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.110632924 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.423076636 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094982609 seconds)
  done (took 8.280171522 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.162931892 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.105341189 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.117588975 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.119456252 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116837623 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.119580499 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.11653542 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.092914609 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.099705487 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.0942256 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.1131426 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.094166514 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.119490964 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.102724306 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.093368647 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.093048704 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.093331701 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.099441836 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.145963743 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.092276609 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.103720871 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.10403802 seconds)
  done (took 3.424398102 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100452858 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099140959 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098457353 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097694336 seconds)
  done (took 1.425404865 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.163675493 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.09684367 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092993459 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.093532076 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103837227 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101366452 seconds)
  done (took 1.67901875 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132811861 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099254661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174949343 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.432662421 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10613703 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147568137 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.377543122 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117467731 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143321298 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106763157 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127355441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109465247 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138990231 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135752249 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106074593 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.367498898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141729266 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140978612 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111204295 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140183749 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120943801 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154775758 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129254984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111763514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131693772 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110966834 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09727934 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100125582 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115449737 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119559687 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115064982 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112971908 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122613707 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128617054 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110794536 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116739007 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199946795 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101743455 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.221116876 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.12820534 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142686161 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106975126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144600581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112985946 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101956611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136780872 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106151627 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123458646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103630776 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110485907 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124260075 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142037196 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12013525 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105397481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391528629 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120057237 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.106098059 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139936371 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134127531 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132616305 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128155054 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097016736 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159891422 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12580231 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123354095 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10650258 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.11159813 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092851332 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149689636 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137105284 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141796523 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146736258 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.135110618 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104225474 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121405243 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11623168 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137853005 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12417878 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121704373 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097181981 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134992515 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101971696 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10113863 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.163672699 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098462661 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136472802 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123159027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301933507 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133480522 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115031807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112210568 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116873102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123073332 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135727595 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11259721 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131831569 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.110273031 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137567843 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09845449 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115183711 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131851962 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097207753 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113488104 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099267931 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141183316 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128636889 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114517566 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126116037 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103719894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131631893 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110344689 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119872506 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138751793 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128973035 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101617252 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103100821 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129420927 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127188241 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104392465 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119962042 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148640969 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.135235982 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101176693 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102867271 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171456231 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107528548 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12906285 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125717873 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102520579 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.12341283 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125804545 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112382238 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.108187151 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100782578 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116889235 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12549019 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.119860913 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109524892 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129514654 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098598991 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098865156 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129726343 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103150897 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.130606832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118965128 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10523091 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135139811 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125646215 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123212735 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106127323 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104185106 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110313469 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122571383 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126644666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115215071 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095907238 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142225768 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129874476 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100506566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165178826 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114324245 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16625487 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123203307 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101181442 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164994864 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10078649 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098859987 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103476357 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138267862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113892067 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.122073135 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143438561 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.112509558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.137523215 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111333991 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114456314 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127231123 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134786065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.105221691 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124243314 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120067294 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09812854 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09337605 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.099066648 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108958409 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099156674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107675075 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117011528 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137647602 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141136732 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122418221 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104698998 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128329029 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.09708113 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136964554 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123758545 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107046155 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.120813199 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126388279 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131339606 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102940256 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106200655 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097856158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118998233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09994148 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117728868 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106263443 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101831036 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102296667 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127710095 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118069204 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130613746 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144869958 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116650169 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157209586 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100805626 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.139113081 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111588911 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124401714 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163235493 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103195455 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.113592588 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126672114 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105061964 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134654065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123108602 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123594767 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125374253 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146200086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100145207 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105487576 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147393813 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101163424 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10803825 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105405792 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101910376 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104950147 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105204859 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094307524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120690557 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128994197 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110020205 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108914897 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109489901 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100325607 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125862653 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126678749 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109765494 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135917284 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116719381 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112013337 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107949202 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106531913 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112979939 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120136995 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.418312273 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123251567 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119724722 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101610477 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101770623 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127105409 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128685499 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109603952 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165677423 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104203056 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124237377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128066146 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.102513734 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101855411 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130225498 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111890066 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12405097 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094617829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115788328 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.130773474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12239238 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132426057 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126041167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122224411 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.116119026 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116844607 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104439887 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132409435 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14098846 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118470303 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126584463 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108651527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166295449 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099770648 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099970045 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.09507033 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191787307 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103146566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121532145 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.143994708 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172676777 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126379339 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148434238 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128613911 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100059792 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121973402 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111113362 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165878706 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101933633 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10124835 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126854818 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152776551 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100538064 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147253991 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.416158088 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133214217 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113097343 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.116056867 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.405091038 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100681239 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101961639 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111039539 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11562001 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.097973003 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.16154687 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12369883 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105160091 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109406441 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101460947 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14211004 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155009376 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105550574 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116692423 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10197456 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11274695 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107254002 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113612353 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111203736 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111276999 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110074542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149280855 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119597332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.100609651 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121849643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121466424 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121789859 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109398898 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107282707 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184452926 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100978413 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10992613 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102534058 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093852996 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139312548 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.144427654 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100318623 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113047476 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141551031 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103279963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095394393 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104828623 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123644424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103655709 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101261201 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121274151 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101554185 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12326791 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146111038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102317131 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124224596 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104029988 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096380692 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102662846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105534509 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102537271 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.154979904 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116700944 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094403695 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116164493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105016008 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114673311 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107640433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105390916 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.111172377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.100858566 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148792385 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116690537 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136330115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11014117 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1448562 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123271472 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113231019 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102742814 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103812084 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223954596 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106706377 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118360093 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101299055 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104789583 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131036007 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094878756 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111719235 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124026526 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129016197 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104047449 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120036982 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108584479 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103625328 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130105022 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129358838 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136365037 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125072818 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16791849 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104080763 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123570602 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110886028 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100310661 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.13576922 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116590385 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13421595 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106415698 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.102730591 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106782225 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124808399 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101753791 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117368417 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122789008 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122666786 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144759261 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.095333073 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12398064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103468535 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122651282 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095731238 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102923842 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125308742 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101246045 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.099036337 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147950728 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107145329 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123740037 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095441467 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138112884 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129418622 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120062754 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101802401 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37850763 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140636669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170578395 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.127345524 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12697732 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111589749 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113215724 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.138398046 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127176647 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095713917 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102795614 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.095192692 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.203842821 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120924526 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148079375 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144619647 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108985507 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167516484 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107513113 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.246933426 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131788756 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126057161 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139974643 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.09985355 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109624416 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102681563 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107005158 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146379927 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146918543 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12475518 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10421409 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095755543 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10285002 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103783099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112777819 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10737343 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126062958 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104661284 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.135716001 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104650179 seconds)
  done (took 61.422259075 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131279194 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12487831 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.207099241 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.194750464 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.155799421 seconds)
  done (took 1.933587505 seconds)
done (took 88.400905872 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101765455 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.102011086 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105966198 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.102374402 seconds)
  done (took 1.513267365 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.148574969 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095954172 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097664794 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098252997 seconds)
  done (took 1.5577395 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405361394 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.100162737 seconds)
  done (took 1.660210702 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.128173491 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.120178131 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120261243 seconds)
  done (took 1.495654859 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109167235 seconds)
  done (took 1.232100674 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102275436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.103478871 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.167644014 seconds)
  done (took 1.495950009 seconds)
done (took 10.074060116 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.199566718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.940135893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.407157223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150424785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.754811139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.409445713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.348080507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097331162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107198548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097341708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097532235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681337271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.324465493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873199797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.355971943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.874683995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700960437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097315588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097196578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097555422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.322334146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097594743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096942006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100295156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68100748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398660891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097467772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.894330278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098336947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09777207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384497638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097804546 seconds)
  done (took 20.188497644 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129772927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119661446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102077715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098699912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097435016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101312464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1006188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098485219 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113425038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097090139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097328159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119235903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101297658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098467829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112611248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097570718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098995899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097674991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097559404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097100406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.101472541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097391225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119909034 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097869149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098061772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10660371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098187696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.099502528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099131321 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098669181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10001635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098667715 seconds)
  done (took 4.421839537 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139256676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134478414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103277868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129218108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124938653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100918141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155063503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098360343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136837722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098659613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.098826953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098281213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113912461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099126642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114538518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09854619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098476001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098909575 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09794374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119982087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.102236255 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097437112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099007004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097991372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098658287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108630434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098167372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09876235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100259119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118889839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100621525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098957626 seconds)
  done (took 4.612402457 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097551092 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.107122142 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131348198 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.130670388 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097279339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.097402959 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097840585 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098818153 seconds)
  done (took 1.992160246 seconds)
done (took 32.341673128 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.09762219 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.09750388 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.096433283 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.098092781 seconds)
    (5/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.095606222 seconds)
    (6/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.096805537 seconds)
    (7/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.096231301 seconds)
    (8/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.098835334 seconds)
    (9/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.095733124 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.095891245 seconds)
    (11/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.099340635 seconds)
    (12/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.099312699 seconds)
    (13/77) benchmarking ("isnull", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.09659713 seconds)
    (14/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.097023371 seconds)
    (15/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.119318385 seconds)
    (16/77) benchmarking ("get2", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.09745101 seconds)
    (17/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.098220172 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.097360146 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.097352952 seconds)
    (20/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.096473302 seconds)
    (21/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.096500051 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.099298382 seconds)
    (23/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.097844076 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.096150216 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.098001917 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.096464642 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.096425251 seconds)
    (28/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.104600243 seconds)
    (29/77) benchmarking ("get1", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.097105784 seconds)
    (30/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.120400785 seconds)
    (31/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.096973365 seconds)
    (32/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.097110394 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.100250946 seconds)
    (34/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.096603416 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.096974064 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.096163974 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.098046197 seconds)
    (38/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.096164394 seconds)
    (39/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.096359879 seconds)
    (40/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.09603421 seconds)
    (41/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.096947175 seconds)
    (42/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.096111384 seconds)
    (43/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.095637301 seconds)
    (44/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.120668907 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.097314609 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.098730362 seconds)
    (47/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.098422432 seconds)
    (48/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.096140508 seconds)
    (49/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.097903162 seconds)
    (50/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.098368026 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.096613823 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.09671998 seconds)
    (53/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}()")...
    done (took 0.09961574 seconds)
    (54/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.096855962 seconds)
    (55/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.098057651 seconds)
    (56/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.096298279 seconds)
    (57/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.097300571 seconds)
    (58/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.098125048 seconds)
    (59/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.122298233 seconds)
    (60/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.096551035 seconds)
    (61/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.097720806 seconds)
    (62/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.098757461 seconds)
    (63/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.097873479 seconds)
    (64/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.096704686 seconds)
    (65/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.0973056 seconds)
    (66/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.098824718 seconds)
    (67/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.097627079 seconds)
    (68/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.097094749 seconds)
    (69/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.099834344 seconds)
    (70/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.096324051 seconds)
    (71/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.097043765 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.095794863 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.098030483 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.121258925 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.097122267 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.097220463 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.100555455 seconds)
  done (took 8.743014039 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.103653614 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.10433268 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.105558186 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.104821081 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.10242322 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.101137442 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.106232573 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.103643418 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.101231518 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.101866795 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.106322948 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.1090418 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.104411183 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.130660679 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.105072649 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.187153548 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.107432726 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.105210516 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.106125576 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.109245736 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.104581455 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.107034352 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.106814421 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.13546157 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.10604498 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.104296224 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.102848065 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.105802141 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.111779368 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.10719764 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.105458592 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.10468929 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.107872656 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.107151824 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.103608357 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.104263888 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.125410082 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.10218548 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.106128719 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.104537037 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.102898351 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.105269462 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.106263444 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.108036923 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.111199825 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.104585996 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.102116408 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.101388592 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.106882097 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.131162769 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.104802224 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.101410312 seconds)
  done (took 6.800553898 seconds)
done (took 16.680112743 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.294898744 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.115930106 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140435037 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.215838481 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.213271325 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143267869 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155237059 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.135419036 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.918876975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161544844 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140605031 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.327439544 seconds)
done (took 6.113717115 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.498291368 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.350966139 seconds)
    (2/2) benchmarking "String"...
    done (took 1.457066503 seconds)
  done (took 4.188510215 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.381567866 seconds)
    (2/2) benchmarking "String"...
    done (took 1.41015928 seconds)
  done (took 3.928456266 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.143555756 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.147148321 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.142575603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.329830281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.180054112 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.142941012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.142135254 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.142831082 seconds)
  done (took 16.364696238 seconds)
done (took 30.259248262 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.142033425 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.309709496 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.415230247 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.143179591 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.143590536 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.144070485 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.143706193 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.202189678 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.142752021 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.149952658 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.513602742 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.39942726 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.147724652 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.642527587 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.141683311 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.150772874 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.143336105 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.358238153 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.143060511 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.193643619 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.141626879 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.14483846 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.14402907 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.15693511 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.241644696 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.143908734 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.173779781 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.142949184 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.315598164 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.16000233 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.191500748 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.144436035 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.17538606 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.142971253 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.146144702 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.151161471 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.313909261 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.240068797 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.143851464 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.142067926 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.314318532 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.149082715 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.141966587 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.141983488 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.143174212 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.202249672 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.195988749 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.29188621 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.142582587 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.142899038 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.210096899 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.640918234 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.144089901 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.145519413 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.161434356 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.348858259 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.14205731 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.333783157 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.398690084 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.14898787 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.142081127 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.141587209 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.191391377 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.144420949 seconds)
  done (took 140.626944044 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.141736878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.141752523 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.142553323 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.149499947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.141735831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.142099914 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.14202693 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.142833038 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.142282479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.145868619 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.142319564 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.143405667 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.143022726 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144098981 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.14249787 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.165311315 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.14176726 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.142376345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.142099425 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.14184199 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.165495905 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.142461412 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.142703691 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.141825647 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.143736226 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.19126273 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.170806916 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.149218975 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.142572949 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.142060942 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.147000537 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.142803076 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.611153136 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.08337408 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.158263561 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.157853384 seconds)
  done (took 77.852074976 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.142096841 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.141923774 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.142410288 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.163569194 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.142256778 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.507480246 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.506940792 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.083926664 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.143519019 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.554561861 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.906643087 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.864596748 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.141873977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.175349812 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.142307202 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22329313 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.154570843 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.143458117 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.173384618 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.168592389 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141727381 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.142083222 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.508311358 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.15550071 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.33715342 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282103332 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.142245113 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.163754134 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.567247762 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142831641 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.163064381 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.488626243 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.164088744 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.143008479 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.276578537 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.64323033 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242809298 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.144314232 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.16403741 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.142448632 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.399734002 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.142357279 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.284397688 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.14354486 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.145952848 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.578633079 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.14178472 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.508163852 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.142521126 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.892189643 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.142231495 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.142608079 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.378356773 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40304413 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.142366707 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.141761393 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.145403546 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.142362098 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.142209635 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.163130172 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.348532939 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.273364371 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.143328142 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.145996708 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.162807156 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.142048021 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141876561 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.286453956 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.203696783 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.509223694 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.144229025 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.207734448 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219696792 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245485756 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.136927398 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.137447506 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1366671 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.136495989 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.236016396 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.137128053 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.136476084 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.417114774 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276451566 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.137453234 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.858143902 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.220296101 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.135544541 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.28595452 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.128686337 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.129006209 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639708095 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211697521 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.12878167 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.123989511 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.124196729 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.403356111 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.488327881 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.175803013 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.122368005 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.262249341 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.117416467 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.391284464 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.467733781 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558207437 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.112787457 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211523477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254405327 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.107169425 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.109222059 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.107433634 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.83093744 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.104788814 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.163178781 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.104281138 seconds)
  done (took 353.383891564 seconds)
done (took 572.999210528 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.104130211 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.106513055 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.104031037 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.103784497 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.111083679 seconds)
  done (took 11.628245254 seconds)
done (took 12.726306607 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.144663159 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.2000591 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.129002299 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.130258603 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.128553149 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.12768593 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.131988921 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.129835365 seconds)
  done (took 10.219270272 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.125262507 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.125123174 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.125033637 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.126560577 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.124909809 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.124054602 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.124655447 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.124970571 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.124973295 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.12499739 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.124084285 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.123895434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.124342209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.123788507 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.123539662 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.123764133 seconds)
  done (took 19.09302419 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.126468386 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.124765517 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.121326183 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.121642564 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.121379472 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.121835116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.122324424 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.121337358 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.121732519 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.12172358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.122765402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.119271382 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.119656487 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.119102087 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.119584551 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.122681872 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.119291078 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.12123518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.123183821 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.120352525 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.117690874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.117279997 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.117444753 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.117336429 seconds)
  done (took 27.999699055 seconds)
done (took 58.409207416 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.09595033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.097925302 seconds)
  done (took 5.283042627 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.525556357 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.584205157 seconds)
  done (took 4.199555963 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.116417109 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.11639036 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.116905439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.116895172 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.115832118 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.11574335 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.116543452 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.11566436 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.116174619 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.116308226 seconds)
  done (took 12.252267694 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.116679782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.116634804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.116582283 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.116355369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.1166985 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.116167147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.116198994 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.116079286 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.116860322 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.126632863 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.117799338 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.116808918 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.115984721 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.116364239 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.116079007 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.116547991 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.116374994 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.117154143 seconds)
  done (took 21.198245113 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.13995411 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.152909389 seconds)
  done (took 3.382168012 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.309628829 seconds)
    (2/7) benchmarking "second"...
    done (took 1.20770253 seconds)
    (3/7) benchmarking "month"...
    done (took 1.293739797 seconds)
    (4/7) benchmarking "year"...
    done (took 1.274542454 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208403527 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.16324555 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210289311 seconds)
  done (took 9.75719559 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.117144086 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.440377299 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.57276264 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.883892987 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.128658539 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.122344957 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.926617204 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.122338392 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.136122548 seconds)
  done (took 13.539845675 seconds)
done (took 70.702913549 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.097971956 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.095068793 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.108911545 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.102595519 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.587541265 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.112409267 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.095346692 seconds)
done (took 15.289066229 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.098094946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.100967937 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.095622705 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.099001347 seconds)
  done (took 9.482023587 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.965686977 seconds)
    (2/2) benchmarking "read"...
    done (took 1.433588937 seconds)
  done (took 4.48720148 seconds)
done (took 15.059055834 seconds)
(8/18) benchmarking "scalar"...
  (1/15) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.11622735 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.116695706 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.116238664 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.116256404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.116039268 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.115976759 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.11620528 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.116507134 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.116339376 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.116052468 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.11652201 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.116472562 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.116006791 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.115962581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.116191032 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.11934269 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.115643058 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116176016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.116261781 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.117089331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.115262423 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115009038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.116520474 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.115466569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.115913902 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.121675529 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.115388137 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.115382131 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.115513363 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.112048257 seconds)
  done (took 34.576601467 seconds)
  (2/15) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.118914214 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.116435547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.115440588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.111608257 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.112141984 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.111735438 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.114048442 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.109894002 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.10946399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.109862434 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.111327635 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.10941119 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.109336809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.109427533 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.10946371 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.109442339 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.107753577 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.107841787 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.110406288 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.107136668 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.108059691 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.107375386 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.109442479 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.107777602 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.109564421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.106519272 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.106953615 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.107351221 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.106877069 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.10699091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.106999151 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.107381043 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.106558802 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.106986231 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.107434123 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.107253583 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.113564022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.110871012 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.109625882 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.106482675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.106870573 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.107100351 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.10747917 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.107195056 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.106888244 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.107213354 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.108076942 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.107479031 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.106718878 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.107617456 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.106717411 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.107212796 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.107016891 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.108660676 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.107189538 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.107121793 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.106646313 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.106472129 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.107023456 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.10700823 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.107068853 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.106798846 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.107186257 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.107139183 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.107172847 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.106591418 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.106943767 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.107199037 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.106750726 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.107360999 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.107937678 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.107133875 seconds)
  done (took 80.898710306 seconds)
  (3/15) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.107100701 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.107389704 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.106499786 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.10828011 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.107994809 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.108317196 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.107019056 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.109098231 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.106551119 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.10753183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.107204903 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108545088 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.111841317 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1064011 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.107367494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.109108637 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.107054465 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.108326764 seconds)
  done (took 21.021885256 seconds)
  (4/15) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.106813444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.113427133 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.106565996 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.107401018 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.10707884 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.106697856 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.106822662 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.112974911 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.108104878 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.11128091 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.107147355 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.107166351 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.10877759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.107457799 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.106809253 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.106655183 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.106317989 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.106211062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.10582442 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.106237602 seconds)
  done (took 23.236357431 seconds)
  (5/15) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.108789044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.108479647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.107985101 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.108948561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.109603882 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.107986008 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.108143361 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.108681418 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.108462885 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.109831914 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.108830389 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.108066326 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.10797658 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.107763564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.10771698 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.107238567 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.108309584 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.107979094 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.107534136 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.108735684 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.108282206 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.105862764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.107073183 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.107341304 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.106859399 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.107515976 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.106834396 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.107386491 seconds)
  done (took 32.104836098 seconds)
  (6/15) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.22768021 seconds)
    (2/2) benchmarking "in"...
    done (took 1.228223226 seconds)
  done (took 3.534490804 seconds)
  (7/15) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.10825804 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.105185443 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.104469011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.103907347 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.109680638 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.107597901 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.122678659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.108814187 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.107409609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.10640103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.112224396 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.11007999 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.110464187 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.10986886 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.107346193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.118665369 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.106574656 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.106999361 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.107491533 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.103660459 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.107808053 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.110196555 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.111679775 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.108388853 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.10639656 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.122826583 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.121233852 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.108320129 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.105902294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.117302417 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.10798985 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.106544484 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.107475538 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.107789336 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.104558827 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.108915806 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.12168838 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.111257584 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.120835408 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.110891406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.105219386 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.104380243 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.108226262 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.108907844 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.109333876 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.109533482 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.104625595 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.104496598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.106288447 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.112836347 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.107270555 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.104741672 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.105865488 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.117358499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.110778542 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.121878488 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.113027432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.112002441 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.109959095 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.121202564 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.133908439 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.116494423 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.117755826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.108885076 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.120855592 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.116658271 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.120730018 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.10959159 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.108346739 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.103975652 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.122055814 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.139051132 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.121266468 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.108748955 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.106791792 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.104092567 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.106569627 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.106076128 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.124638057 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.12105883 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.109626371 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.107029812 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.121177001 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.112973863 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.106718249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.108210409 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.107012421 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.107139811 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.106260649 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.12133617 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.112255336 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.104420402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.106800244 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.106789767 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.111188232 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.108211945 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.108780733 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.108131348 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.105847748 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.104045842 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.107060263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.112839279 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.110481577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.10922213 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.108877044 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.124712228 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.108492497 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.105786567 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.12091377 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.109126586 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.106901443 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.110215063 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.11790808 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.107769291 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.112115514 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.11031752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.108457507 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.107760421 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.107975812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.104375773 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.120732811 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.123387199 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.109644809 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.105283221 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.117533312 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.112292003 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.106891945 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.118095883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.107293463 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.104712338 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.112467654 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.109118346 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.106839774 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.106993214 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.108641679 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.107887881 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.105599252 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.104987024 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.106995519 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.114815928 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.110466142 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.108272219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.109310758 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.111842155 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.109673583 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.115132378 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.127441137 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.110928352 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.109240567 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.110620911 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.106569418 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.106357519 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.108931799 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.108201958 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.107353177 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.109747266 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.105319957 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.110207031 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.104973195 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.104728751 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.105354459 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.109646555 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.109329615 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.108009615 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.116352087 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.108425241 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.10600077 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.104877024 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.104382059 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.107412961 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.105528852 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.106412624 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.113041959 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.109972575 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.104896509 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.107694631 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.110660999 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.108919088 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.106903399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.107604396 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.112241577 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.10932305 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.108403101 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.119226334 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.11095112 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.107762726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.104207526 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.106451316 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.107918751 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.10776545 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.111570892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.109479355 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.133939169 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.121264792 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.107783329 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.105066853 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.106029266 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.107187025 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.116725039 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.109421456 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.105506922 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.106968421 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.106127811 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.107671233 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.107471348 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.108579241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.106093659 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.105528154 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.106190529 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.107278307 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.105318141 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.107341583 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.111350124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.105969761 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.105058402 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.107315322 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.106289494 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.105977932 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.107829704 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.107651888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.105998675 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.108242256 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.125667726 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.107712022 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.108590485 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.111532688 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.109390377 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.107263361 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.105944688 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.111143602 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.114547318 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.120538164 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.113864549 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.109286174 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.121427243 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.111548333 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.107279354 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.116542265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.107533717 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.106770352 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.111956136 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.109473558 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.105616015 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.107829145 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.107227253 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.105786986 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.105934631 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.120189376 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.108565202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.107635894 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.106075919 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.107945012 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.106363037 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.107899405 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.109477051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.108843241 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.113272086 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.107458567 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.104888967 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.108483907 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.108064371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.107745754 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.107343189 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.11285688 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.111046384 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.117057204 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.110050797 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.111344187 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.108106135 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.105512021 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.107054745 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.10687679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.10839919 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.134992446 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.120852379 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.132176515 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.119442913 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.105887418 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.118727947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.111608327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.108829971 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.107692187 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.107990758 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.110105971 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.107087291 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.10633084 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.108363291 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.105616154 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.109592009 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.108208174 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.105799347 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.104299855 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.105641506 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.108252872 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.107834593 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.105012166 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.106398097 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.106307723 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.114546968 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.112342778 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.110044092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.107341374 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.125290933 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.113232346 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.110308371 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.110242022 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.107891793 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.107292065 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.111762117 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.10898837 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.115181197 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.110856346 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.112603285 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.112990905 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.107460313 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.122236075 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.111106936 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.113272295 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.110689495 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.104946167 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.106415907 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.108366364 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.108748187 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.124805256 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.112547901 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.110641095 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.109342117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.107716212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.109231418 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.104377868 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.107384256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.104760529 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.107040358 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.121557497 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.111939374 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.106823361 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.11768424 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.108673247 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.107208256 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.106203939 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.107905062 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.118942429 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.110116028 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.108609272 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.110493521 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.108620587 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.106191088 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.107092459 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.105254377 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.106459697 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.105794528 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.121088652 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.116214429 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.110016784 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.104982764 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.122661479 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.111440568 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.12174076 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.113039165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.108168784 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.109826326 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.105125309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.109374733 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.108020441 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.110141729 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.108960155 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.107112225 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.108182612 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.107907647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.110465514 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.109963425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.110862771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.106231805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.121546182 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.11451994 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.107313158 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.105830777 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.105461455 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.10717543 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.108025329 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.107875938 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.106122643 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.112586314 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.117118036 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.108855184 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.107216428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.108664237 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.10864119 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.109669952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.105348243 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.105683551 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.107660269 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.10510757 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.11572121 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.108291494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.119622474 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.108175558 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.109481939 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.110258015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.10809105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.122926246 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.116265763 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.109752015 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.109910346 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.107658383 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.107982795 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.108510726 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.10960039 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.108720878 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.106440212 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.10681484 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.114165077 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.110305578 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.122209186 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.111625229 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.109550942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.107337253 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.108591114 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.108390041 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.107792478 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.1085622 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.108833043 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.109938631 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.107794155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.107282498 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.106340268 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.108165919 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.106658047 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.113055159 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.110240066 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.110685094 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.106400332 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.107031977 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.105441062 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.1078934 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.107700288 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.126658495 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.117243401 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.116766036 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.113669343 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.108609691 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.107555926 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.114448632 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.110968651 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.11054632 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.109037399 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.109101304 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.110809413 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.110596397 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.109835964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.109351685 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.120802442 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.111619362 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.108628478 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.123175021 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.114472658 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.109661222 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.106837539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.108252592 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.10934058 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.106354865 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.105556719 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.108273056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.122191097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.114798327 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.110173647 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.111559717 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.111055183 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.107502567 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.109058352 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.105373665 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.109104726 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.106878186 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.108340733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.110662815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.105532764 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.105571735 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.107666903 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.108667659 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.114133509 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.110366619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.106353469 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.111674117 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.1107798 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.112184867 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.110125666 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.106579196 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.105892236 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.105889304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.108177584 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.108938574 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.108183171 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.117896068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.114786664 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.10795018 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.105963405 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.108670034 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.113228016 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.116279941 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.110040181 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.105922548 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.107184301 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.110591647 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.118111319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.111460752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.108501367 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.107506269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.110376326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.107420783 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.108227241 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.106333494 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.112887469 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.132951335 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.111998809 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.108058783 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.108731076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.120005344 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.108392066 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.105632497 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.105869887 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.113661451 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.114841559 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.111238796 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.110769044 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.121443306 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.112250936 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.108540898 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.105721685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.113308682 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.113518695 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.118310227 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.11043227 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.107959819 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.119292824 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.126567352 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.109165768 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.121970748 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.12849092 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.115863197 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.111429673 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.109905108 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.107317138 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.108760129 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.110433457 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.110322619 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.105862554 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.105880434 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.108293869 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.10695124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.113156149 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.113251972 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.122878126 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.109756904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.108215787 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.112015641 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.113778715 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.110354047 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.107136249 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.107874612 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.112358702 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.108057805 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.1077255 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.134289144 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.124492228 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.107409329 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.108827456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.106359825 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.117215604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.116608264 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.116789293 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.108809787 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.107732904 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.107709367 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.111560625 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.109988497 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.106785437 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.10815733 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.10861046 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.108474618 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.107763076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.130087213 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.119288354 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.123048608 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.11228041 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.1107886 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.106303463 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.109518466 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.109555063 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.108452269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.11186248 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.113400524 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.110485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.107460383 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.10615484 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.114403025 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.108941158 seconds)
  done (took 662.988731545 seconds)
  (8/15) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.108153628 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.106139544 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.105821627 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.106146598 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.107097628 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.105613082 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1058203 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.105534021 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.106300738 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.106325392 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.106526256 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105568173 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.107228859 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.108739597 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106893272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.107073253 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.10578943 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.105886091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.105667208 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.107364979 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.106327208 seconds)
  done (took 24.315869637 seconds)
  (9/15) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.107883551 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.107975881 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.106908428 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.107084707 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.105662598 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.105720148 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.108286256 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.106922465 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.106045538 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.109624904 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.108045792 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.108080713 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.114775769 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.108998917 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.110907888 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.107373291 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.108243373 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.108034828 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.108226123 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.106302484 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.120953021 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.110230288 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.106117894 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.107337742 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.109398548 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.105915704 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.105873589 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.108066954 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.107346472 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.112110626 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.105332878 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.10711844 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.115035788 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.110746765 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.107742472 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.107546846 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.108350091 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.106211062 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.106252548 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.121754729 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.113823552 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.108911056 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.133771969 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.117357801 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.106309957 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.11498627 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.111361787 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.106318409 seconds)
  done (took 54.344085657 seconds)
  (10/15) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.106261628 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.105630472 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.106233761 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.105760935 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.105989177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.105576135 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.106641913 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.108602637 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.106351862 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.105827284 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.105429468 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.107476307 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.105832033 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.106600637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.105886231 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.106108885 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.105922618 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.106571444 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.105989386 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.106386364 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.105806472 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.106242631 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.106029824 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.105670281 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.106395094 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.106309888 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.106034992 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.105577532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.105875754 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.106320294 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.106813374 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.106132351 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.106292358 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.106107558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.106127462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.107068224 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.107196662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.106153582 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.106111678 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.105925411 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.105836084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.106087653 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.107960447 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.105383164 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.111256396 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.106182847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.106267703 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.10606656 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.105684739 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.106046516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.106129907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.106372885 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.105781677 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.106191507 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.108221723 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.106841449 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.105941056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.106477577 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.106042815 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.106891246 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.10663465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.105951392 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.106698065 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.10644531 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.106341805 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.106259183 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.106109513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.105461805 seconds)
  done (took 76.312615593 seconds)
  (11/15) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.107273767 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.106570465 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.107987196 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.10862813 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.10820957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.106545462 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.106752262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.106081506 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.10723284 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.107046014 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.105702198 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.107335228 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.106297177 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.108582662 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.106083812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.107097139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.106340618 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.107326148 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.10662124 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.10869846 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.108095031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.106705329 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.106952358 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.107112574 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.106571723 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.107317697 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.106967792 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.107414847 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.106279297 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.106448593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.106939507 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.106923304 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.10999199 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.117791864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.109568053 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.109115831 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.106795355 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.107144561 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.106171671 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.106776148 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.106301716 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.108802035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.106446218 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.106755685 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.106420935 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.106381614 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.106745977 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.107760072 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.106252897 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.106578428 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.106576612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.10825825 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.106147017 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.106628224 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.10637058 seconds)
  done (took 61.983653928 seconds)
  (12/15) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.106011037 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.106614884 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.106363176 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.107131152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.106682561 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.106382872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.108199653 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.108181215 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.106643031 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.106340967 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.107915469 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.107270624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.106155399 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.106769583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.107314345 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.106274548 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.106308072 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.106102529 seconds)
  done (took 21.003017842 seconds)
  (13/15) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.108092028 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.107899056 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.108502275 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.124171446 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.111281191 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.108536079 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.108844358 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.108462885 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.126593054 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.131188959 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.128276088 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.112176486 seconds)
  done (took 14.464234663 seconds)
  (14/15) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107034282 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106353329 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.10666063 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106484491 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106720065 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.10604924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106455856 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107189888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106611113 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107986358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106681583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10805152 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106338453 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10692072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106610344 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106228243 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106615374 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106977081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.107141209 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107022199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106688497 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106507539 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.10692491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106659443 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106789139 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106679209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106852554 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10768199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106981482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107090154 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106932103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106758338 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106901373 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10831559 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106945443 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107364282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107222504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107609494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106734033 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107016681 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.107069482 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107876777 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107036098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106640307 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107191634 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.10674011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.107368891 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107168726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106492034 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107471488 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1075583 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106918624 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107053488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106779012 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106529259 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107864345 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.108627222 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107383558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106621379 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.107933069 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106853043 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10691576 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106708262 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.108420771 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107119628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106545742 seconds)
  done (took 74.146166844 seconds)
  (15/15) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107506198 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.107265875 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106532751 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107859457 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106994263 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106961576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.108196301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.10707451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108219697 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106769164 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106779989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107028066 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106734313 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106627386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106482536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107102587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106961227 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107096649 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106777126 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.107641691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10689886 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106191926 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107158459 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107244504 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.108340453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.108571838 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106539736 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107491672 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107125005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.107378668 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107054815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.107207348 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106865266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.10702185 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106759875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106512009 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.108501367 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106344599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107093856 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106868268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107358485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106940555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106837957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106904377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108343316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.11004947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106343552 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106624522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106588694 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107217894 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107928808 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.108939272 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.107780815 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106880002 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106444891 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107916028 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.107306942 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.106724884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107244155 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106866173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107086662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107161113 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.108445424 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106542738 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107568706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.110131184 seconds)
  done (took 74.163494815 seconds)
done (took 1260.184042081 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.334747735 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.164274241 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.362419202 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.097020857 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.109954415 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.105086059 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.604787731 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.357476184 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.55741404 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 1.741575378 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.448064939 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.287962248 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.089735085 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.100336013 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.265243506 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.095052521 seconds)
  done (took 29.801844426 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.140028421 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.117796055 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.21055862 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.111195076 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.140683672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.293787708 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.166194108 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.125323688 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.088947204 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.147451013 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.088662811 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.141105443 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.11172559 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.929513522 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.513049111 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.297541189 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.360300217 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.094219733 seconds)
  done (took 26.159309017 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.442811897 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.102244845 seconds)
  done (took 4.626977635 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.131255448 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.110672174 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.116775814 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.110875622 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.086805452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.08695596 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.108166897 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.091941859 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.093253967 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.20834493 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.118986849 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.132817239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.109909297 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.11515347 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.107787729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.163438451 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.307749679 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.107743519 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.106959272 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.122294602 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.109230441 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.260242102 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.151126691 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.112758403 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.205127132 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.094931485 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.121848596 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.124685688 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.301193399 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.1086275 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.108459952 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.120867256 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.116257312 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.914643405 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.607773865 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.091087071 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.129669772 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.126847765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.107729063 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.322376959 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.110359146 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.122957954 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.085875865 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.59238399 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.294997709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.253181288 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.086498779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.114665489 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.116336582 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.2171061 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.110624821 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.116322194 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.156285377 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.951284028 seconds)
  done (took 73.416137766 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.164375861 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.08647203 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.366184834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.096296393 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086438925 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098144883 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.090556279 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.322505396 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.157640926 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.085731363 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.41492525 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.617415176 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.096590844 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.160693409 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.144672727 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.146906391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088008538 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.085815173 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.08750603 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.092638317 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625093037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092955047 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.092842254 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.299263824 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.143799571 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.633410296 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.08622514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.086395972 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.091213973 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.08596128 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.598072772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.096954997 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.152822227 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.094922057 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.39617503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.454376217 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.427809291 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.091226615 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.087869623 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.088852989 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.09455553 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622173811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.452524235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.091826202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087526144 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.624513425 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.086140074 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.098664782 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.091768583 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.433779114 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.08638403 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.086442836 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.097680438 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.08931003 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.086031122 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.161402857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.17087571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.63303029 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085897795 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.086343731 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.08697803 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.087699072 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.088376951 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099026909 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.09084151 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.45697529 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.996228152 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.091845549 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.452444616 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.585412642 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09039704 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.661554588 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.091419726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.113009343 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.252414361 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086059058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.086880461 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.630837762 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.117430715 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.086077148 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.427621697 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.089744164 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.422241963 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085727312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093255085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640592774 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.097013105 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.144896988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.092553809 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.084831248 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.086007934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091625479 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.399573368 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.145387622 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.088118049 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.087130563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.125374393 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.086214455 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.086393179 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.090271047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.662669673 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.090307783 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.084430709 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089809745 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086120239 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.093595352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.085392493 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.08969716 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449932285 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.085374754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.094607841 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.089453764 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.08977203 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.098786375 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.2966255 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.088761985 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.368861431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.087116874 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087706404 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.090018081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090699942 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.100664477 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086781426 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.087635376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.086231077 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.496531856 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087204455 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.087265845 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088609382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086420347 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08558323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096232628 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.148113458 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.092563097 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818905672 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.150297325 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.15313763 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094672793 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.099693403 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.095217067 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.09943562 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099705975 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.525593513 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.401165889 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.009038999 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097196578 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.096445575 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898867167 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.174328174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371060803 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.099609385 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.093680767 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482064444 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.007660471 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.097740711 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.090800933 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.094905225 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451229238 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09618353 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.519326376 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.624856415 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.096125771 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.108239393 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887642556 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.096179968 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.096531689 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.10345715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.408652036 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.091292894 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.095559987 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.096469391 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096152591 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.090548595 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.099419067 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.103258103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.0963244 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.096488108 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.648538198 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.389882051 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.091723466 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.106580174 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.647738375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.114802937 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084859185 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.102480909 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.098667644 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.097404216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.155838881 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.102047265 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.168905976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.098187696 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.108016529 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.664280074 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.092869491 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.096104749 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.389513848 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745269842 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.09676873 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096483778 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.096010533 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.160264584 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.669452519 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.163660477 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.382966018 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.105682433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.153694405 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096697213 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.118628843 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.667994932 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099075448 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.096464013 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82503627 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.097544317 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920555471 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.093609041 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.098636915 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.738649237 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.096378876 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.103732255 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.088743338 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.088620767 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483784216 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.091762856 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.136713474 seconds)
  done (took 450.596724777 seconds)
done (took 585.681115819 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.096678006 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.096998578 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.097343594 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.097025187 seconds)
  done (took 9.479100031 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.12225563 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.120712627 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.119875928 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.119806785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.120142233 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.121710868 seconds)
  done (took 7.815882034 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.097033359 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.097867753 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.097018063 seconds)
  done (took 7.382938571 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.305512244 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.073483157 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.434265069 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.092308037 seconds)
  done (took 7.996315593 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.119020512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.118914563 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.119546208 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.119934735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.123321059 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.123169992 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.121617002 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.119780665 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.122784888 seconds)
  done (took 11.178951877 seconds)
done (took 44.943775254 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.154732735 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.794208957 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.123768113 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.121352303 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.124507662 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.096006203 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.138098218 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.120430329 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.137404344 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.138762897 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.096086451 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.118503548 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.149827992 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.121494849 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.150724613 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.12194344 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.123210012 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.120653402 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.139362135 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.145129838 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.127550648 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.129759169 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.151310163 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.120406513 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.14185952 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.142441089 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.14061858 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.09822115 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.113288009 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.138994631 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.096995505 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.133826097 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.142195876 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.127490653 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.128052667 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.121227846 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128170209 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.795492429 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.145048822 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.121686564 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.125409802 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.141750079 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.141013533 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.139846764 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.126921656 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.151364639 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.142611641 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.143591095 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.097423562 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.088886652 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.144601 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.13589242 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.126261657 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.104301392 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.087409509 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.133830427 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.120463154 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.154790983 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.119858818 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.13030414 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.151638766 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.15498619 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.13660976 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.142269279 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.11822474 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.149539128 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.125944158 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.147559057 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.118349687 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128653092 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.127751022 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.125354558 seconds)
done (took 91.758267377 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.117823083 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.124679403 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.312531643 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.118497331 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.315471541 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.125787574 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.118503267 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.128613632 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.105311925 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.118284315 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.31189874 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.119076455 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.3119521 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.316157452 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.312092201 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.101615296 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.120326754 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.099502598 seconds)
  done (took 25.368908714 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.250219598 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.246956334 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.278393432 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.11845829 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.216001491 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.278896918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.115911597 seconds)
  done (took 9.595104727 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.133767988 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.120014982 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.239956562 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.240915343 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.121139078 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.372055552 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.140615507 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.119139941 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.239816879 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.121150252 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.119099014 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.128722654 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.10549896 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.238021958 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.139913742 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.298850573 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.12572339 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.123881257 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345507275 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.118050277 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.128342089 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.231103271 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.141317202 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.121617561 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.137095646 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.118237662 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.119189528 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.118087293 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.256093251 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.118943756 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.104434509 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.118225649 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.130840521 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.11811963 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.119011153 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.103010096 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.119307769 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.119112912 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.120127357 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.119572259 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.118894099 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.152001173 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.119074779 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.119251966 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.118850868 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.119611719 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.232121418 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.11888495 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.118997884 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.119392138 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.239807381 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.127543384 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.122586888 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.118988664 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.121964812 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.117856537 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34573342 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.242003749 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.121339662 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.242849248 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.119406455 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.119588671 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.125152717 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.119269147 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.249032995 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.118817693 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.24110566 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.118578906 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.377114786 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.151894525 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.121161427 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.130885638 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.130393747 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.102520998 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.133896846 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.119869712 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.126320114 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.135921265 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.118318677 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.118686252 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.38160111 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.11971236 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.147670455 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.140514657 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.120010233 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.235261132 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.118709509 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.118861973 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.262097925 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.299481659 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.240509356 seconds)
  done (took 110.648306048 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.147399749 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.125752165 seconds)
  done (took 3.364416452 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.124698609 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.118454518 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.117991401 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.118533648 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.121230012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.12015676 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.120500379 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.122694583 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.120689021 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.118763147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.120329478 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.122443573 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.120774716 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.121301459 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.120285338 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.11864309 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.120493116 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.119093077 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.11855111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.12125271 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.740186235 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.121243351 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.128523537 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.120130779 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.121162405 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.118655522 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.154630208 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.118501242 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.119031687 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.139732224 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.121510563 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.120471256 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.119502556 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.127182724 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.120103262 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.120127706 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.121268843 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.122989942 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.118795972 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.120253769 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.123678506 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.1218597 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.11853721 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.123406755 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.121691662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.12068923 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.123305345 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.154572449 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.120393313 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.123444189 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.1226517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.12039904 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.119634697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.122411376 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.12322419 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.12109424 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.122487434 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.120629586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.121113865 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.120259916 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.119671852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.120395407 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.123487281 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.12087431 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.118849821 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.122873237 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.120232957 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.121961319 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.121567973 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.118368056 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.125738475 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.118347312 seconds)
  done (took 82.513332109 seconds)
done (took 232.580453219 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.832205478 seconds)
  done (took 3.923172214 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.283630202 seconds)
  done (took 3.362522497 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.230772363 seconds)
  done (took 9.311454481 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.111104212 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.114428728 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.109506872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.090369313 seconds)
  done (took 9.507448818 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.653639615 seconds)
  done (took 3.743588832 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.097523226 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.091116615 seconds)
  done (took 5.280952836 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.143126581 seconds)
  done (took 3.224270699 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.203593138 seconds)
  done (took 3.288523702 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.118145121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.098804603 seconds)
  done (took 5.306965152 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.099817093 seconds)
  done (took 3.191061797 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.233589062 seconds)
  done (took 8.31466292 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.09745108 seconds)
  done (took 3.188906564 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.134187665 seconds)
  done (took 3.223325256 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.647213308 seconds)
  done (took 3.738671587 seconds)
done (took 69.697494634 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.097004654 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.0886457 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.093582431 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.095102457 seconds)
  done (took 9.464925812 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.178797528 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.205017971 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.114709769 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.357230693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.46037677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.118336905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.122988405 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.268831184 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.4440865 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.442137719 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.164125899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.173490847 seconds)
  done (took 16.137069806 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.125379422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.094488622 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.098105003 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.15298349 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.12632165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.222240621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.19128431 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.178421223 seconds)
  done (took 18.282342538 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.104114287 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.116509369 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.099222254 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.118055166 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.095177327 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.412668957 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.094394965 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.119778569 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.139914161 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.096815105 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.097279131 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.539008068 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.12017876 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.093231898 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.103112554 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.129217969 seconds)
  done (took 27.563624886 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.605652157 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.194791461 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.770330501 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.090341097 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.091957644 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.092762914 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.41132549 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.089914716 seconds)
  done (took 20.440006513 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.136487887 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.143352936 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.125755936 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.122353408 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.126720793 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.122012025 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.142378092 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.122120348 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.133324356 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.119435579 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.119743649 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.126960768 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.141404295 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.120093693 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.120207255 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.133509645 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.12917788 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.133344611 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.143234835 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.126158781 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.120859643 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.133507131 seconds)
  done (took 25.923656703 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.60815059 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.253484819 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.394858662 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.218262462 seconds)
  done (took 6.566038461 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.096881943 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.097123454 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.535751648 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.442500963 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.09744661 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.098262146 seconds)
  done (took 12.459694212 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707112546 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065724839 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09511398 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203477971 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086208798 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098321721 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198454216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537015147 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.1082711 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443503744 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097492914 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701062754 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095847803 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099065461 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098732597 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.098563092 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099850756 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802342532 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098817175 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097781709 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089520462 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087421172 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099972489 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.27528787 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111471787 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087200055 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.436023813 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095967442 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384507067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330710979 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347555789 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098792451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.448435656 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485334902 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.302713285 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299712904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111597362 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088565941 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.103223392 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.08859283 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08904645 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088595764 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339266327 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100794731 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098293296 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100493575 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550520566 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.113117946 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.096190794 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099125035 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346925612 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7180147 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.110114841 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090522964 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234836218 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086673242 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.110435552 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369280898 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096120604 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087463636 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099993302 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.097695036 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116383166 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090126475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715926865 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.111213863 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.107502079 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.113174028 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099946299 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087651021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.138690262 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108526021 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.132979061 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088973256 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789891019 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099866889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096408 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774424108 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089232157 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.098385277 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109287362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099717848 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098133848 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.098929829 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09748167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844879506 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.120603745 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.097816908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.138379887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.552844185 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.279474994 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815355779 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098549124 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097614718 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.109438778 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088410475 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.094265548 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10063221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.144164143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549202521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088844957 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.108963577 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093594374 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.395912986 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091966443 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.09788668 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539956023 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091421123 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.146596645 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101908769 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.272445819 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.632194988 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335944746 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099616718 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.152671649 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098519302 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901090565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10383604 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.119781154 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100613423 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419156445 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.098466222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098246781 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300645843 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121421097 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089188855 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094674749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08916476 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083645553 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.386549645 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099436388 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340950899 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.090409262 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095257993 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.087577408 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098021334 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.090156018 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102131633 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104625456 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446737466 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097480762 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106597843 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087970614 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.095222304 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.101996141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.111585418 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09054231 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098991988 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098659194 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345167986 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.151318474 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317638646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.149787693 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.101512699 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102050198 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.121709891 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.120876195 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098173238 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088720151 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116425769 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.111988054 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097651733 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637429313 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100694439 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107488111 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063790863 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.126926615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297079258 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.125805244 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.275221382 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.098932064 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109251043 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.111058815 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.089038208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101952839 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338620994 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.100930852 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338268575 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.540168062 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627800225 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533366708 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.100436305 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.099068255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.098430953 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098909086 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100974014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099960197 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286987402 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35111986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104102484 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62787761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101680947 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102204268 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.111141159 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334745291 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.113505495 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090399904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.098777436 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104799849 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10418783 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34339248 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4669378 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.137464548 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098272273 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.699324754 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.124547403 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097934801 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098453511 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.152880545 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098234768 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620276713 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089160012 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10595244 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336562212 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089008875 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.139653234 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.099771207 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098870533 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094002736 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.102247849 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.110629361 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.266036694 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099240204 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089495669 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0881001 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785886948 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58298887 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089848367 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.092911746 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097731911 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.551415861 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102562763 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088315351 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37472307 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55000409 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088287624 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537975046 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.095510749 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703488411 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345706182 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089977643 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098956997 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.089120132 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337322085 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386334464 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.153592367 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104938066 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100995944 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.100621455 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62302797 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091026589 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337335565 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549296528 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091458069 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089940627 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.15602857 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098696909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450219542 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.087706893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08947297 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088229726 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098850071 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62462538 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.107873565 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088799979 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716925944 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09787746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.551299017 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087769332 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.27426707 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345032563 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.425968693 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.100236 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.100838103 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.108414275 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348947656 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104707239 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089206665 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592230129 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.020278277 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.114079312 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098396591 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907452477 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103437665 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382243789 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.089507402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.099309765 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099072026 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086785896 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096982584 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.099147804 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115104931 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088816741 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676079968 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.095640025 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108240999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089665872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098144464 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097812439 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.138667703 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645647606 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09954548 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116685299 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.151384404 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.120325636 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098970407 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.100688921 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089608602 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101592248 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240256809 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098897422 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10006461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.107764682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19787649 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384362634 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096592521 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100622363 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34047081 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.086516589 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.101782496 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80585073 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100501119 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090476729 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089254297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093252291 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.139535691 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.301370027 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276356371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.345884557 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348560526 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452795987 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091696228 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09113645 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.63894864 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720782649 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088912424 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.101144636 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.098846229 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649493347 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826207509 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639804406 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33978881 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100905639 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110736568 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089261211 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488202375 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08824097 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437945426 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098470413 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.107521005 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.144758353 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099442743 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087591865 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395612668 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445684049 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098750337 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097996051 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099050934 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.098811169 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346399288 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.398308751 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7996109 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785604092 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087747681 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088560494 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550332204 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436981965 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087318855 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101321474 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098932693 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.108427965 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092708996 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.124619967 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099000997 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461559253 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327101512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477193154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.319346266 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.087648506 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.061325536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099060712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103645024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099331207 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.264918674 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629654371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744710204 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095746533 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.301296694 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290933156 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.099228121 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498095533 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.098853143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098397359 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099708559 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102930058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.093219257 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.325596572 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640521605 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0935568 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.123009567 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.099890496 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099821982 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.263211264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109780161 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845562624 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109593755 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344779388 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11881057 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088764151 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622866916 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349391427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100915766 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.111820574 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350964463 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104132097 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.151761337 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.050035134 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.097689727 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918677438 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.395303341 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815543792 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100412909 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733828583 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637706582 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.106525348 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691222466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087270595 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10685437 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.448702031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.125064926 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10612823 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.465315387 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.121054081 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09985327 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287426286 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.630280638 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720196402 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.110703533 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088863535 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.101480153 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098919632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207265672 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093053942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104433112 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.525411157 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089724748 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09589774 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546979542 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.10066308 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104563157 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.099138096 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099095982 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.113960372 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.109493044 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.091939625 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089880145 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364625138 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63015709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093868361 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.800520024 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.510690151 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094781396 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100677537 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.102407296 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.111841317 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089070545 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087814799 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089304653 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101905417 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918126321 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.100263099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.334302358 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.111379945 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.388657525 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391001607 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101431124 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266186434 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101763569 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.144743266 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.102804064 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089599173 seconds)
  done (took 874.490274309 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.145780549 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.146371127 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.145922676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.147134004 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.147771235 seconds)
  done (took 6.812738827 seconds)
done (took 1019.233189037 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.121530259 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.121870805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.121201795 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.122870024 seconds)
  done (took 5.580399226 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.101408985 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.100391816 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.100627601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.603540367 seconds)
  done (took 8.998459512 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.46316686 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.572577071 seconds)
  done (took 4.129380839 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.108671221 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.099274007 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.10602277 seconds)
  done (took 7.407731388 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.567756766 seconds)
  done (took 2.652262833 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.656090764 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.639963015 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.326126597 seconds)
  done (took 5.70517019 seconds)
done (took 35.566570582 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.09860353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.8630777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.253787441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.106909405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.250556094 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.24564688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.327652909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.099504134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.089210366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.095304857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.095067885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.251131865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.3150365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.872589314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.310980398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.875721976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.261110858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.098648299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.086787922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.088336862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.319041828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.097086438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.093109955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.088015872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.250667421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.237631685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.102457303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.864042348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.096840318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.088435058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.245911089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.103376973 seconds)
  done (took 73.366084195 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.092366075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.089220005 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.088790062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.089662659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.087688665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.089019351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.091377332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.087661078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.0985376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.088471447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.088787758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.088083128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.091592933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.088918919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.091159567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.088981497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.088889935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.096953251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.089178658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.088825472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.089203802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.094745149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.088230913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.088633129 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.090089529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.090023669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.088129852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.088648145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.088383586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.090114881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.099923251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.100297601 seconds)
  done (took 67.985159078 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.092414615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.090689675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.090170196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.088556582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.088947833 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.090567593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.088728672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.088470608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.088851732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.090025065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.088235382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.091842265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.09162478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.088289998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.092054025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.088922062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.092099422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.09915367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.088613853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.09340252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.091759643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.08865897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.088831757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.090157205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.099212686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.090607123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.089379732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.088729999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.090519682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.088890005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.099702553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.099401188 seconds)
  done (took 68.00184891 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.402128791 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.107939355 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.112010542 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.093363479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.126517765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.121859491 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.099852432 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.413046449 seconds)
  done (took 12.560105374 seconds)
done (took 223.005398667 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 1.12140238 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 1.109923336 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 1.109014491 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 1.119038671 seconds)
    (5/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 1.121091307 seconds)
    (6/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 1.121570348 seconds)
    (7/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 1.117804226 seconds)
    (8/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.126307612 seconds)
    (9/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 1.121937713 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 1.122725243 seconds)
    (11/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 1.121851179 seconds)
    (12/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 1.121546462 seconds)
    (13/77) benchmarking ("isnull", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.12024504 seconds)
    (14/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 1.122602742 seconds)
    (15/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 1.121463561 seconds)
    (16/77) benchmarking ("get2", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.121930659 seconds)
    (17/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 1.120924945 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 1.12075104 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 1.121578659 seconds)
    (20/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 1.111295019 seconds)
    (21/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 1.117794379 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 1.119252385 seconds)
    (23/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.119697204 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 1.106206243 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 1.11251333 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 1.115605692 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 1.114628263 seconds)
    (28/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.121750399 seconds)
    (29/77) benchmarking ("get1", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.122921916 seconds)
    (30/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 1.121056106 seconds)
    (31/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 1.121601009 seconds)
    (32/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 1.121605199 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 1.119348417 seconds)
    (34/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 1.120647745 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 1.123534425 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 1.105560072 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 1.117354518 seconds)
    (38/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 1.118122912 seconds)
    (39/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 1.119968258 seconds)
    (40/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 1.11840542 seconds)
    (41/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 1.119343389 seconds)
    (42/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 1.121312773 seconds)
    (43/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 1.115490385 seconds)
    (44/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 1.120812989 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 1.122090455 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 1.120637617 seconds)
    (47/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 1.120410074 seconds)
    (48/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 1.120838271 seconds)
    (49/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 1.122317929 seconds)
    (50/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.121389458 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 1.120978094 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 1.120782119 seconds)
    (53/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}()")...
    done (took 1.121767719 seconds)
    (54/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 1.121256132 seconds)
    (55/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 1.120884437 seconds)
    (56/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 1.118664881 seconds)
    (57/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 1.119709078 seconds)
    (58/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 1.122663643 seconds)
    (59/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 1.121818563 seconds)
    (60/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 1.121228545 seconds)
    (61/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 1.111921914 seconds)
    (62/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 1.106737246 seconds)
    (63/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 1.108671082 seconds)
    (64/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 1.111135082 seconds)
    (65/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 1.105523475 seconds)
    (66/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 1.107867698 seconds)
    (67/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 1.111109101 seconds)
    (68/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 1.113979159 seconds)
    (69/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 1.113534759 seconds)
    (70/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 1.110836022 seconds)
    (71/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 1.119433903 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 1.114632804 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 1.114352111 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 1.117424849 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 1.116386308 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 1.112122778 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 1.115331286 seconds)
  done (took 87.175868805 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 1.151419465 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 1.120093414 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 1.147956664 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 1.132547442 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 1.144968714 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 1.140712238 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 2.10095362 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 1.395017411 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 1.132534312 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 1.13012367 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 1.135680312 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 2.095832019 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 1.111200454 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 1.150737744 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 1.12872887 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 1.121700322 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 1.130338432 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 1.110234339 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 1.145743463 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 1.12438998 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 1.125762012 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 1.157441739 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.162150997 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.675545054 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 1.147476854 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 1.388634407 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 1.132660166 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 1.156133961 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 2.113378454 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 1.148330594 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 1.123794583 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 1.131398832 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 1.136598236 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 1.125612272 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 1.123509072 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 1.124634844 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 1.122166722 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 1.123534773 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 1.147757756 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 1.144951673 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 1.13202007 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 1.1273208 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 1.137686713 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.196568502 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.669706671 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 1.141528193 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 1.11851528 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 1.120397293 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 1.109545285 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 2.089843967 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 1.144358092 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 1.121717224 seconds)
  done (took 65.568268145 seconds)
done (took 153.837880854 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.104691596 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.357689341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.091427549 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.090002577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.127147523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.106055106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.099556166 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.102554242 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.346048195 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.090542031 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.091013389 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.089962279 seconds)
done (took 26.779496961 seconds)
SAVING RESULT...
DONE!
