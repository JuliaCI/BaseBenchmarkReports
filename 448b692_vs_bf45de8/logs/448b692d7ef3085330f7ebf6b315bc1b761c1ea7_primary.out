cset: moving following pidspec: 20679
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.549449701 seconds)
loading group "string"... done (took 0.523564486 seconds)
loading group "linalg"... done (took 8.628618625 seconds)
loading group "parallel"... done (took 0.172156447 seconds)
loading group "find"... done (took 4.284530673 seconds)
loading group "tuple"... done (took 1.831053524 seconds)
loading group "dates"... done (took 1.338899974 seconds)
loading group "micro"... done (took 0.18943866 seconds)
loading group "io"... done (took 0.496383922 seconds)
loading group "scalar"... done (took 50.027813683 seconds)
loading group "sparse"... done (took 14.027668359 seconds)
loading group "broadcast"... done (took 1.683977612 seconds)
loading group "union"... done (took 9.309260516 seconds)
loading group "simd"... done (took 3.1031796 seconds)
loading group "random"... done (took 11.572214147 seconds)
loading group "problem"... done (took 2.234962975 seconds)
loading group "array"... done (took 24.379758408 seconds)
loading group "misc"... done (took 1.124245643 seconds)
loading group "sort"... done (took 3.826623041 seconds)
loading group "collection"... done (took 19.790814809 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.675133691 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147278377 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175630326 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.225697219 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.280242695 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170035373 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160213669 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170168806 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.72423634 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213698092 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137553118 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42026303 seconds)
done (took 6.379022241 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.322399098 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240189273 seconds)
    (2/2) benchmarking "String"...
    done (took 0.185673357 seconds)
  done (took 1.199704847 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075544738 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157152742 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107619264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094171194 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094261782 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109470447 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094290588 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110040663 seconds)
  done (took 1.534867373 seconds)
done (took 3.900716331 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.538763381 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.091709901 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.715327171 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180907608 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317255828 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306849944 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267119148 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.22716743 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091864072 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086499897 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178565785 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.592357925 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.390354771 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.17266586 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.07026905 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095306912 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152973572 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 1.045976603 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079319058 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114111564 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537243433 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212936177 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116709366 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110481095 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185991269 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136287874 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.150195307 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108141823 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.921147604 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136210169 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.221259747 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083647404 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.147307656 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.169671477 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21968353 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111842116 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.998975447 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204845316 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097644491 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101903378 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.773898965 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123596923 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206871069 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107477026 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068716008 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.25126502 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100281127 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095614802 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095506193 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086048482 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.1827568 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.510434532 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108771401 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196157728 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095177803 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.933706349 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101397899 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.311138063 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129254588 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096327713 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092587383 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088066544 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172631873 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093726652 seconds)
  done (took 22.512138648 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167966555 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187118347 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078159858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15793125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122049809 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099090842 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084873443 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078254045 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127035195 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184341497 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14027675 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.173126338 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09638021 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091249751 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170070829 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230752963 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126997757 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105013039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089753714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108784753 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122247398 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096265576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109559097 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091193165 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17287833 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206100462 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10851032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124627414 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090719779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096895584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143448502 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144444237 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092902592 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090862116 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171190612 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125952479 seconds)
  done (took 5.391353554 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244058011 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104000678 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.25093666 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.202938971 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154447478 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185583076 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177472852 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300489916 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.238067982 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165062504 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130063063 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096422769 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079383687 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079302502 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096172093 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.361186249 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153699599 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.19149163 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184717697 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098789432 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.135552315 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081274718 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102619346 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087695944 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0950428 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.142103148 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.662238027 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227944697 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114245739 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.055561752 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107362834 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099498257 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133678169 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199880769 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124604877 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14185411 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095309031 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102359129 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.205693478 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121716025 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077372155 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132006645 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116679982 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131260109 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092927378 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12612211 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223339129 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087697475 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130648853 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.139062396 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198608887 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.159433086 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084328046 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292508516 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130324513 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10232613 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111278778 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.798141895 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130399168 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082358258 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078987501 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115570602 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079866539 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.801337075 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128440176 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082888889 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079535812 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159467021 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.227455452 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099505209 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120912777 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086301364 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08450307 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128676702 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087035204 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097964238 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088578123 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079707813 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106917408 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158652253 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131875775 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086195644 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099046463 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149881385 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097852125 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.126491935 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109345724 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106624491 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086380076 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128124109 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083129001 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089539339 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.187398625 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096688304 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132503767 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114575379 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129244406 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104813504 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.263917972 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082178637 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122488279 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101325006 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084472914 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130583359 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099703586 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099476761 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084832512 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078984538 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100731479 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148174277 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090021062 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097664352 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089764729 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091738849 seconds)
  done (took 29.499082757 seconds)
done (took 58.166974241 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.421822178 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082229673 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082424352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102589336 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085548711 seconds)
  done (took 1.62248377 seconds)
done (took 2.445497854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.311578393 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200166036 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087289525 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191143241 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087045083 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197339173 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182714125 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101953274 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210344133 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085355355 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194102062 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086116999 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108067002 seconds)
  done (took 2.892764783 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105326898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107596943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102697843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122029345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086639269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102595906 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120618278 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110084259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102747842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115131064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087433116 seconds)
  done (took 1.985640933 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101656628 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104615 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093687507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119791653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087522357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099833094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118549242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10714315 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099634329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115006726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089001852 seconds)
  done (took 1.961768677 seconds)
done (took 7.660771678 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.225581933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.193371225 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193450905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245943108 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3570547 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.302227524 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.616675994 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203548009 seconds)
  done (took 16.294957361 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.123276742 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.195519053 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09618926 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095848889 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112654284 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093125511 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091870346 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.114131598 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097269297 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097769026 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094455066 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11110108 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093323734 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097047442 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110720218 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096745608 seconds)
  done (took 2.606057385 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145383636 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124635159 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118685075 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100184718 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094226365 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120216825 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103216158 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.119168676 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097106007 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095522137 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102826018 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118049282 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098671043 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093747335 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117241656 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12307525 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093572139 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118331215 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118493924 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117427781 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102618783 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097041013 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116187421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101522952 seconds)
  done (took 3.549930806 seconds)
done (took 23.277180734 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147019711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103571862 seconds)
  done (took 1.082653922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165173832 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184516509 seconds)
  done (took 1.186172989 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11399833 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091250661 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139925039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103652601 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091429743 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109855362 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117083533 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.11040173 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093947182 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092662052 seconds)
  done (took 1.906934287 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097330758 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09565642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123885372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168850933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119351752 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095215693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095539139 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.116004241 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097134567 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090701828 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117283221 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110098296 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09617022 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129549454 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096841196 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096452893 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119182664 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095077316 seconds)
  done (took 2.802480995 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093144884 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092706046 seconds)
  done (took 1.028775921 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095241578 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091413329 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094529504 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113792684 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092425961 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091440305 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111452925 seconds)
  done (took 1.532885657 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534496786 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239276813 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376866936 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073359751 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126392082 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.460987219 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105940357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072164571 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093615795 seconds)
  done (took 2.962404278 seconds)
done (took 13.34011365 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093360796 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.243683529 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.643845505 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115244436 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090896624 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164913427 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.316202721 seconds)
done (took 2.513670196 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358178286 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166013573 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086238998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093971424 seconds)
  done (took 1.545065045 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08378532 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102808211 seconds)
  done (took 1.034214907 seconds)
done (took 3.429120451 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090712866 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.12277771 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.109458728 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.092649118 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091742186 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088764024 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.110470645 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092269772 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090995827 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088819456 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.111284474 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089719859 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089377189 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108044333 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089664555 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090411205 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089678645 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108373171 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089374649 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08879054 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.107918018 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090886427 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090634921 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088427909 seconds)
  done (took 3.192177636 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111463117 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092741327 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112529955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095015753 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094098753 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113078457 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096115583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093213288 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113363074 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093835102 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094035374 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094390329 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.111094435 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095593331 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091228977 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113581989 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096199807 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092304172 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111478158 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095204107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094041973 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111439792 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096237446 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093907242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11470675 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096619915 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09239324 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111005282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095993077 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094401996 seconds)
  done (took 3.858380683 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098365628 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087964338 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089642924 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118915879 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087664326 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091162826 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106784859 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09201126 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093267481 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089812565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112305101 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091641734 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089963691 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110095707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092384916 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094366028 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097486386 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.112061347 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091039419 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092404848 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112981524 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092747864 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090380062 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08968986 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110858876 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087557802 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090375417 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110502454 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093086654 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089690791 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092699631 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113680889 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091970867 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099951916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112525667 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091430282 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095902281 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107127822 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092328334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088421522 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086983834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110394445 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091172453 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096891647 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110828028 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092846694 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091138472 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093086217 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111139059 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094198175 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08886693 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.110330007 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095007715 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092587201 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112338029 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088904503 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092684813 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088474369 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.112078052 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092676245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088277194 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087163153 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.115733303 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0928347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105691762 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116840224 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093074981 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09276987 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.111787832 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099603814 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093220233 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121048697 seconds)
  done (took 7.918551185 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115173691 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10143756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112042493 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093580676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092171187 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091680309 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117952243 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092700711 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093570761 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118975048 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093915392 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09241524 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11254989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095678808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092474246 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092680342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117810764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093367405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092274084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113547748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09362805 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09600878 seconds)
  done (took 3.071124064 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242799807 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099966146 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140360213 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125772419 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110367172 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124388229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098795344 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096713207 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115122895 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102217926 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100791179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11549876 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110560199 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099595136 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120728647 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102281734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114117622 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103770711 seconds)
  done (took 2.983707749 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106015557 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094199257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157838593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095245976 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094100822 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113728403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100339704 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111545877 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114525391 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093812124 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100040225 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113089916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093748127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093086061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112451889 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094427446 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093386432 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092700785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120211392 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099239599 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097105958 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119091762 seconds)
  done (took 3.170912296 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106655839 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093762254 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130952969 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098803134 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09271216 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091862081 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.119827561 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093816786 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.100592719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.113757202 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095022229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093267527 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127834397 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095259207 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099055482 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112614417 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095327262 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092864885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113027153 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09340143 seconds)
  done (took 2.921805659 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197137638 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129807246 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109727743 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116945625 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130294351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109481254 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136338776 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111575225 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109436888 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138813706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112793313 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108697804 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137448059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114079764 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128189854 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119105636 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116113135 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135878837 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109598769 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128621691 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1224346 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109344593 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136778614 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111064288 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109242346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129352863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110026281 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132945818 seconds)
  done (took 4.32448513 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094004632 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0921639 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090459573 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111727137 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092842207 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091677062 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091109586 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111952544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092397183 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090666028 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112791631 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093838513 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091954711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090878286 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111556861 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093908414 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090793234 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110585764 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093278368 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09294432 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091331211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111950347 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092664798 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09179008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090855243 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112943481 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092473782 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090880697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111538865 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092419785 seconds)
  done (took 3.783391808 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104902566 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101974077 seconds)
  done (took 1.074003532 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100093286 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106438513 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090751546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112476325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098910877 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092414855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120389323 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10040581 seconds)
  done (took 1.689633116 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168308206 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191353753 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096538272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124776529 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.172116709 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182144655 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13057587 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11911462 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091905841 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084592202 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184723593 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084141014 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113432362 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090893679 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09246202 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120620265 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094647122 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101811518 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.12127264 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095857442 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097670691 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116147827 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096589241 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10462112 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106956694 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097392172 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096266035 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124573767 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090422169 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095326271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111798026 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095117471 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097013179 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097109566 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.113849732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170445577 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121981597 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090511772 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091901902 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120798134 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126612655 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093193599 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115559578 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092683406 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095515167 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118045498 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100128219 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092766728 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106430953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090262731 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093941464 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107490627 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094818379 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094556091 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111708828 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101651466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095693197 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088704211 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110727267 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090263931 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091064526 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10902369 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096893752 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095467461 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114453594 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095324491 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091725951 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.114058175 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096696151 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094197098 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112501406 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109857907 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092565584 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.118061643 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099512167 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095195709 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110128904 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099962328 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091936192 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113638864 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098036862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12354372 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115400865 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090909636 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089986485 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099261889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115244049 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097744864 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086699693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121472081 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096552383 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094517457 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106095562 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09252828 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089472531 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116174099 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08742961 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093863325 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092908249 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119626308 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100926389 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091542695 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115788684 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101045506 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099063423 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113158395 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160889043 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111123258 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090085119 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096351458 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119044141 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088083274 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093878141 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093459553 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112522439 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089576663 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098326498 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113523867 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096429538 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09840155 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115557838 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095733644 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096055126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113812057 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091195716 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099163414 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12088929 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096998138 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098125642 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09426086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.115384355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094088326 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09746383 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111416436 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100211811 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091272222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.114363154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095395305 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099851978 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11429276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090530281 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093862416 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114553838 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09392442 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097247495 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114414708 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090497351 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08723947 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09510061 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110798163 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095243343 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102051459 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110812868 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097007428 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090015788 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123266773 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092493385 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098389936 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118891466 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100753983 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099687889 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105828894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093512203 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097268013 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094688875 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111317035 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096349165 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09348378 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121726557 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089246569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096654095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106311834 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092447898 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100021421 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096699816 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.119194693 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091590016 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132702637 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12772372 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101206401 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094474881 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114777483 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09980686 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093331266 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.120555553 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10165545 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098893631 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111915713 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095087871 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100022977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110160871 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09937834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093230367 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11489199 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088900339 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09631148 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087000897 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120987351 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097628523 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099656252 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.122108315 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097873517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093246546 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124006697 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092428163 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099059828 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105479834 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100929996 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106306644 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100660122 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120344923 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096878443 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091767352 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115837112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104057661 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097726756 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115628463 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097109836 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088321088 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108168084 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100966877 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098081015 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090521191 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.114731347 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098713227 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096160647 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113025567 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089185692 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098820093 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118790043 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090393915 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093905258 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.1217283 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093607402 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101570543 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107401127 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090790575 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096185738 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.11883866 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09486898 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094837176 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0972923 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.121062911 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099282047 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096680905 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112270602 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103424892 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092126141 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.114947404 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092378619 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098419418 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087859303 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.116665517 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095034256 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091681841 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111628242 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098577489 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101246052 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.121597876 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093419377 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100270268 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121470346 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110688575 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092645616 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119608491 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091586271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087883325 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110879445 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088284061 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097470567 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090626465 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120270846 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095077621 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093049834 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119375127 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097774538 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092350452 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120829743 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104994799 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089939337 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.109687495 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093777578 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093979165 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111391329 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092524892 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098328331 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115273167 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099373205 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097116207 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110688909 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09624339 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101708544 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09197245 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121016094 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100272094 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100476202 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.113010654 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099938337 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092033625 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119169999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089825556 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09474439 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114832365 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095362155 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092068097 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113298263 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092204254 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088781694 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090966727 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122167606 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094080751 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098998385 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11446518 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093161057 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09109605 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112923612 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102407164 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094332689 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122010034 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096423618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088632746 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088647589 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122294715 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0957045 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101114426 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.112770952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099933451 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101425102 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120597682 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09664649 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104214024 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123508457 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102725191 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100441773 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108704072 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095227416 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099749725 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095569939 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118621495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099446375 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090095244 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117746862 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10180185 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096920817 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114312475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089284952 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096160094 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.121999314 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100693286 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099339566 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09886021 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117233979 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092754784 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097614738 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120897364 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095846055 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100585638 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115710574 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101797127 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093097525 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120875443 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09761268 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089455321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088262357 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.115165608 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103354147 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089809215 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.121062266 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101091868 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092222194 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11346605 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101803241 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092160137 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09802684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12131581 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094081497 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105718003 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.117278121 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094490522 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100157028 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.12123732 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090024837 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094381551 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11347876 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103085102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094058369 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100190861 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116196277 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101833984 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097883337 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122212388 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100984651 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101024702 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110203644 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10196772 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099385122 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.118272693 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092987144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094212914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09026663 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116183313 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102877039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09178223 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124810816 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102976575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094196776 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113128005 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103773752 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094837346 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122490876 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092853004 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097239651 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109428416 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098579219 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09510046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120888334 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093595597 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091101596 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100408048 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121316983 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100002834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097558175 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123023365 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089803318 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088695905 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118090475 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092946421 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10534464 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117478377 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094946886 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093534432 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097551515 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.119426905 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103531526 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089507093 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113496232 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096706628 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09635352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115527187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09117844 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099732894 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113826609 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098776204 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093871117 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109800833 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095806039 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102167883 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094505147 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112866559 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093408283 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101779605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115359594 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093315033 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089728758 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122328516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097783104 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102993239 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11403052 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097933311 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092756783 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117548813 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103862563 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093594585 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115270866 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095103165 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100868266 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099733403 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110607853 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093662147 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105473422 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121139796 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097658952 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097014666 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115017137 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103254563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101945636 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.118961666 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090723295 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089681509 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.1147729 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091500931 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098391996 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099628893 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115745254 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093160218 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099022462 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120660287 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09925925 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098186148 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109437481 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103533739 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093418853 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096770564 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.112223095 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090199818 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097297557 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122187776 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094928962 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096600839 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116861149 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098009894 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090898179 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09208373 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120725527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099607929 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100617989 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115997756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093662161 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10060194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127661874 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097399535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094699682 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123150848 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102895407 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095823708 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115369233 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100327858 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101983183 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.11847211 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10396007 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092940127 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115282314 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102726539 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103526809 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124691201 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096509184 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089961136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099633377 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114824677 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090532413 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098111508 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123892356 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102771892 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094632063 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114090697 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106657436 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100001619 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115981167 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094421084 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093296985 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120825823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095093205 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100460922 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091649989 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124347718 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102628519 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100667416 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124634884 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091240043 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100006593 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119335552 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104584819 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096900034 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110681729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092482009 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098440145 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101498012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124122659 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101003593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098574913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120386042 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097087263 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095401487 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113482839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103914647 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100448975 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095966436 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119555463 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095703046 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095414248 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.119602691 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103548452 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102114791 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118063651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106847855 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102131691 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115786349 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094735653 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09708636 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119117998 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098155909 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100573356 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092009907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111558975 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103474827 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103483631 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116694352 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104239964 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102209257 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116133365 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099975714 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103455261 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121172263 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098482548 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096739294 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099354511 seconds)
  done (took 62.727927757 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146318221 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104920183 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119774558 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100345135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115609623 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121604225 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099692177 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098947536 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121172913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109994286 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09866686 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118826182 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113618892 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117484977 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137300052 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107888853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118555625 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10010627 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098537966 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099348595 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13416717 seconds)
  done (took 3.305056801 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115966112 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11282201 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131034261 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112799375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104730177 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131317214 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109177093 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129751264 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112725642 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105575282 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133241218 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109676969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128014079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107755819 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106142757 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12787266 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113774839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104845745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130767652 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10993431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106363783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.132117607 seconds)
  done (took 3.495494768 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129726489 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102163193 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096623903 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120243424 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102885306 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097932566 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122594713 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100190193 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107351738 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093142988 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111241505 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094534016 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096795328 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119791284 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093432339 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098563712 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127237235 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102760121 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103387263 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098007692 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111691333 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099365305 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098485643 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111196331 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105958345 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103031417 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097760915 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123948177 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090829168 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101516526 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121267515 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094815654 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089996754 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089128382 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.113387884 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101909944 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100426224 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120144759 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101246879 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089842108 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09879707 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12503728 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090599067 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099278649 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121212746 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09403689 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101959403 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119680695 seconds)
  done (took 5.960399345 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126982089 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164870102 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102910763 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136213524 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135031471 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108091929 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101406396 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138350797 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100562384 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123847803 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114228833 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112767885 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127430511 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106061473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103014625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127706716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105161096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10081418 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128800396 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102885572 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106874089 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126597374 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113276672 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133601718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107452824 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101071941 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12253228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107040239 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11176882 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129214185 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107229034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107669898 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134932321 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104475234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101438796 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.127524711 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113972792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103022094 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126187443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101231072 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10407069 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127951154 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104565938 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136302464 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105468029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104661026 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12457662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101332293 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111792978 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123784306 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110351536 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112524353 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125975506 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104864409 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105550865 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134882402 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104361924 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101046091 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126577428 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112236483 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100637451 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128741265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11290464 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103246638 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131923418 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114305665 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125223498 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107334932 seconds)
  done (took 9.181227129 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133547528 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106263279 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136631825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115026143 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105887575 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128301433 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10667929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.1064234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130689663 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111717224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127822779 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225873427 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127003015 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112601285 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105416425 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129866837 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107011776 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105771593 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130494616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107418506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127571791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115476374 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107620409 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137377583 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118667959 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10278598 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128778788 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109182208 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135440654 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107996495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117173282 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128393555 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108174048 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114019614 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141079382 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107811546 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100990933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130705305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107559524 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128377851 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105311118 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115839432 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128857193 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105640118 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106757005 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127175699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115352794 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.117080749 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134713004 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112075096 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128448793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11563592 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106583126 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129067641 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114691406 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142423841 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11697733 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114683608 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128931152 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116666979 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114264537 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145336331 seconds)
  done (took 8.414744118 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102651904 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100972262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098903218 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122722053 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101048065 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100920461 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099977753 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122817153 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101019816 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099511053 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122649094 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100139536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099680502 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099412864 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122211352 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101533248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099088105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121471274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102706227 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099729534 seconds)
  done (took 3.058563177 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110399484 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116783903 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12371103 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108707395 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102305744 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129156582 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103571187 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101999108 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101443198 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125182087 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111381517 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108685289 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125902176 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108674813 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131422921 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109268026 seconds)
  done (took 2.761433402 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119720755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117253515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211419021 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103624271 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126093516 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110974442 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10186233 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129001435 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102498521 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107318586 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129056884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106178064 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102393705 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102592068 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124817859 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105522211 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101902566 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128526827 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103288373 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216953943 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106541744 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103912435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126858954 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106390632 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104334715 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130553543 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1092506 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10266082 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126315957 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10456873 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104278694 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131737953 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102367849 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107308633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102485437 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126195997 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103602384 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103089535 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127849191 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103544925 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105282394 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125530734 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104320563 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105217127 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122792224 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104816655 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101641405 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107940306 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126169122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103787764 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102022691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130765169 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109256683 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109513785 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133698971 seconds)
  done (took 7.321610353 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114481851 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105314086 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135113054 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102862588 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104214397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103541793 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128348895 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106240716 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104909553 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124018148 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105496617 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105931515 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12531813 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104606815 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104777427 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124779762 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102952741 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105792175 seconds)
  done (took 2.954540184 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10864012 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102832998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106792014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125534124 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103371353 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104137837 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124390394 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102086158 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101715821 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101811046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126298138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103184308 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101487933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125160585 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103085896 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102706046 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125324311 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104322755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102536398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101529125 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125254459 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101807217 seconds)
  done (took 3.354793695 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114320106 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213441323 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10941397 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223626117 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099771539 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098618779 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.134413678 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100659251 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138267748 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100381132 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099787803 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121537038 seconds)
  done (took 2.505210044 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131339351 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140743011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126871354 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104955669 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111996291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131576279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108076008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106939161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139523849 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119340492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12958234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11633613 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115454038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138648887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113366947 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133327296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10950173 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108392136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125582102 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122674172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107220606 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137938781 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109715011 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10811755 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131311604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116488496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137938249 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119999405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108308482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139712505 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112629546 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107409561 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138909037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118686058 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127528105 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117764142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106781361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144838128 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113023733 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138793299 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105364908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112734613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137600133 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114190216 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114769322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132121914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113436326 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12997451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110584601 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12898255 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136859888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116231737 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134085979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117833369 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114897141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151235512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117786725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139162055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114007517 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140188448 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117420912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112310004 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139828438 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119347889 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134916896 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116599431 seconds)
  done (took 9.050189315 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143101343 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104187685 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130729748 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119770849 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137961743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109363736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109074948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130731315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110418967 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106048725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173377042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108679454 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11532141 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138342046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109216384 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130305076 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110143212 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116371969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127538279 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130850598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108469745 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139752492 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116319853 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138408804 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120088709 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134373481 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109512015 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10816906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130212961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109808909 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112833654 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131720032 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118728195 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105091587 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139136752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111042744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107786477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136514385 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10943623 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134931282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118047773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122764108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131686216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109246534 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141588571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109968983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108358397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130256883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11030089 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104983374 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140940877 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121152011 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141167577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116330683 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108224162 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132030118 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110760247 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108439378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132155001 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114462018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117034666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131305033 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130097475 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131161527 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109253668 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11703217 seconds)
  done (took 8.992588054 seconds)
done (took 171.918797194 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.1750186 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216915427 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196737055 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188097858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094856682 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.167965829 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136796431 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.19851705 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096186499 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094822166 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094414638 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121321362 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.202839832 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094386413 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118774566 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098518853 seconds)
  done (took 3.24893163 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184018573 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335558302 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109850509 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122893126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101794738 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099641129 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1231491 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103080236 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100113574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131406457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10097733 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095543411 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129414151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096734931 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099656044 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121575968 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108870411 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099736611 seconds)
  done (took 3.230168862 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120082005 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.194191399 seconds)
  done (took 1.284966227 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131962303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215922486 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.286388892 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171239402 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12077563 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14301587 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150518804 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135211247 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190138319 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136010179 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113085689 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097298615 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150570056 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105472135 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139138406 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100020867 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128916526 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135475187 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115682366 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101201341 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145642534 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10495841 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104749133 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136629003 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180666443 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136145165 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104727273 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102099184 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125210011 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115351968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106441718 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141510109 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111972512 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180584909 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103013723 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177323844 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106065624 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124465345 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114792253 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099771686 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126114773 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10403075 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135289004 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099658783 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103888685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129665359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104502594 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102960431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129827025 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109347216 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107576726 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130130168 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151090176 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130919858 seconds)
  done (took 8.033825618 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.873734766 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141263531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10015411 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.021240505 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14623434 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114062835 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.86819385 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147412748 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250471323 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874867555 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116389688 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107028617 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257531574 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257045459 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.268544217 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.38162333 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.707492555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136196266 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130849108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163167382 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108161239 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144920649 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122316784 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515706551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101527364 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100277777 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131095702 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109009361 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177381122 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101058531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104533809 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194618255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291980386 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20901866 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100936095 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122945812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101880275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183696574 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271960346 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218873131 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172372147 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120083587 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100308719 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107738572 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144235989 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097746575 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177322448 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166683906 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188968246 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126648116 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109936082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109954874 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130410604 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152183052 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121316665 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357746697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35846605 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099403709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132728056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112315204 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264005262 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12494052 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234825254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126990793 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214549696 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12127829 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832882314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160537848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123633328 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105376914 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10690224 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130976917 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107984518 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189430621 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475620006 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133268808 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105159007 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100134106 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232627398 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10040795 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125135332 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178025524 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103168184 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10948893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134788281 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110166454 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188822632 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268323363 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111544565 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109529394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128294915 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115555545 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100158858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233186039 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225881062 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174575743 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229035007 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10977557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179693769 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18249237 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106427847 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186295442 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108868651 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111512191 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132170211 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224254553 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154083135 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104105436 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1056694 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131206559 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136660023 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104370633 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133312432 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163028363 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554888596 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18421596 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09720066 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129279452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110511561 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180683542 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107407975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262031267 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132862361 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161589187 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131793696 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099852044 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109048418 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179361976 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108133656 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134205576 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107953651 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132794539 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256559389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21850683 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133321087 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252563249 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176414837 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130267911 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168012778 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132911733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185459097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112107491 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107701729 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124534623 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819743349 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115369612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108318145 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130818119 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182275211 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126144678 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103954358 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100784428 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121373304 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817273113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108037744 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09876244 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102584234 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129977422 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10861145 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132108194 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108043201 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176892377 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243900758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11016734 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132273675 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101328823 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177512689 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102656664 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102431671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123629312 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103862031 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110066816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129788063 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104684039 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18816626 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152182619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226988887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.674912881 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103928059 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101861214 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238427952 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123660394 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327667594 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111184905 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232746026 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183178176 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097942165 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357856948 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185705698 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207197453 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10508485 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19050602 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099155116 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133074014 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155857032 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124043942 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109056692 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175596898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114582741 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110509761 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.311251393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103923085 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250892155 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100041046 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188549565 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102629251 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105426331 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347322322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102890057 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116141071 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178532352 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105679685 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125921589 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.621255439 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103888816 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112866365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129050913 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232187935 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18079606 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110570931 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111115169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134879567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153810653 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230529404 seconds)
  done (took 47.700113897 seconds)
done (took 64.459640097 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270602487 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178769643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280885106 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180395285 seconds)
  done (took 1.972594039 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.274404529 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163407743 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.257820961 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099535767 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263585786 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09896704 seconds)
  done (took 2.153104008 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179150106 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171331131 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147872473 seconds)
  done (took 1.499806568 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201549253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217771498 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330415388 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236531877 seconds)
  done (took 2.07008447 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.29724447 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119310242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126375136 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238480531 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.260890459 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212409945 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125185498 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180173056 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129977863 seconds)
  done (took 2.732806263 seconds)
done (took 11.420810149 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.261053976 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.406926604 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.254595151 seconds)
    (4/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.415080767 seconds)
    (5/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.340694546 seconds)
    (6/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.219459524 seconds)
    (7/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.310726064 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.2116762 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.288787667 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.408999359 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.291979239 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.142754495 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.220516204 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113704246 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.288659042 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118582004 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221907628 seconds)
    (18/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08579199 seconds)
    (19/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.176099857 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.318355877 seconds)
    (21/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.317378177 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.364823102 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123778052 seconds)
    (24/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220267627 seconds)
    (25/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.205921729 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154390079 seconds)
    (27/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13074478 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106676361 seconds)
    (29/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079350031 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.238708041 seconds)
    (31/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.098576174 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103072798 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157989611 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104261222 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173425382 seconds)
    (36/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.132946505 seconds)
    (37/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088822561 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111537493 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128191425 seconds)
    (40/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.247724661 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10610793 seconds)
    (42/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161179892 seconds)
    (43/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11838827 seconds)
    (44/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174414882 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108382999 seconds)
    (46/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.088957204 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082021237 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.110586459 seconds)
    (49/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104592505 seconds)
    (50/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.234093364 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081917127 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.1114684 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078159019 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158136031 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196425959 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.22173844 seconds)
    (57/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.141506923 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.174824908 seconds)
    (59/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13406094 seconds)
    (60/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.148407785 seconds)
    (61/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086116468 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113268126 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.147256064 seconds)
    (64/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112113962 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103956754 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.196070384 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.157856344 seconds)
    (68/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109816293 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.111374471 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182629649 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123571111 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174397946 seconds)
    (73/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.140214377 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.21755874 seconds)
    (75/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112477979 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135607182 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.133215221 seconds)
    (78/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080713749 seconds)
    (79/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131769778 seconds)
    (80/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.134766856 seconds)
    (81/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105508981 seconds)
    (82/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.234790052 seconds)
    (83/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.145340299 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156734065 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194886136 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.156574823 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083661082 seconds)
    (88/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110556097 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106419443 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.158233161 seconds)
    (91/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088325698 seconds)
    (92/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110308326 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129063897 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.1024393 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110635302 seconds)
    (96/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.165937912 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081469469 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114308289 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127966937 seconds)
    (100/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104533739 seconds)
    (101/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08108132 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.180700511 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102485849 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105330269 seconds)
    (105/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083851096 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.133695004 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082909346 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203552086 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102862162 seconds)
    (110/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.135844786 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228234813 seconds)
    (112/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085769285 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110286321 seconds)
    (114/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.107990756 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104994452 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110817592 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079784008 seconds)
    (118/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.109923279 seconds)
    (119/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.088227379 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194495999 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081167095 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.134170042 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088508686 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102491843 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085105843 seconds)
    (126/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.113071018 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105412577 seconds)
    (128/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.136919803 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.108305794 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103016003 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105078386 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109477143 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.113599235 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081020887 seconds)
    (135/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082577716 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12482369 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150323471 seconds)
    (138/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087023735 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155609777 seconds)
    (140/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114213559 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.139996102 seconds)
    (142/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111643425 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087063661 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139608244 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089203608 seconds)
    (146/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081488682 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087631915 seconds)
    (148/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161710023 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106686384 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086514799 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082947255 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.112906613 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107443596 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09492337 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083540326 seconds)
    (156/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082486619 seconds)
    (157/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.166925326 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083077299 seconds)
    (159/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101865276 seconds)
    (160/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.136945093 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081840326 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102887945 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103731265 seconds)
    (164/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.1635857 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106295089 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11081113 seconds)
    (167/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082183395 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10907508 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105175889 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125373094 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130960428 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.088917726 seconds)
    (173/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.084211782 seconds)
    (174/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113946682 seconds)
    (175/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.109014865 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087996984 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106168443 seconds)
    (178/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08284319 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137460355 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090212879 seconds)
    (181/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.087104183 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124196497 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.128175672 seconds)
    (184/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084716991 seconds)
    (185/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080355136 seconds)
    (186/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087284488 seconds)
    (187/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080520089 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128353245 seconds)
    (189/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08212443 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111170332 seconds)
    (191/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135813743 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107630031 seconds)
  done (took 27.729101869 seconds)
done (took 28.73032489 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230497866 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132342747 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112755648 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110981944 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236575617 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119045895 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155424933 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114470568 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122478733 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139464055 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102992296 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125368699 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137154516 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20703588 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141870043 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104547234 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103202642 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148987783 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129871983 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127687916 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.2369644 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104545244 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148331211 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104133352 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236444493 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105515977 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111845223 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.14013848 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126598153 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111886 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139134793 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105355418 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129001191 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151885099 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104731281 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113244267 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103039633 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.11200794 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113710918 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113593567 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150103761 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115256445 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11212459 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129216176 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115279724 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112731917 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10267347 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.142265602 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101947673 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112149952 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132662457 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129730633 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110142969 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.128619454 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103285658 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104017151 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.148803393 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104352765 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12557435 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127406635 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106464239 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103481387 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113484674 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130079011 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113940108 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104267341 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138934345 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116513335 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110816009 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132123641 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104984043 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11181638 seconds)
done (took 10.24798651 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109723235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147645813 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237091609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239010251 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13345638 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147274917 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118353161 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127025698 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144600817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123082635 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14095438 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162078385 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240661628 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121272691 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118625142 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143075847 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115563205 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111785227 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240123294 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127651317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155738025 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118852476 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156151571 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12090834 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107310831 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166343587 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112272353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115337024 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131656407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117593007 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127059487 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133070832 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111504918 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12526887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150465827 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118227148 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119814031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140933312 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10852707 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107962196 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142730411 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12670266 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107119724 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146255109 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116120958 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121944067 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141382209 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121435195 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108505883 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141284901 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110190279 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132216894 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145968006 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125490165 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118909601 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146755688 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121178767 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120086682 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.137586195 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121051091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107996191 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133847687 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110383844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129789408 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137948539 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121717482 seconds)
  done (took 9.921929601 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127896769 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137066699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144012341 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119196532 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112236685 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127652417 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102530042 seconds)
  done (took 1.918347677 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104864723 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245498728 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218912352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246496124 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.246282846 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257855741 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127599533 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103084329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16833524 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114214519 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247798577 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276434461 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113515782 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118514101 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.250262692 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130520999 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223441334 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.13126553 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119032026 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250319105 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120434501 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161148368 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118331776 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104643433 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242094147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104398722 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296579907 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149789286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114655398 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117659639 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118103104 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213621035 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245127491 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117867901 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13904177 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219474461 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.244803244 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118000604 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.261388407 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135599228 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.216867446 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145068552 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120263684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119197473 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.148368105 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.207601462 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.151825203 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120377035 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116962621 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.25468157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14240752 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219497097 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.14285283 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119883212 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114764238 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148862348 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126407227 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119408866 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.255252207 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121632678 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249245769 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.249733999 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247759986 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248878783 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129341142 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248331846 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208050864 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146317648 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113425781 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119343958 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.251268952 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116778661 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.146310397 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239804464 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123725245 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252889709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.223242155 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146058411 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118315902 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107545551 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145921344 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104745977 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.242704517 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119086726 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115585312 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15194413 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117992586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146006547 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111556719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128241705 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144304926 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116930604 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123450634 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144235508 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121825651 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.255389757 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115901876 seconds)
  done (took 17.298766862 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107926536 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106815496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109561637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132936333 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.1066906 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106435312 seconds)
  done (took 1.746194093 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144411468 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11961308 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154421369 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121106642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167714915 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25504969 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261927564 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113675302 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166800641 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13177509 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255491693 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258681531 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.229636308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.15333383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262212787 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124175359 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265927426 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118615864 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127334958 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146978943 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119426061 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121835124 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145676502 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246712486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122290017 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120703767 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140412378 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131521812 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127987374 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.143208229 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123793785 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120017692 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138338461 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114684356 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.284036827 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112007293 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14182811 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12459586 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1213833 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147622748 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.234561656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146173808 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127872009 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12175112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141575912 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113182214 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121362672 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141580666 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263107953 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124411954 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122632664 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.14823143 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121756509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122390921 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140393232 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115051652 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121914195 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26444828 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12272847 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141005182 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120449031 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148526209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117080247 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12420791 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148422025 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123319904 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111691419 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148601052 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118650839 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120703232 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14997945 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121428489 seconds)
  done (took 12.012164119 seconds)
done (took 43.940082706 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.534223039 seconds)
  done (took 2.607213634 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.025547312 seconds)
  done (took 2.099761186 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.774674573 seconds)
  done (took 20.885704862 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.451082582 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.506583406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.138013033 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152112703 seconds)
  done (took 3.326355188 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.84796761 seconds)
  done (took 1.947272805 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303382652 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269676659 seconds)
  done (took 1.653834939 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755481579 seconds)
  done (took 1.848990651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.563131779 seconds)
  done (took 2.650327628 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290147141 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246282106 seconds)
  done (took 1.633214144 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.65444661 seconds)
  done (took 1.748049689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.046996257 seconds)
  done (took 21.147703293 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263450367 seconds)
  done (took 1.365462102 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283784927 seconds)
  done (took 1.385325107 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.86698102 seconds)
  done (took 4.967591259 seconds)
done (took 70.351725952 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116244326 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119033531 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118261376 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144800939 seconds)
  done (took 1.586692923 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12588339 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119896901 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.15014305 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12157138 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126316432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11923059 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147031647 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122231628 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118169489 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149382963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120995033 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118385047 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150515427 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120071663 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118115587 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150229389 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123701652 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119305812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147993349 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121146076 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121207843 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148102002 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125168627 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122458549 seconds)
  done (took 4.207449952 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116889596 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110633329 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111283753 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136135807 seconds)
  done (took 1.580141108 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128147808 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132014109 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.157869071 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127892699 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131406191 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157941352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119484195 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115428419 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145150575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130047788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136017152 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16294975 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132986129 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120850227 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158037205 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114924705 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118743044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158975839 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127095107 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128185587 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14873622 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126988989 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123883734 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157029566 seconds)
  done (took 4.361105826 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195864177 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132443278 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179390363 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16530945 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181739057 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118395114 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147434231 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153337298 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127556333 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121012859 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150604186 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166097674 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154562073 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123568727 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119826192 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151626065 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133291604 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123957624 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.197217283 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125327129 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154447886 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132244317 seconds)
  done (took 4.357959072 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124167112 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111023498 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105961644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137996294 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122424244 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112873899 seconds)
  done (took 1.825340335 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11032586 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104768529 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104375806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131806834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108970225 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10414247 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102823011 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13424984 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105303304 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104170913 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132542082 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105128597 seconds)
  done (took 2.458633226 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207165995 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148200468 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256380708 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.438529578 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165778763 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190067445 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285335458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193843034 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207689393 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139465791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216234947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164258896 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183084275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188136209 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168047007 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161331698 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194788495 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207861499 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174327894 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242959091 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159041862 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210204475 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188523425 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179661196 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140047887 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193145998 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119847981 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155691519 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170575166 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194966763 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17705397 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179274562 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141559865 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221457404 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262809293 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208269257 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274401625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134991924 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199513346 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192480575 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26415631 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170434988 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193401404 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181548533 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129413395 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215488057 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152818907 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.21369118 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134047201 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175010117 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215530886 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181651097 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201114631 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136821977 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329408447 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164763822 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14488478 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179418049 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217519884 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23367464 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204758882 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124806918 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204503191 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192433372 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244375545 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169759535 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16677432 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1537723 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165845094 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23637959 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181958064 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191573294 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239614587 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131180412 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201477772 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167828925 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186721228 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235383739 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170524181 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148954518 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153599455 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161453644 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127991743 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18844058 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15063517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215052842 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161087898 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343085177 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179448332 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186492523 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161615485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190974813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190655089 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149411903 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102473766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17343742 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161895962 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187051185 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129116722 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182751502 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141859143 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125742932 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182028771 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123247726 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199270249 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135738809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192481912 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17027419 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.162357573 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181166031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177803741 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161830115 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197998649 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218935471 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133446021 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132014529 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24852954 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196995907 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137907845 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201823999 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196118866 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179796966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136002484 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196277488 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193619539 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172047439 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229159366 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139266841 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133778088 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169830276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198351132 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161715506 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187923369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129268091 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163034208 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220595746 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155131178 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140435699 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21007929 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133809148 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123728948 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167542561 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136607583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171315004 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150398215 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138590086 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183597229 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165411047 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193924715 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184974341 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136238728 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20144648 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132064194 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194691509 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151782212 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119918024 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204138958 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225711072 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129372435 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208543668 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163280998 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211304668 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201449951 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130699486 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181848916 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157588338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120565975 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190697964 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168330414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193248564 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215808395 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182680699 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194653471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190569959 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150130027 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200229122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183228145 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186969644 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142352223 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20163763 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170198239 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150459421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123403339 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126761034 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167081338 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133972473 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165325301 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181610869 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194337829 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205919867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167582743 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169369593 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191490295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153710343 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161269896 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.2027746 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14040089 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218805759 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188283623 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208731016 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168352261 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163886538 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119142093 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155624335 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134977483 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19055579 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138402392 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134701146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171540275 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217686599 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175053987 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177634859 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218830881 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167582076 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228844141 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120716159 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.188758374 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169931998 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196941493 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185154207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135519245 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.19126778 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22059746 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14341564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222282804 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168031462 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208654414 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22657945 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164866982 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158780444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150229733 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158867817 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168707782 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161346689 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176578361 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130438537 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183254365 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138280999 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167348554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187482271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173907713 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177201968 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187750594 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20250578 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127547633 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142087796 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203201831 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145000335 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135978399 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171089821 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225814581 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179155936 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15857127 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20255989 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131777833 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318097686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217639235 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210206104 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13706172 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167354259 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171727639 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191534663 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163630967 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21518832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141263344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237132099 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197555972 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143355182 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129576856 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179173939 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15071389 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170724348 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154557214 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191918804 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143828203 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21917502 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137019684 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200387296 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207184265 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146878757 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149158372 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169013792 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257143916 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169213222 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204736532 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163633452 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195301736 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181893925 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154637154 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1282076 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131559453 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214844256 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129184519 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207613217 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193360063 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214335069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177584729 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193110121 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141756763 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127044818 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196152692 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148944179 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215198244 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164834566 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13842736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220098876 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129990567 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129764181 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192040924 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317405955 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149257302 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204600054 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109336336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308780019 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129569297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132153317 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192429519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199465027 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133622563 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184931528 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205122353 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140242539 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193225132 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135510529 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209203799 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214487337 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167681085 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20669418 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14613178 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192856691 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16039356 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20427412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145212418 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179358236 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157570606 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22510928 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206970318 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13219881 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197516277 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170811781 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199340839 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174958732 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168958564 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184187393 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157184961 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166961983 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166197347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126141654 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159939781 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197656462 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159853029 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177751616 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200112399 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131606295 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127725595 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177474071 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164329255 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170802612 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129146666 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216784579 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128157855 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213440202 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24048388 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130719081 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167840608 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17815738 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130721717 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169004915 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145140341 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159803204 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178668228 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183295024 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161210457 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178381034 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196394245 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193594014 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159017314 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171766177 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26501616 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127759047 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221968021 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150415875 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227577731 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180029436 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177796191 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199307175 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151186838 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195354808 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147988124 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.248980477 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16559823 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19732455 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131330403 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173654575 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139730596 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133723638 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184152377 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168488998 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172932364 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136897277 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197303462 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146415596 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177703921 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142488335 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231836496 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152110816 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219982429 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215402238 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140054832 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204068956 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17736058 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158719016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164999642 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203828002 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145502345 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182552099 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134815066 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137234185 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246084574 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125269781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192014139 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173804587 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199222526 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200888461 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136069609 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206082831 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141900576 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204110955 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128713894 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151890515 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200796604 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134828364 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.156966448 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173123976 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192305801 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164332347 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172423535 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178981718 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225754375 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125654557 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134768836 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319181062 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193295331 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196928283 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167294449 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138620389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146490597 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189769469 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163571508 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20608542 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130654411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159174872 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145915851 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186066899 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144056742 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197121331 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18323825 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192050025 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186633909 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164644819 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25468497 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172600343 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172028248 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116869409 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.171366026 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161427487 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16413266 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144321087 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209855252 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246931028 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165552106 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176564199 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137976496 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127239614 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158970491 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.73996823 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185538857 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170341132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177367057 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.106574843 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140706113 seconds)
  done (took 86.830476674 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175170379 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.271896661 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.22683652 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.245428586 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252701162 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.3143854 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.302262562 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29140005 seconds)
  done (took 3.274494651 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126407507 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163721616 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141871347 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147610878 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110898736 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.492367106 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162434313 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128789345 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162604728 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156029026 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139494248 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.578566917 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117751524 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147463344 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124723251 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139223488 seconds)
  done (took 4.238844671 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.940975134 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.572097057 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.383096604 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287993534 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.270885343 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208345776 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.835409046 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205672782 seconds)
  done (took 12.903180244 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173709707 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164082725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.457726372 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.312256209 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184820763 seconds)
  done (took 2.501539282 seconds)
done (took 131.215346759 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.132240459 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125039373 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125006618 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158376553 seconds)
  done (took 1.736558209 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.202673513 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093393357 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095125584 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122482998 seconds)
  done (took 1.715826599 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.484026279 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093839312 seconds)
  done (took 1.812580871 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.158675482 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138689349 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.174561783 seconds)
  done (took 1.68969989 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142370869 seconds)
  done (took 1.35066473 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.135048118 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133970308 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.274767415 seconds)
  done (took 1.755052429 seconds)
done (took 11.273274241 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125596235 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.93047943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438143499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137760143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712540023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.432325912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.609805154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179814486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178492832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142573338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135293213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692367102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.63267885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878635115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.576568237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906331647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698456559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113832277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149777014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114383522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.591527887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141690367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11552881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113610161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723626875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423077827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112575662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.920632934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112066537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115769124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431383785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114957806 seconds)
  done (took 21.904345306 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115077938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170704448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150164658 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114929868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116190116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144292772 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125525224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125139049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209372639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111336645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164808468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113023857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118034061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14185589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139380157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112511631 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115722865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147324531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120913577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113516537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.167507033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111428521 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114124972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146305368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113238059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133961387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14333806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124687598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111235631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147007673 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118747802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112617699 seconds)
  done (took 5.431177817 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163985541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179167456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15219198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15252002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193557951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115863811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230489593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15355471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210107073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113997683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134606446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14279933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1561836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113624434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168990013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114916312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116108599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147429396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12266084 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114102793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166129747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113141928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115939336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145611891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11503305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135187942 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143548737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125680706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111791086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147736036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118446054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113218998 seconds)
  done (took 5.766627676 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129045063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127802423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135348639 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16665011 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122029869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12745935 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157793413 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122746756 seconds)
  done (took 2.307991062 seconds)
done (took 36.625943973 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139826007 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131797788 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133535172 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159076556 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.227860804 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.153806325 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131802687 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.1191531 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159099808 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135293929 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112829795 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153041312 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134461955 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124095512 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259940569 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128383311 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265906977 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.26232764 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122337266 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130802316 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153905827 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234740351 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157077748 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122154511 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.253746371 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11826257 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252815808 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124995582 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123427839 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112705171 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.264943588 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124455481 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.155892209 seconds)
  done (took 6.594289481 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.244073849 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154235213 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123967418 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121545639 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.12265654 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154583028 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.249253791 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155294533 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122890663 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120286811 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153858966 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228998073 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16050405 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11905238 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124018435 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112038172 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.284411511 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122822118 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146887578 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097239067 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116500393 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120232012 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.296609359 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149001783 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.12292554 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121285453 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123387054 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160328107 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124326708 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124512284 seconds)
  done (took 5.802728635 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128396735 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135591189 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140044533 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223996755 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151545169 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.166913363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141629631 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13675057 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176330055 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116009385 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129913554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184143943 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13354322 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126165903 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146292418 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135301493 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136940438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147244474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125125444 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133127643 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16699983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133662919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13843279 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153986638 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115797677 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122010345 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157058202 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126447195 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123475065 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128619748 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.150039612 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119120659 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116537082 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181582997 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11668499 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159465193 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142850154 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12720965 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159454164 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150747379 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119413598 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146378858 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14302411 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170659565 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147417358 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129367846 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127592455 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129011947 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.146992719 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134852809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186997967 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11717343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136529557 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113518269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14667771 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125325305 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115711399 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149847963 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132020211 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117658367 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171584327 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123551795 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126388953 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147116304 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128421644 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114150324 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113673349 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151919513 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142161364 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122521922 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.184393745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114977896 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126424549 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.160240803 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128479567 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127519488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144901887 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128444236 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125964719 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.150834505 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131143031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117604309 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117476478 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164698449 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136326846 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128425562 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.161876317 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128436297 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117841328 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148874336 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133842706 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11524911 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.15260647 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12937747 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115096061 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149717923 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129353781 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125982236 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142184907 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143571682 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118584309 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113539162 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.172534639 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119800902 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119940545 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15816783 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158102544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114821817 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.158940009 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128670261 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11434851 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.155326441 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120353719 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11395944 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164610438 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131909348 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122823307 seconds)
  done (took 17.386216272 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.36959054 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347121819 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189495126 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436627414 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129449907 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.279960199 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.348603492 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.350949562 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115529827 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182980821 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176601648 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317065087 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115770456 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.179132628 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.352437782 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406423755 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179549497 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15389608 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184190315 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130042634 seconds)
  done (took 6.192453853 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.143421061 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15007107 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170673881 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144285655 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125815353 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165586943 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11616324 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136740409 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159886068 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127325783 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118969034 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163702974 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128927915 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132000266 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.163019914 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150016324 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122536615 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152249873 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139148898 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120409071 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135202744 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142822069 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12372877 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170028464 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136369724 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126881575 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14637993 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123271833 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122435638 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155530408 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122113593 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135059135 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154697466 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108442143 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128342817 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130178852 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.154141124 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119964459 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120824783 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149515483 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131917857 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128974652 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123709177 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133471204 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13591207 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112977654 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129279485 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.161535983 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109057984 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134851674 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.160400013 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130905534 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123948298 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.170876415 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123032306 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132523368 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15818345 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.132263227 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121388128 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144949272 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115346896 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120118968 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123959665 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162475309 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128824902 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134667232 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.164919582 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115642549 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120040155 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152141998 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121245675 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12992998 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.168651706 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125245995 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122033055 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.163192089 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125704828 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096849406 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123822362 seconds)
  done (took 12.01239551 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147742799 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126021154 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133667866 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.183723484 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130330335 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121302346 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.158541853 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136285204 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130168154 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167363663 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132707178 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129106419 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170027883 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126946971 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12609565 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164771997 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130611565 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153391933 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.169778295 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143746469 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130074017 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.154049509 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129166035 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126803052 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17722141 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127935964 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143012324 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161763322 seconds)
  done (took 5.297071887 seconds)
done (took 54.501797519 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.383256918 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.626067939 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.359292435 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.360542748 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.422559501 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.412486812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.360216084 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.360794441 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.002162627 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.33073169 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.359164467 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.359058936 seconds)
done (took 30.588350644 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.679392233 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.345857741 seconds)
    (2/2) benchmarking "String"...
    done (took 1.665891245 seconds)
  done (took 5.28023487 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.350314915 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.350457444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.593565303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.351017396 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.349146057 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.347733897 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.350027124 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.348979294 seconds)
  done (took 16.938369032 seconds)
done (took 28.492353506 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.333841286 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.691667351 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.607684836 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.332488286 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.351815245 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.352219803 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.351007146 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.419618022 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.3561225 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.332798983 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.796652497 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.628647833 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.356691928 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.756082931 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.33270657 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.371198939 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.370072161 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.761478052 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.357745686 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.392991854 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.32923864 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.332363552 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.393252573 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.360831865 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.363137902 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.358839559 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.402161782 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.364428945 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.677750928 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.379140178 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.399142617 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.352609233 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.403578072 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.35761108 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.358449687 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.366760438 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.735260034 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.370265213 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.333109492 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.373167621 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.684115956 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.360502584 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.357068154 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.375427793 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.335042784 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.368193148 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.337319965 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.496512142 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.379811249 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.373741978 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.431889502 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.738438642 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.359792586 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.368075002 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.354494319 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.695222354 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.361797131 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.503969262 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.388176605 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.368635995 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.353659653 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.38209492 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.429569748 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.361640341 seconds)
  done (took 154.675481942 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.358481 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.35709293 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.358689504 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.361936008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.359497822 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.359671637 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.356939602 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.356637733 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.358339299 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.369074528 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.360833068 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.361901223 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.358247408 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.31350882 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.365456563 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.381928018 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.361102587 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.354974116 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.371913408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359603989 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.368859092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.360968251 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.355529061 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.356189957 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.38059027 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.458154275 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.377865786 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.394177295 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.370432332 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.358731454 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.373498579 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.362756825 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.072434061 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.229990855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.378319785 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.369064062 seconds)
  done (took 86.005872704 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.358581528 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.359231667 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.35996355 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.397233505 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.359370047 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.025398256 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.029367468 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.427003703 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.963932944 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.05730971 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.726996634 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.362251155 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.457057787 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.369994613 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.359001736 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.376684109 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.387495069 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363247145 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.360111837 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.027461917 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.364393015 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.373851795 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.549850184 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.374661113 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399544169 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.755387778 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.347249751 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.363201939 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399888664 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.710243212 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.414918824 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.360247511 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809143396 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.103766068 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.479554137 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.360011928 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398942021 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.362544284 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.661664912 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.364445911 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.363202197 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.366159551 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.098932678 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.364970716 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.032331439 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.366299224 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.448976518 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.365020526 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.362772831 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.488644548 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.305440135 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.362966628 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.360215728 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.364984385 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.365854673 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.359863917 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.400985662 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.464755757 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.465338842 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.366103363 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.368149602 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40149218 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.362378696 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.958217565 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.362456864 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.362896937 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.425025677 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.479555846 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.392916607 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.029705402 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.364965183 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.462842733 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.485435453 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.359972318 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.363310124 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.36405208 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.361803827 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.47873156 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.360441559 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.361732354 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.113588578 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.552975121 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.380086045 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.069264064 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.469562059 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.363398439 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.817503306 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.366978723 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.364551616 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.226128234 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.466340066 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.362451131 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.366561193 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.364737688 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.114923081 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.032891074 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.721120085 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.366486502 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.230616772 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.367447507 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.285273946 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.363811007 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.999290744 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.144350373 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.368991609 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.480003674 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.55527077 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.3904582 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.364915264 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.069727248 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.367291532 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.419808863 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.367898761 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.769456902 seconds)
  done (took 397.582363612 seconds)
done (took 639.50936193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.247388881 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.19104217 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.361862697 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.204813285 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.186293794 seconds)
  done (took 12.447369744 seconds)
done (took 13.704155064 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.585747423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.586502162 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.441665361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.58958805 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.40785711 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606236558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.569427288 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.387669113 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.487770262 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.465203088 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.492891652 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.425727061 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.404894976 seconds)
  done (took 20.70928822 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.690177295 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.379322188 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.434303234 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.667246542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.412460337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.686680989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.730491443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.381473274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.534075265 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.389369965 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.387632787 seconds)
  done (took 19.953415176 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.67984522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.382382396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.440371817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.660743647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.416153384 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.695071221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.739276536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.379070503 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.533240951 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.394119863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.390872398 seconds)
  done (took 19.970041723 seconds)
done (took 61.891000748 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.408239352 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.476450788 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.405334833 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.386457647 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.384294014 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.385810807 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.386733735 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.384949168 seconds)
  done (took 12.47841363 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.382783802 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.385348869 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.384225736 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.38523446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.38474631 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.386461804 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.386441626 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.38526255 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.387781459 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.386327273 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.3855063 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.388842296 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.385651916 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.387264787 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.388416173 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.385824892 seconds)
  done (took 23.437753173 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.388413708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.38566044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.3870929 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.388080778 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.387072782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.388455618 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.387914937 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.386013326 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.388146321 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.385009203 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.387804798 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.385399676 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.386240168 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.38654436 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.388962817 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.390046206 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.388257256 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.386405595 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.391434611 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.389352726 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.389000909 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.387367182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.385947634 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.388730201 seconds)
  done (took 34.566008556 seconds)
done (took 71.741310631 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.381872324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.376356367 seconds)
  done (took 6.018379461 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.449455061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.445231894 seconds)
  done (took 4.158884607 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.387210452 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.388456888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.388313399 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.390152881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.387406683 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.388065577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.389240776 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.388721301 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.388518646 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.387991528 seconds)
  done (took 15.145256676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.387822323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.389051035 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.389954694 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.38746459 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.389224152 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.387301279 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.387736121 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.387082435 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.391131642 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.390219607 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.388621953 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.391624498 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.39060332 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.389008854 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.389448536 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.389717064 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.389584126 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.389247912 seconds)
  done (took 26.267630746 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.400201744 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.409618742 seconds)
  done (took 4.074083935 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.517832438 seconds)
    (2/7) benchmarking "second"...
    done (took 1.430923431 seconds)
    (3/7) benchmarking "month"...
    done (took 1.494731915 seconds)
    (4/7) benchmarking "year"...
    done (took 1.490491534 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.431837377 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.410111174 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.430711751 seconds)
  done (took 11.473110166 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.376503764 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.674926602 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.852448738 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.539485052 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.370769606 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.388114755 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.35632728 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.390232766 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.391471818 seconds)
  done (took 15.605273661 seconds)
done (took 84.004174652 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.375400022 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.447373416 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.39652986 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.393624046 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.684455425 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.386489407 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.380031738 seconds)
done (took 17.328836699 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.359413056 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.356440967 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.363592556 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.382194577 seconds)
  done (took 10.725871596 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.376361323 seconds)
    (2/2) benchmarking "read"...
    done (took 1.703340757 seconds)
  done (took 5.344130267 seconds)
done (took 17.33527958 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391015215 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.392051207 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.39109206 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.392996673 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.393538387 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.392887866 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.392353653 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.391862132 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.394009868 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.393697508 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.393822651 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.393595643 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393718903 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390980092 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394121145 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392881829 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.392883933 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394789773 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.392525122 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.392316281 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.393679531 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394429508 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.394156577 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.395563882 seconds)
  done (took 34.699623859 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.393005443 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.393714353 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.395328721 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.3932361 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.394479769 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.394786496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.394728684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.394959594 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.39424775 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.396174078 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393975783 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.393673535 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.395680736 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.394413997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396160144 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.394384647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.395367583 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395603711 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396311443 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.395636348 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.397208843 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394501243 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.396463031 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396116946 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.3934698 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394973377 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.396443346 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.393124952 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.395819775 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.394665655 seconds)
  done (took 43.118813507 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.399495775 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.402533063 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.394618377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.393856215 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.395965578 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.395726735 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.395770963 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.397000531 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.396062283 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.422814491 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.397071359 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.397701503 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.397083472 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.397716145 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.397305628 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.397186321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.398111547 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.40043981 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.397899905 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.398118746 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.397442766 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.39655246 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.399727838 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.401325202 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.39883646 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.398878245 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.399691455 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.39854947 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.397848649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.397736625 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.398095884 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.399703361 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.397559677 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.397482605 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.400178702 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.399676638 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.403940189 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.405491904 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.399807491 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.400858023 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.398152594 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.399794848 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.398662478 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.399614882 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.399768857 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.400648063 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.40041818 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.398736991 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.402060948 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.399232546 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.398215128 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.400385417 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.39839252 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.398849428 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.400500203 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.401960228 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.399545347 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.399783179 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.401073582 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.398764669 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.399613147 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.402913514 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.400110575 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.399780097 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.399230656 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.400641448 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.400414084 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.401242422 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.401131822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.40225282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.40153199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.401681405 seconds)
  done (took 102.036094434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.401626749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.40368247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.403585355 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.402352953 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.402072799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.400334011 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.404876235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40519316 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.404800232 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.401176081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401455609 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.402225934 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400936391 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.402238712 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.402423328 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.400727689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.403219097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.402026623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.402748267 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.402047013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.401911836 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.401958017 seconds)
  done (took 32.127439988 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401140987 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401055088 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.4006611 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.403991962 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.405761281 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.40303008 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.402749636 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.404244158 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402732328 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402133544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40185832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401976012 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.404664154 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402359205 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.403482689 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40502523 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.402452591 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.404840083 seconds)
  done (took 26.530345237 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.401186037 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.403758165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.407078835 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.403305532 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.403920957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.404367729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.404307796 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.40476519 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.403630828 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.405734214 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.404736785 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40520686 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.406775654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403756631 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40512626 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.406155671 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.403630385 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.403062487 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.406716144 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.405947717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.405475862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.406287782 seconds)
  done (took 32.184339394 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.404321668 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.403398479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.403272712 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.404360693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.405917282 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.407185039 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.404855098 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.405036943 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.409899476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.406659642 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406244247 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.405569069 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.407136301 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.407395398 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.404838578 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.406640537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.409236619 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.404603265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.406244958 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.406946408 seconds)
  done (took 29.396547598 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.404076189 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40573059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.406577028 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404982282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406547041 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.404669626 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405733176 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.408735305 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.402440574 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406117705 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.40614671 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406316234 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407834436 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.407175185 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406549198 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407307443 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406050286 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.404972543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.40585521 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40773147 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.409659838 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405875291 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407984088 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.409329485 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.4077457 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.406355531 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404609 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407712687 seconds)
  done (took 40.659493823 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.406110411 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.407712226 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.408800984 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.407653415 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.408750951 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.407476702 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.4051018 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.406168771 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.407580551 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.406113767 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.410744395 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.409237213 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.407847083 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.40975677 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.409462746 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.409910118 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410753832 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.410936479 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.408362412 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409182046 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.4099761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40842991 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.407718245 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.408222728 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408040654 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.409972684 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.412125983 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.408540596 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.410513794 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.408792858 seconds)
  done (took 43.539421436 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.428511558 seconds)
    (2/2) benchmarking "in"...
    done (took 1.426454952 seconds)
  done (took 4.134118628 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.410987282 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.410803144 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.411370584 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.409247365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.410639056 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.409939765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.409316632 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.41043443 seconds)
  done (took 12.562987358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.402214396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.411510635 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.411856356 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.409110272 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.411389169 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.400501362 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.409687257 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.415456711 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.404660006 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.404069661 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.408401474 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.408684117 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.407204344 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.407675446 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.40333265 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407307911 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.412880012 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.41165664 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.411345678 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.412389811 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.41247758 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.407271431 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.411023646 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.41574771 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.408953878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.413490349 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.413037313 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.415823072 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406576343 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.412835532 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.407644855 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.41509236 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.414521763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.414082128 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.414674696 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.411936596 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414442702 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.411476848 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.414087721 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.416860619 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.410991532 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.414148831 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.407892105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.41292695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.41212953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.418670092 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.414031487 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.413206579 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.405830174 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.411274107 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.420254188 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.406600499 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.415308256 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.413545418 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.414765494 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.417222389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.422707843 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.409683413 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.415188094 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.418359756 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.42715777 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.426452977 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.413985189 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.420175265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.419203979 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.433449548 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.422209553 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.421031489 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.417189578 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.416081986 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.417334185 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.427536904 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.430650998 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.424472189 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.416572308 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.416095899 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.412305535 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.419097883 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.41786013 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.421451601 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.423747295 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.418087196 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.419019815 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.43098824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.412385725 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.423850477 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.418553905 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.417721899 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.410662178 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.422024568 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.425109505 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.417271342 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.410074737 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.412139291 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.416850979 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.42095251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.4105094 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.412701722 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.422582393 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.419096893 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.419869583 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41173707 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.420907341 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.425569833 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.420929636 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.420087215 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.426052403 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.413488653 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.421929113 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.42581532 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.420311087 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.411609698 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.417057423 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.423585479 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413821234 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.42256299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.426795976 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.414352372 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.427034376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.419258621 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.422626414 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.439342764 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.425951171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.420957357 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.416910448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.43070871 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.419599432 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.417741088 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.425989842 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.421180402 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.419429697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.415058024 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.428048088 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.416989507 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.424661606 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.411915404 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.424645992 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.421901635 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.420066541 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.417116452 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.423699954 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.418571541 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.422788305 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.427558305 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.428427485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.417816648 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.43090247 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.423224031 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.419286228 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.42338062 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.427017307 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.422383736 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.417621782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.425275154 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.415323072 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.422118003 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.415965805 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.426049351 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.4223885 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.422791416 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.423850999 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.416326053 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.419035984 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.426754099 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.421124112 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.4244821 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.427011139 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.424978866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.423142535 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.417125364 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.425772282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.416794859 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.420844872 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.431835418 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.425207493 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.428220495 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.423796045 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.433460745 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.425095321 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.424825245 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.421558416 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.424263004 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.430514001 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.425419937 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.431452544 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.423488134 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.423802028 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.417623744 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.421107713 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.426730623 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.419322226 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.431282926 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.43209005 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.439364768 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.421868837 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.429421246 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.417155839 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.4285671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.425665658 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.435276976 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.426198711 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.426271853 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419593611 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.431277638 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.421584433 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.429241308 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.417694546 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.427673986 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.425816539 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.426974284 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.427446492 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.420930624 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.424160379 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.430717511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.427610665 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.424897971 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.418348876 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.431420452 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.418974395 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.422820272 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.431390319 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.429754578 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.427870405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.434897853 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.426153844 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.432777204 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.429670817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.423890925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.429232036 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.423877929 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.428732291 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.433661829 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.428194469 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.423163675 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.435336947 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.431384965 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.422255525 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.428669227 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.438997115 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.428465664 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.424419102 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.434381176 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.429315143 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.429020094 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.4280243 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.422047743 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.43321434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.433530413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.438154075 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.421925992 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.43064366 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.423672951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.433070826 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.426698639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.433655935 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.4318676 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.433976062 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.438877056 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.429743263 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.424961232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.432004792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.43046554 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.427932581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.425400852 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.438156549 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.431621735 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.434377078 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.428950976 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.428503728 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.433733295 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.421870019 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.432202972 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.422061195 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.442446441 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.451440101 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.43338407 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.436583754 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.433576078 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.431553235 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.435579442 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.42646086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.427455941 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.429262123 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.428472924 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.425823058 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.435895845 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424503354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.43427637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.432231155 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.43573866 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.436535092 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.432741415 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.425588532 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.435967767 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.430221031 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.432568595 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.424482706 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.434931059 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.428202241 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.436836004 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.435548069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.427701401 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.439514282 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.439076556 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.431430087 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.431201704 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.430017549 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.426514775 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.433240107 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.440481782 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.427374906 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.439946323 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.428581408 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.434230873 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.427583632 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.439765999 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.445599309 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.427067314 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.440987069 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.434554462 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.424166847 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.428436161 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.437515284 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.437867184 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.446044004 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.42820006 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.434623515 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.434668922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.435959389 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.433677413 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.434662287 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.433352989 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.434853881 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.439764306 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.44105701 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.431899062 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.436582177 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.445203867 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.435473165 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.433827576 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.427751093 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.436823884 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.447252925 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.429196022 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.430227828 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.430727883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.436894737 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.436050576 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.436010011 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.437437103 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.435385971 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.439429338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.440652251 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.437684209 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.436763171 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.443161295 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.448972758 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.442169513 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.448543229 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.429161082 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.443958872 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.436250454 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.431480957 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.432473196 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.432570377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.439975069 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.429429543 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.440257557 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.436795602 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.433667583 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.439769394 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.443410097 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.429261415 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.442315541 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.460179513 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.430217168 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.442287038 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.437556503 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.432340357 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.440343204 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.436770027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.428083128 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.438262299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.44065391 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.445127792 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.433461278 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.440267612 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.433317442 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.441894044 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.437217901 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.438262684 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.438059413 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.439803086 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.431201971 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.439379784 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.439474478 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.450564555 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.435829326 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.441470868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.436951542 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.44883403 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.453654285 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.435993523 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.445133203 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.440609421 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.433318568 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.438357846 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.446544376 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.435017668 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.443717044 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.432968726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.438455638 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.437256404 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.442914517 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.446752034 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.443486958 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.433711018 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.436039226 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.444458772 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.439384635 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.439904258 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.436686579 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.450196402 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.434143285 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.4367979 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.443092645 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.437338578 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.449013935 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.438721046 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.442950265 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.441032626 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.446779778 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.441774018 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.443250391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.433769411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.436825327 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.448670796 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.447645678 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.44392842 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.43913815 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.445507039 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.436089866 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.442281077 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.443389228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.437421758 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.437255237 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.44684694 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.438865288 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.440416951 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.438775145 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.446208711 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.446277079 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.447182651 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.438377471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.449923713 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.45283719 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.451162931 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.435922235 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.439962557 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.438756549 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.445627508 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.443141637 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.437340438 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.453525192 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.451785873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.448830341 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.4435484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.445709972 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.43751393 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.445247914 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.442343678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.437901658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.450156925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.439801342 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.449429769 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.445173806 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.442684372 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.43710942 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.437622387 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.440594174 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.443413221 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.446540949 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.444473403 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.448636321 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.443806417 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.450582039 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.443789027 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.446659087 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.44523703 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.436036107 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.449754442 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.43883935 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.447635889 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.449080799 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.439908741 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.449034489 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.445696801 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.441896432 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.448749632 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.451588146 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.442807763 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.436950541 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.443876502 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.45243135 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.458532838 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.448711629 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.441865578 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.445248713 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.449981681 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.44830404 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.446268945 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.44164271 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.458236856 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.46031593 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.441637707 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.442363179 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.452057128 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.458559955 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.447585698 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.446687497 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.443426021 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.449100295 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.453414935 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.447827843 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.450821429 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.454260166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.44462396 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.451238216 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.442550897 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.445744424 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.449665863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.460625157 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.449174619 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.443460041 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.460233042 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.461035835 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.450497652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.478452852 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.456731927 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.451476969 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.457350668 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.441830487 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.450511828 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.446491764 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.455521406 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.44641861 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.448484293 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.448189016 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.439986019 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.450896159 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.458258693 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.461723118 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.450824592 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.441944442 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.445475371 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.44973045 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.448878423 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.449434336 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.450020143 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.450075993 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.448078831 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.443504889 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.462277483 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.470001438 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.456042253 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.452681242 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.450978596 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.452910951 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.456236076 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.452503826 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.456020832 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.44842726 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.44693886 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.44881852 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.460411307 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.449037633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.444924313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.44815272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.445285197 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.452766133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.45922898 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.476543847 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.454564143 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.455463451 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.453993258 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.449963905 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.444482837 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.452840217 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.451070088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.445216924 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.448819823 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.453942466 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.451289091 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.452521179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.448936797 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.45775411 seconds)
  done (took 855.298476603 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.452783608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.451266289 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.4538107 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.453106753 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.455728325 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.455685113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.452504106 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.450472588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.45135625 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.45059232 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.451448848 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.452801161 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.45237572 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.454588896 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.45248185 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.451798869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.452655046 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.451288775 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.451378532 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.454314323 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.451502346 seconds)
  done (took 31.824064822 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.452715657 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.453405424 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.453565781 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.455399392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.452090017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.453345627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.454811241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.454326983 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.454739204 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.452454912 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.455214168 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.451522428 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.454241246 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.456330673 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.453328918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.454097076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.452709659 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.456059076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.453693307 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.454921858 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.455982826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.456174494 seconds)
  done (took 33.314004756 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.455829174 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.45496167 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.449325018 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.458989623 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.455238606 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.457637765 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.454300358 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.455581109 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.456904723 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.450385746 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.451649829 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.451613685 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.451117613 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.462576743 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.452967421 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.463243216 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.454449688 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.455926044 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.458012018 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.457758252 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.460424789 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.469319878 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.456035217 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.448359746 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.453253849 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.458749087 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.459427049 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.456799923 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.448520478 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.458794936 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.45720611 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.450146045 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.464178046 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.463780976 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.45168666 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.460717882 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.459957304 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.460757662 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.458379341 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.464358671 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.4808749 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.458727444 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.460954743 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.470653243 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.457547653 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.452997406 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.462499817 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.457707142 seconds)
  done (took 71.295070718 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.459328314 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.457846882 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.458803908 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.456283553 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.457274384 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.459655428 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.460018804 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.458599018 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.45877932 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.460599273 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.459560278 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.459710026 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.458668001 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.459495297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.460289934 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.456276863 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.46020593 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.458058875 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.459576745 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.458674657 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.459124555 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.460232032 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.46083542 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.459337186 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.461447347 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.459901955 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.459079952 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.462168268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.461896629 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.460204347 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.462605716 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.460126752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.462023728 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.461538246 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.460161423 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.460267985 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.460999242 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.460356479 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.461424984 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.461718004 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.461666201 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.460861262 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.463326545 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.460538476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.464225635 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.460321172 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.462383839 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.459804302 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.462048465 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.460678276 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.463055466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.461913882 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.4604484 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.462565329 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.463720393 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.463522244 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.4611817 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.462044675 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.460063855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.461884057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.460703152 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.463699319 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.463431148 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.461418282 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.463740121 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.462803911 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.464071046 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.462372621 seconds)
  done (took 100.658203119 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.463398484 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.462578526 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.462499753 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.465278212 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.462943595 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.464724878 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.464628397 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.464514023 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.464043842 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.464703814 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.462914849 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.463488687 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.46388799 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.463788902 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.463855577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.465265856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.465235786 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.464036589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.464043121 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.464641847 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.464286963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.465367523 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.464765499 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.464446233 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.465158789 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.464058332 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.462981688 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.465685262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.463926432 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.465314443 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.465668778 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.467670293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.464514272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.465086924 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.463661895 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.465688459 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.467657474 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.463698416 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.46423016 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.466089896 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.46610043 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.46489862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.468218855 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.464656504 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.465218085 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.467958844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.467471041 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.467709495 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.469520891 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.468124504 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.467776834 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.46724855 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.46480753 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.467669883 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.466341866 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.467888525 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.466429173 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.468806251 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.467076297 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.469136443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.467234442 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.467581219 seconds)
  done (took 92.18845497 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.468361337 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.4675931 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.464993289 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.467812179 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.468107114 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.468307704 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.468756237 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.469302544 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.467578192 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.469112386 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.469899783 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.470732512 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.470762556 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470564935 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.469288819 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.469847906 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.469096205 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.468426287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.468646469 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.46889518 seconds)
  done (took 30.707817458 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.467658855 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.468832225 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.469286922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.47086186 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.467403463 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.47040576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.469335044 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.466931448 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.468170834 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471090637 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.468163311 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.469331214 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470314416 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.471406991 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.47047857 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.469324028 seconds)
  done (took 24.840829625 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.470645423 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.470933149 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.472108226 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.470781193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.470459095 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.471847935 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.472096035 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.470869391 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.471003374 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.471604351 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.471506195 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.4716154 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.471678306 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.471272768 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.470840792 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.471433881 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.470199329 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.471140444 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.472289838 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.473109641 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.473178301 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.470333723 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.472390636 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.471885196 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.475863347 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.474323027 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.474025793 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.471243285 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.471853067 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.472125122 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.473079981 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.474022449 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.473340545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.472637739 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.473019694 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.472832973 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.472054358 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.47260171 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.474618203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.47282582 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.473124619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.473579244 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.473975836 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.475399112 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.471824191 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.472452644 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.475627797 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.472476142 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.473176472 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.474919782 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.476614496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.474334206 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.473493489 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.474628324 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.473862729 seconds)
  done (took 82.331047962 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.472711952 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.473546251 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.474815025 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.474027024 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.473260799 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.47315459 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.475555309 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.477741327 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.473472754 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.474249864 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.474205411 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.477850125 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.474857677 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.474944098 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.476706857 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.474488194 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.47508806 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.475647124 seconds)
  done (took 27.883584645 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.474039169 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.474432582 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.475664482 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.476429349 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.475208715 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.478244359 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.474899802 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.474726004 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.476920579 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.477109314 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476025526 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.47669492 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.474922521 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.475530485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.476591056 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.477959312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.476638038 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.475382072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.474320457 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.476252153 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.474089622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.473878584 seconds)
  done (took 33.802431233 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.463678995 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.465887364 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.466292988 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.485291908 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.484674744 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.46537982 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.465916469 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.464616775 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.489083359 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.51103202 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.509818325 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.482803927 seconds)
  done (took 19.090741866 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.478157422 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478594459 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.477126098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.476656295 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479031975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.474583562 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477438726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.476548304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.477976514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.478059233 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478555734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.477621645 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478318682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476362521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478203543 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479872123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.47665923 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477965046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.480389206 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478718034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.480242803 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478052907 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478932839 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.479469384 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.476549179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.47913293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.47889868 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.479265569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.477780463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.481073436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.479547438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.477550251 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.47809041 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.478481231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479951931 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.48078818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.479313461 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.480833607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.478986758 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.480527797 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.481491996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.481048964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478034086 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.481369001 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.47966026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.478994547 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.48019135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.481147373 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.481653664 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.481083448 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.480474886 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.48028483 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.481483675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.47998059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.480018919 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.482581748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.482448044 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.480738253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.480031187 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.479608818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.483633955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.477408221 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.482835332 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.48144062 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.480067527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.481812267 seconds)
  done (took 98.978027958 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478917662 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.48245851 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479309888 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.480277637 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.482040118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.48191077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.482771863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.480853449 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.482350959 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481102976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.482087473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.483262774 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.483839286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.481672532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478301232 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.482443843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.483327046 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.482158977 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.483109804 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.482303749 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481787957 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483782282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.48373121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.484821195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.483854297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483040628 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.484590519 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.48170859 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.483162764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481513215 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.483431718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.482887688 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.483072766 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.482792022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.485911835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.485926278 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484307761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484854424 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.485028631 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.484323262 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.484212558 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.485642098 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.484722301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.483830353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.482836567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.483272844 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.484476698 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.485876471 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.483208419 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.482768837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.484510369 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.484217674 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.541896755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.485005412 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.486702654 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.484424656 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.48522388 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.48461598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.484609866 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.48297167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.484321806 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.485936186 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.488001812 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.48739366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.48662653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.486895247 seconds)
  done (took 99.319707167 seconds)
done (took 2003.785969526 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.63691368 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.594213313 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.475141083 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.555927107 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.473567624 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.514904459 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.471652316 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.473537727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.475020323 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.475708541 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.476604374 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.670949824 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.529620814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.474089934 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.473994451 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.57226863 seconds)
  done (took 29.687720505 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.508579736 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.487611378 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.623828907 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.48310816 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.507437507 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.714594681 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.548716258 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.482155983 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.701122394 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.507424317 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.487775028 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.510024351 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.478596494 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.487207205 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.508742092 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.713018285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.806798631 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.495010592 seconds)
  done (took 32.397932064 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.052871094 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.513569605 seconds)
  done (took 5.916492724 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.508177672 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.483108216 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.483510627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.480102657 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.474174133 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.473085873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.482125255 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.47904244 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.47576923 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.644484448 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.490258082 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.494772319 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.481294313 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.483628037 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.492237111 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.53579298 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.6696634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.493729247 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.490383908 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.489331621 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.480325599 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.586304023 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.540382103 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.494820254 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.641805272 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.481652696 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.487907723 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.493627633 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.605667125 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.489010208 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.485308772 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.4844745 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.484853635 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.479570527 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.071070416 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.477057958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.529826191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.490709193 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.490994408 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.622636403 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.486414341 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.488206337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.477324476 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065451915 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.606316845 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.627896374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.476119159 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.485024836 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.486611319 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.559412322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.483792606 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.487383877 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.552364086 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.346200883 seconds)
  done (took 94.01440404 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.479467067 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.478589702 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.666992867 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.502423138 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.477453128 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.497375516 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.497640247 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829177138 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.488607655 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.478040394 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.833020074 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.169029105 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.480494046 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.552850888 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.524741148 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.541166604 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.496444798 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.486514653 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.478758756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.478900237 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.094161922 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.49640744 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.480985852 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.549584351 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.52364247 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086984929 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.479941927 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.496252457 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.483990956 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.478088237 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.162202568 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.489288914 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.536269681 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.483456436 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.801825063 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947855831 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927662542 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.488830216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.506272174 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.482017221 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.502922183 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107107622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922230599 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.480738501 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.497674306 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078282878 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479074522 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.494528164 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.486695813 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.758907246 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.480744862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.481424984 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.487248818 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.483014855 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.477654677 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.53882989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.526210632 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088208955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.48580972 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.482327622 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.525372454 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.481758495 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.484754425 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.483473319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.485949802 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.926525729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723542514 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.48754511 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925967169 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.152912241 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.484987927 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.229091345 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.487381931 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.493522427 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.515743437 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.481636695 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.500448436 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116805208 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.518113732 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.481526723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929988677 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.485116085 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.818735037 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.501735036 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.482971734 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.11860291 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.495789447 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.537320435 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.481863825 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.483478569 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.499642508 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.485064081 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.810017442 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.540246397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.483286065 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.480608313 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.508223202 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.483230218 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.483671791 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.482528589 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.22852595 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.495054801 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.482091278 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.510638229 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.482989142 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.484240604 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.485720331 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.48617562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.775180409 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.48593933 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.495530767 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.48646702 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.480794786 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.493718012 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.559560468 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.491734635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.894465637 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.49248694 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.484245568 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.510507212 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.483304289 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.505998711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.485317818 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.493811357 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.484463374 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.787687114 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.505830158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.484283505 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.48660057 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.500009826 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.487514862 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.485872727 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.55414703 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.488579699 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.348483158 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.529692677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.532572625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.485455127 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.494720686 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.486555539 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.482988004 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.488568291 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802384079 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.809449985 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.714530891 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.490286665 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.487047256 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.387610184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.528453672 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.672484342 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.509779961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.48490079 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.770827904 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.72202937 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.489359163 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.486829937 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.488508495 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.776395183 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.486168235 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834552033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.188343978 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.490573543 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.496428149 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.33069472 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.338536911 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.48921786 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.493350375 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.820933945 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.509082347 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.489095301 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.487189815 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.488361913 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.489897104 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.494753794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.498143682 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.485800336 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.489170175 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.832592007 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.687531815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.50764433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.494154949 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099283127 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.521329065 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.497219433 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.499935701 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.48830629 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.489791621 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.539484858 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.495157232 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.52529609 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.488634862 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.48789798 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121705927 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.490982758 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.492731815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.689261149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.317619083 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.493835195 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.489885924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.493953711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.56774035 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.1287149 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.523552985 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.87414678 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.497103965 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.534248277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.490944334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.529242811 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13007633 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.50138931 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.491645868 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.314642543 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.489200417 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.918746687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.491711316 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.490801807 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.266068317 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.499130005 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.493611538 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.495273916 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.488928828 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.804927773 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.49196491 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.49996158 seconds)
  done (took 536.382038976 seconds)
done (took 699.742573889 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.491989552 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.498428922 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.49764301 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.497164793 seconds)
  done (took 11.348519667 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.511016027 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.497632351 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.507457786 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.499200106 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.508249864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.497008154 seconds)
  done (took 10.387638752 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.49181613 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.496171395 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.498136916 seconds)
  done (took 8.853404667 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.751177579 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.512934226 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.947224241 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.508198018 seconds)
  done (took 10.087513966 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.506124839 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.511211663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.50893391 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.510622997 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.514921922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.513051343 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.510685151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.509163853 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.511910717 seconds)
  done (took 14.961326281 seconds)
done (took 57.004170924 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.474942459 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.091601839 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.637241266 seconds)
    (4/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.591086976 seconds)
    (5/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.477578734 seconds)
    (6/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.623052743 seconds)
    (7/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.524133792 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.68003653 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.496372303 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.665310212 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.620223472 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.57175609 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.845875202 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.529438432 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.826209375 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.510629332 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.960882747 seconds)
    (18/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.779017553 seconds)
    (19/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.520639584 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.475279159 seconds)
    (21/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.770703651 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.474242137 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.801743998 seconds)
    (24/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.646047456 seconds)
    (25/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.687197845 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.581253143 seconds)
    (27/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.58631865 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.652115948 seconds)
    (29/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.495429721 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.494355745 seconds)
    (31/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.594901644 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.784256876 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.583668613 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.668272543 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.576956515 seconds)
    (36/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.638735428 seconds)
    (37/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.475301288 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.572339484 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.787098557 seconds)
    (40/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.494977813 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.597089465 seconds)
    (42/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.741498698 seconds)
    (43/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.529033062 seconds)
    (44/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.738964234 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.634820985 seconds)
    (46/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.620847089 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.747839773 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.47856392 seconds)
    (49/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.507213867 seconds)
    (50/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.583176498 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.479976338 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.537032433 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.477405341 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.601237101 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.777727751 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.73167906 seconds)
    (57/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.529219572 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.480624637 seconds)
    (59/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.55064298 seconds)
    (60/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.590015457 seconds)
    (61/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.747574222 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.601609487 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.502189244 seconds)
    (64/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.589273881 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.681633581 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.476998658 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.811716729 seconds)
    (68/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.531676114 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.66105503 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.851175638 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.590355321 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.482580159 seconds)
    (73/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.593992465 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.477789413 seconds)
    (75/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.550860264 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.6543563 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575950277 seconds)
    (78/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.484854624 seconds)
    (79/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.588461519 seconds)
    (80/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.008263323 seconds)
    (81/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.483615642 seconds)
    (82/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.675147858 seconds)
    (83/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.691265965 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.504971765 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.84891141 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595510121 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.695645575 seconds)
    (88/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.53519479 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.630822638 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.586796559 seconds)
    (91/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.480260934 seconds)
    (92/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.565385035 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.502196667 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.721471985 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.533688704 seconds)
    (96/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.535269417 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.612836288 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.6730698 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.576671801 seconds)
    (100/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.481402106 seconds)
    (101/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.492347384 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.485280581 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.704268255 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.48143236 seconds)
    (105/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.718773099 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.826016782 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.668817947 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.479423173 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.651474123 seconds)
    (110/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.582220522 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.526189689 seconds)
    (112/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.628165929 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.539283046 seconds)
    (114/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.70189434 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.616937396 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.546238699 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.584120497 seconds)
    (118/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.751839803 seconds)
    (119/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.830944291 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.92410488 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.485016999 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.730746246 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.75306464 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.592768982 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.625773398 seconds)
    (126/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.487998921 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.685557569 seconds)
    (128/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.483134312 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.565105708 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.653371922 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.504715651 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.550582876 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.780022995 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.485709219 seconds)
    (135/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.490102541 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.658121276 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.596639548 seconds)
    (138/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.62814128 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.799378754 seconds)
    (140/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.680959295 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.574295283 seconds)
    (142/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.547764424 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.930924345 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.613190902 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.704100561 seconds)
    (146/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.578791674 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.484078378 seconds)
    (148/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.857673482 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.509234289 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.947154998 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.629700194 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.089958727 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.504546726 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.892578064 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.678780092 seconds)
    (156/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.838044742 seconds)
    (157/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.603557942 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.502414595 seconds)
    (159/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.576907949 seconds)
    (160/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.583115183 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.487680805 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579965953 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.651158935 seconds)
    (164/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.857258622 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.641243883 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.546020857 seconds)
    (167/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.609452381 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.488328685 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.63677029 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.622339197 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.619914438 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.528662739 seconds)
    (173/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.71181773 seconds)
    (174/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.583267655 seconds)
    (175/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.783881738 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.671090522 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.513226473 seconds)
    (178/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.631587059 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.549210119 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.929779906 seconds)
    (181/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.769578936 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.713582823 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.737813644 seconds)
    (184/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.684016681 seconds)
    (185/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.490953596 seconds)
    (186/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.75412513 seconds)
    (187/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.652810503 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.634495553 seconds)
    (189/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.488862598 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.551344695 seconds)
    (191/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.542860694 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.62314387 seconds)
  done (took 361.88455111 seconds)
done (took 363.252616464 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.53999892 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.605288109 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.520962988 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.519906556 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.522407739 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.516747777 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.540266357 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.521474574 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.533377726 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.53563728 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.516312001 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.527137095 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.537168057 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.531230504 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.554863627 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.523472213 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.522712846 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.532515219 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.536368744 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.537203007 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.524295031 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.52203521 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.549339835 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.522820102 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.531077108 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.53170837 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.527495268 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.519946691 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.527717242 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.538060361 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.532101357 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.523778175 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.539560169 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.536599466 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.525492129 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.533751355 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.526411077 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.610174163 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.54649808 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.534779795 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.532027503 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.538587129 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.526910377 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.528923233 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.535571232 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.55238247 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.531825448 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.537270406 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.531019987 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.512867009 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.542337745 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.535076492 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.531948032 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.515051462 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.525863677 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.536930497 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.53345058 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.545698022 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.531201601 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.527986262 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.55883989 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.543127714 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.535486049 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.534327344 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.530860532 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.540987019 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.534594897 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.541337564 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.531948072 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.526421469 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.526805972 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.533017182 seconds)
done (took 119.850313496 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.643512167 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.520863412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.682219274 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.532806838 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.699685783 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.648070896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.530921837 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.532012884 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.532196704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.325796029 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.531132927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.533348462 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.521779292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.532139738 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.646697758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.53294916 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.530564662 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.224465525 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.533449055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.660711974 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.52292138 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.532246874 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.532490763 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.328114381 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.523612838 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.51851908 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.661672414 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.532752372 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227614475 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.518061547 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.523746217 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.226991307 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.661307535 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.554332372 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.545208385 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.542946425 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.699600904 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.534521334 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.648639335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.648911321 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.682814453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.570883424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.521143203 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.525854701 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.535983001 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.535518283 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.533821449 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.565474086 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.523244545 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.531022505 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.227990085 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.543859601 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.542042226 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.534249582 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.536644709 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.55429228 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.535116104 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.537021209 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.663438507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.535490891 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.650737755 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.330806857 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.33130503 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.536366411 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.524625709 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.534321086 seconds)
  done (took 121.407011056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.592766446 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.602214849 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.654139262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.52420558 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.575232581 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.654770164 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.525449629 seconds)
  done (took 12.517793296 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.533836545 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.537758567 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.57740533 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.576030162 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.535872042 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.702867877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.537223271 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.538643663 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.536404109 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.578659885 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536344086 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.53693797 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.546155998 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.529702453 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.574632786 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.538525262 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.645834992 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.530197045 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.536744336 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.686131148 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.53632 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.545823835 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.581446048 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.540185095 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536450641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.536442709 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.310062171 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.537530728 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.53366686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.538602939 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.538104522 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.598418522 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.535678701 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.529003326 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.538864469 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.645424858 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.537816204 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.538409782 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.537968739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.529884207 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.537654859 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.539541851 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.541891652 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.539044073 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.539969422 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.554378281 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.538387833 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.538366107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.543218534 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.541750673 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.58359761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.53846232 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.540870587 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.539735767 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.587265293 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.548379917 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.540248004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.540512786 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.540141116 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.541476692 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.687985744 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.580458892 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.540628058 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.580938156 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.541410127 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.540426972 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.539540903 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.542600205 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.623697934 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.540442381 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.581111771 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.541883693 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.713096933 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.557237412 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540959226 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.535584206 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.536060615 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539411947 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.530946637 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.539826259 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.539771778 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.536632989 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.540100602 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.542865615 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.544170973 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.693288511 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.640131186 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.542252868 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.551742189 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.539298208 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.543790393 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.585300391 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.541130474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.542880263 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.585141432 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.652843568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.586734229 seconds)
  done (took 157.391656111 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.546136043 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.549393926 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.538215138 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.561841795 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.534120443 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.533278872 seconds)
  done (took 10.656536912 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.53718189 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.545351077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.544361432 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.544677218 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.548334826 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.544633695 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.546882423 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.534816268 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.546292614 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.543880558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.544337244 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.54418399 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.543474068 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.540744814 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.542902578 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.543782685 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.54382932 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.544769374 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.544034448 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.545913412 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.532277192 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.545564151 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.544441147 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.538130336 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.550270472 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.545610231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.561474755 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.54610773 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.545028523 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.5428204 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.547501306 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.545938075 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.536683268 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.542587481 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.549356578 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.537998221 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.550929661 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.547902973 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.544575442 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.549188301 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.54580745 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.544725944 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.545912255 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.546587511 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.540098953 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.54297921 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.551313132 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.562462952 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.546576822 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.547700567 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.545886399 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.543574596 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.545528882 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.547811823 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.540131103 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.545129435 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.55130685 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.546607068 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.546903783 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.541649479 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.553736457 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.547484241 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.539156498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.551916259 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.548526691 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.548629977 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.539374451 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.553195986 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.548688562 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.547872088 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.549799256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.546787766 seconds)
  done (took 113.680794125 seconds)
done (took 417.036880094 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.894887232 seconds)
  done (took 4.292925152 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.819341845 seconds)
  done (took 4.218612126 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.070324739 seconds)
  done (took 27.479086335 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.617661328 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.577625618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.545230634 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.531864844 seconds)
  done (took 11.669850447 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.912523111 seconds)
  done (took 4.31136565 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.537404199 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.558117334 seconds)
  done (took 6.495846572 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.928803492 seconds)
  done (took 4.327063586 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.981359869 seconds)
  done (took 4.386093573 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.541561929 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.562852082 seconds)
  done (took 6.514059 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.508375854 seconds)
  done (took 3.908024184 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 23.063152781 seconds)
  done (took 24.461333316 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.55408478 seconds)
  done (took 3.957909903 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.570692405 seconds)
  done (took 3.968483264 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.934295649 seconds)
  done (took 7.331544689 seconds)
done (took 118.720454276 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.530885568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.529873462 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.532557311 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.533968003 seconds)
  done (took 11.524801005 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.610990506 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.61287226 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.624048302 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.609248835 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.606287591 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.616239662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.576563557 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.573808616 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.60616277 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.597925343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.614006005 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.604623353 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.61500247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.573127433 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.601480016 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.618620053 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.607238824 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.623416644 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.576374207 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.607280541 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.552333099 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.608642051 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.603592805 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.551967461 seconds)
  done (took 39.791291755 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.042802476 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.620319866 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.705475408 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.592316082 seconds)
  done (took 8.360692936 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.654598887 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.658184512 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.676073023 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.714815754 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.761401202 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.670884184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.577042828 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.571407224 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.558451678 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.658503708 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.743659794 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.660233158 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.880338822 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.550175628 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.87830809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.549805297 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.549794145 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.654829194 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.702836792 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.737201649 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.54966902 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.652808124 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.663671944 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.655274499 seconds)
  done (took 41.330425088 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.554491644 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.568591677 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.553329875 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.565153561 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.55599259 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.552102441 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.553599122 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.556087134 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.551097632 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.551655154 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.553692729 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.566203223 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.553201619 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.552855416 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.558030268 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.554706799 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.555842246 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.557614027 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.561295774 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.554028226 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.553937016 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.56101315 seconds)
  done (took 35.646702198 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.538365329 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.535234192 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.887120764 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.793417649 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.536713603 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.540698227 seconds)
  done (took 15.232641968 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.634487822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.814774857 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.547849647 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.996960059 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.109273178 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.548400259 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.543840834 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.858741792 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.23732723 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.26779005 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.619266923 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.630172346 seconds)
  done (took 23.211872332 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630104122 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.551127011 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.546279262 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629503874 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550223319 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.546089075 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.54335387 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409596551 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.558985162 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823928441 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564914766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629662477 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799421222 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56593216 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.553534618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.535212954 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781040854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157110144 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547214282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553752855 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580292302 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.555693996 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.56393434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.82118961 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.554941621 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551439315 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.813226884 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.551723912 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923331669 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900503328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90312529 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556416032 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824983245 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309253059 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659224019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825551261 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552299173 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.578578272 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.522944911 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.588106639 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566829315 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.554474522 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896708676 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560761186 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.549943367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551843002 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436194577 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.560733707 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.547513156 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.549038689 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899686832 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637485053 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.556561097 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.551282312 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566764603 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556091679 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.556780198 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691161442 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194149306 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558849688 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5714764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.556835653 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.548818944 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579441522 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371814608 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.560058688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.557009322 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559205489 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552287442 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.567755979 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575401329 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553387199 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.56824167 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551355682 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507286188 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.554712173 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551127434 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213096703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566392071 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.558907896 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776552658 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551242217 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552457363 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.551101128 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.554736582 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.449515969 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557098498 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.523010867 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598274401 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410611889 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.832418786 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578037084 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585459046 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777735978 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.522405727 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552631581 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.55390389 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554840004 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578411163 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415234461 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559419303 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.558323832 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802478521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.763528218 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568707483 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.546266302 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167708042 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574046248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.583299137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.570871165 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836423884 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.354726533 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915792531 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562797489 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590979049 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.557546948 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.5160686 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563795878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.567806313 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.569801016 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895306444 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.547755669 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555465514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630459359 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.558696323 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.558536826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.570562804 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557537614 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555130815 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.81010362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.572291863 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91167372 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.564945002 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556711509 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.562260955 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555179986 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.583496505 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777897529 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570653593 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83446084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558059258 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55756111 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55664755 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.772982051 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575987175 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.568526594 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89764282 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572621811 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.577515765 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914282422 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595360584 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669478511 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589618025 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.569349763 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812413621 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.561578167 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.565515283 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.57061852 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.558358876 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562323831 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.567551424 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565732041 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362314246 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547479718 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.563974029 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.560719034 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.575677674 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631387585 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566584138 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832654431 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.56883533 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550606004 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.569373047 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.567986083 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788754765 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910416529 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.575712644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729450638 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.162651876 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366356765 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579648039 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.559980799 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.560584654 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.558190491 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56121071 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562674492 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.559297468 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833764986 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922208936 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.57366774 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370458253 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566634004 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.577182903 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.568482919 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908585847 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.575531727 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560937545 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.563586597 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567320546 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571735121 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915882424 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788152237 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.575623295 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562662352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.079868187 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567047947 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.559467555 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.559796049 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58430529 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.580359175 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570289647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907232973 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.586569903 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920998093 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.585682921 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.579628631 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.562167132 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560524795 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590475783 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.587292679 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575738002 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.839964131 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587799413 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563736876 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199224303 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513426338 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301714671 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590532479 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.57338054 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.571098357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425613959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570442432 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564252913 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870926977 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426006264 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569351661 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168196777 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.586198323 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.540139345 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923448377 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801594338 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.585364163 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.567814568 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916522631 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.781742489 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590762515 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.572748884 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572789645 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.534611366 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261392455 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.570703507 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742025471 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426877173 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588353754 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.567368034 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.621751911 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570319296 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069429148 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.569959602 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56326423 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.583312963 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.584384833 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579707974 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.574835183 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566435816 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390653872 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.588521479 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.179052192 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571541635 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84126735 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920618817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.903096551 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.581802239 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.578094705 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.810454231 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91706024 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573743957 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.565938503 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316478529 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.429947877 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.574921643 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56875804 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.524762091 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58200996 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955543039 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.576810654 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.574072733 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569650999 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.56589935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567782709 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.567330463 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.574331044 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550703476 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182921118 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.560225239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589926828 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.577315143 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572903016 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8153145 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.583099754 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378252459 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7977806 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.565754244 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604607888 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.573718905 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576187751 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.539899442 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.567638233 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.566842501 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566986492 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794089008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.568828655 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.545170989 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.635144034 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783654081 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.569817322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.585978479 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859671557 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.574758437 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.593859736 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525316836 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600589317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.57969402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571387854 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.568480428 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61444548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645404517 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850627256 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.928645132 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93142536 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078533954 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583761783 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571222141 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.583991829 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652258457 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587412185 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.570037551 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.568620654 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378041097 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548353555 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382747648 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932407764 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.576773627 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58063265 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571174946 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813285773 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.572915866 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846127157 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571005395 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.572214014 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59851655 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581643529 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585244715 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788927014 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848430238 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.572782822 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590190921 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576646651 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.574052453 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931152492 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.790204241 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188817442 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242932721 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571717891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.581072959 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439348193 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855242471 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57477902 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571561195 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574178449 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.581263206 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576791447 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.584600266 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572454532 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79754268 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928387808 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344741612 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927973223 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.61009829 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176134977 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577877058 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822083218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408854666 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85416683 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392390942 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527903702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833516435 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649337605 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853322461 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.577837195 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811110855 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.578650238 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.578623977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.57680231 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576047173 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.57376174 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92808931 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392944771 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834640447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.579725038 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.57589126 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604119008 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.856623938 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802540037 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.483316265 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794541519 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933194582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588644283 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.574446439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390872071 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938844853 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583209315 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.58186891 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865047622 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.579822507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610819512 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.447264687 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.577308296 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248078203 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.787744141 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599027245 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591321066 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529640614 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399165986 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.593994539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199547118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.579689132 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593588025 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858248177 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.587471268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.58814453 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863981084 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.585401818 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587983401 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862362901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.388514758 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.526598343 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.583872989 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601408309 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.578201041 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57897932 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660279702 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581732498 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.57842286 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.085308256 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5841411 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582150827 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589941326 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.581990544 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593232885 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.585852935 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582082601 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.587551527 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.570687706 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.578389315 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.594787696 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71953639 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283878102 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590203184 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.19357773 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.918762207 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828521919 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.598004669 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.555839548 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.58644246 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583537591 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580130022 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581323402 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.573325657 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257834037 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.597503779 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.943440495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596875261 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.795444327 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794129351 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.582185865 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862523996 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605605688 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608275247 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.551425902 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580196895 seconds)
  done (took 1087.245600055 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.636757402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.604693822 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.604712774 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.654478513 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.654877698 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.652008927 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.65536942 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.669789083 seconds)
  done (took 22.566822095 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.582137201 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.588588305 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.594986503 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.586738591 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.574089079 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.196094736 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.579288023 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.587822829 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.598399333 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.586886984 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.573758236 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.374660355 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.590752273 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.576948631 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.59822412 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.585919776 seconds)
  done (took 36.219131098 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.920823388 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.888337978 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.300014043 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.616659408 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.626188108 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.610099973 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.040901858 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.581468395 seconds)
  done (took 30.020147215 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.590077051 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.586922694 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.592787318 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.590232222 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.59324817 seconds)
  done (took 9.389199578 seconds)
done (took 1361.937375898 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.590059605 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.592693629 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.593993229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.595589293 seconds)
  done (took 7.804363622 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.5566989 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.558859385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.559542242 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.571180279 seconds)
  done (took 10.681663019 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.506111222 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.253849756 seconds)
  done (took 6.196094513 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.158457672 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.161849833 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154856803 seconds)
  done (took 7.912328713 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.892049281 seconds)
  done (took 3.327485389 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.573462743 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.583127904 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.604227532 seconds)
  done (took 9.198192249 seconds)
done (took 46.556266791 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.585154944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.332361103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.734530908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.578759881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.738208475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.738378846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.042011681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.588889078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.578887679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.575316974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.579327875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.740284851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.030692086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.343874416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.029163789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.344287524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.745417592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.575678089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.597820959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.586262935 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.042584655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.581079044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.583911796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.580732245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.74338844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.724672318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.576542806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.344493586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.578706394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.581585693 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.723428163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.577040894 seconds)
  done (took 90.140232436 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.578432062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.579117834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.601046358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.599732245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.594547511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578552604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.600541484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.578305211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.577614001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.615308099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.576727524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.588013008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.578404786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.577269822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.579849787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.579441172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.579695346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.578876538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.57915812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.57964816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.58026186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.579247608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.579310687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.579165426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.579759488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.580657427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.587063917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.579661916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.578677376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.589714836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.579604595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.582511596 seconds)
  done (took 84.114047181 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.581277906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.583147748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.582292847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.601428973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.580822362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.581943764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.579301191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.579148602 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.583571886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.581215469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.580906525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.579602126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.585075623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.585467232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.582620079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.584086195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.584924712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.580052091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.581663342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.59050117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.581730312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.58318901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.582086536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.602802583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.581755666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.583702478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.580796115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.581454516 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.599456089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.580168761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.581153645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.581516048 seconds)
  done (took 84.130664766 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.82276638 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.596576415 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.603398543 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.594675336 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.603130905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.600559576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.594758066 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.829331422 seconds)
  done (took 16.689322891 seconds)
done (took 276.510723493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.613581117 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.216861332 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.626072371 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.596722228 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.61564991 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.624812307 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.851524149 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.626699402 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.842106514 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.601086009 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.60951896 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.604148086 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.606686044 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.752825989 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.504264895 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.593818553 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.602156293 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.600760279 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.270268659 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.85438893 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.620919393 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.589679408 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.516025179 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.594345238 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.563055037 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.669174053 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.670629836 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.761830741 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.723393548 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.671279362 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.210405571 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.602887938 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.613059717 seconds)
  done (took 72.46101055 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.590222133 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.599835021 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.603250464 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.605484452 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.60487455 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.605675523 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.596356608 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.602347911 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.605109711 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.602741921 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.604191361 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.605444197 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.605103473 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.604454806 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.603409298 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.57725815 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.593820906 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.602498551 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.593388977 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.577513113 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.604291927 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.605115928 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.607061593 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.60546469 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.607059144 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.6061229 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.606267105 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.607505818 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.605269552 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.606316357 seconds)
  done (took 49.48804755 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.602865583 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.265462022 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.515826782 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.60598417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.595777099 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.600387927 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.975921273 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.605578594 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.601906128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.600214583 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.174932001 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.607491325 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.637686269 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.495228654 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.596205769 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.606430648 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.608511969 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.599523457 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.2773218 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.605959303 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.990281277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.607006337 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.971183784 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.605685277 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.601663969 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.601548118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.603713257 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.48857439 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.620904459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.177344907 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.593279015 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.985632481 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.431689081 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.576300424 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.604101018 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.612489724 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.607892733 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.183879173 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.599677254 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.599590568 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.987226525 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.604902232 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.538834506 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.352094698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.624495568 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.608835175 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.531468404 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.180566918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.929277776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.611596176 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.570098743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.608189544 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.609260966 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.601624944 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.933245994 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.608398305 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.601000359 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.595264783 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.611147249 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.991925145 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.613700546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.602244167 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.291592659 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.599838673 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.276911281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.600654297 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.610287092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.602390868 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.540190949 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.608960556 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.370872435 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.628134392 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.609809586 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.182196494 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.273841006 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.58102825 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.601244056 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.283451618 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.459243174 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.989581147 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.60300899 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.468023461 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.992371399 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.604634924 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.611935783 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.613429674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.612187548 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.678583192 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.986517973 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.286843295 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.373037373 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.622505455 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.020694381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.611679717 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.604684823 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.59613363 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.616957392 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.614337903 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.535900451 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.375891095 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.629049525 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.611477668 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.358469149 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.632669686 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.978431509 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.608596532 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.581174839 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.610154847 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.680996961 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.612088793 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.614768634 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.612628294 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.977063456 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.610404373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.614590082 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.354540679 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.220994065 seconds)
  done (took 225.455835313 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.59860951 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.596790017 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.599519593 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.599121505 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.602347983 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.60511913 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.600154435 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.598527074 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.603638037 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.598854683 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.599913711 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.608531807 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.608964846 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.601859078 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.599717114 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.619448347 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.599843376 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.601456366 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.619671998 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.601807339 seconds)
  done (took 49.516723266 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.616124266 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.31750683 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.292315693 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.614793726 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.616524086 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.609187525 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.6846012 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.620491241 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.617270929 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.989073677 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.837144087 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.621039818 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.617015606 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.6188423 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.324416662 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.591163148 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.987325699 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.315795436 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.613020059 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.321812206 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.585785983 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.617044981 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.60711301 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.317515324 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.996703169 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.972976823 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.682829481 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.327076567 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.614490624 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.617702554 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.329829321 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.615951828 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.610286357 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.358105214 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.619028476 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.632447865 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.618076219 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.688465181 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.692794451 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.992677104 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.324894936 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.004491156 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.632309691 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.793255549 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.621532122 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.587516563 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.352370999 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.615654406 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.590786022 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.618507064 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.624748742 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.340440095 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.61447874 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.337909409 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.623568779 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.620342704 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.323624293 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.32784621 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.298613991 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.838885656 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.613695393 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.981668422 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.619157602 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.335906224 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.617377489 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.618050972 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.621752844 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.844823591 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.327192146 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.994929551 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.993999306 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.98937959 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.617239982 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.699188466 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.62337097 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.999384393 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.696352244 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.055339181 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.995785339 seconds)
  done (took 148.116024349 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.948467091 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.744519947 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.072249864 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.262604521 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.186089087 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.765400101 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.751577174 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.909140177 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.638780927 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.724513113 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.419995154 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.730621978 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.453819391 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.696193195 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.747415351 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.760186896 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.098370811 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.627643125 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.362075089 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.389807253 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.620341778 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.73511299 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.157971752 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.850852431 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.613098985 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.254719253 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.629479675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.213138441 seconds)
  done (took 60.82163937 seconds)
done (took 607.300604446 seconds)
SAVING RESULT...
DONE!
