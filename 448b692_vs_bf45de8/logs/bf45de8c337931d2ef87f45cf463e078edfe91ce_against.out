cset: moving following pidspec: 25268
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.581490325 seconds)
loading group "string"... done (took 0.527265695 seconds)
loading group "linalg"... done (took 9.61984845 seconds)
loading group "parallel"... done (took 0.170670055 seconds)
loading group "find"... done (took 4.542818563 seconds)
loading group "tuple"... done (took 2.075483523 seconds)
loading group "dates"... done (took 1.410831581 seconds)
loading group "micro"... done (took 0.192004748 seconds)
loading group "io"... done (took 0.511875269 seconds)
loading group "scalar"... done (took 58.116236599 seconds)
loading group "sparse"... done (took 14.231495441 seconds)
loading group "broadcast"... done (took 1.724589309 seconds)
loading group "union"... done (took 10.544176325 seconds)
loading group "simd"... done (took 3.620659684 seconds)
loading group "random"... done (took 13.336925847 seconds)
loading group "problem"... done (took 2.265028059 seconds)
loading group "array"... done (took 24.257055914 seconds)
loading group "misc"... done (took 1.14645569 seconds)
loading group "sort"... done (took 3.805336281 seconds)
loading group "collection"... done (took 22.174616203 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.691004729 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.209730592 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.196139279 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.205350825 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277633072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166434366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15742025 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169660071 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.65663436 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210019066 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136069973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420097165 seconds)
done (took 6.266023264 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.424656681 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241738638 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186719581 seconds)
  done (took 1.146187532 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076199393 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156992419 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109204692 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093943698 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093907387 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110417264 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093497953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109911216 seconds)
  done (took 1.486100843 seconds)
done (took 3.855411646 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.511419258 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.918289786 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.52258335 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181533534 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316648879 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306862739 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266452217 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220219106 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095034463 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08597164 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179232554 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.428811473 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.393359955 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.976983325 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070496954 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093968045 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15323107 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.77902785 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079577575 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110308662 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531186077 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.21432269 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115704011 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106651193 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18659887 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135036368 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142212436 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101547574 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670577336 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135640249 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217128781 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083434073 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140191691 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165819289 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215941152 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109471156 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684526523 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20234917 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100282747 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10081368 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.695458159 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127340635 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203999276 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105548763 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068497954 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163983404 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101419922 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093462836 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094583156 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086313879 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165484504 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46539768 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106645573 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193903145 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094196078 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704361563 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099433741 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276533619 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124992652 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095188186 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091524252 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08736573 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156541738 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093830211 seconds)
  done (took 20.2977084 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167597141 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185245099 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077442586 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157287132 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121734691 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097430178 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084655308 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078597964 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12582217 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180528268 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142713157 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174394169 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094779535 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090110049 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169526557 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230123061 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.130490361 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103512045 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088941191 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10728783 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12151301 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095357056 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108358273 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090671948 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172449243 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207978353 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11122287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125562061 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092429787 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097366487 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142549134 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145767144 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092979039 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087809484 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169401085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125459065 seconds)
  done (took 5.334627164 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242977937 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102592644 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249677727 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19869922 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152536384 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183930737 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175730421 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.297387673 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.237835954 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162477914 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12915336 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102026095 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080308616 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080501655 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097430969 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34452824 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.200401114 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174912684 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190833996 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101024564 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103931624 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370822868 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104518133 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088748436 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112761192 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067514812 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.230349734 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098583305 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.092259627 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084185813 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121476689 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114705654 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215437975 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127495337 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120226614 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116418512 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086624125 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222828399 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119605595 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078990171 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113928633 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133017978 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114325413 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134613377 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109528325 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222770422 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109341408 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084790196 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131660715 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.070633651 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197959743 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.158467219 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084999392 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289736394 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128057829 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101191059 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.11016846 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.800350128 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133586208 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.181181246 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084963031 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081417027 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.118383234 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082595462 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455036951 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126674118 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.18709924 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084681453 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161168084 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100573057 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.124334784 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088315788 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087725425 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.133183292 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087294824 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099527276 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090440163 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081356065 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111933385 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117611174 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102955509 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084448205 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149692969 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100102617 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.130043063 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111064597 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.110681415 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089478619 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131089019 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089488205 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092631505 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.192653187 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100136599 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106530031 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116061516 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11749629 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143520752 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089202614 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.267914998 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099392358 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12675454 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083021405 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105066394 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131024983 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100235881 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079708611 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10299752 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082438348 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082343792 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163902212 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090619673 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082907664 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108367816 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096396366 seconds)
  done (took 28.817743851 seconds)
done (took 55.165630183 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.421897909 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081664458 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081254925 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101789835 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084557045 seconds)
  done (took 1.567950657 seconds)
done (took 2.34398772 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312034977 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200029628 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087027272 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189988783 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086094685 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196196246 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183322758 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101837385 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208135967 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086484852 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193636158 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085592575 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10659792 seconds)
  done (took 2.834722478 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103196327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10693891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103345066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120925685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085528089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10118129 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120049551 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109265978 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100053727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113667492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086315615 seconds)
  done (took 1.9197654 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100499771 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103544051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091762203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117404423 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085624752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098049557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117919359 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105325343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098157281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113387209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086302211 seconds)
  done (took 1.892019951 seconds)
done (took 7.418262987 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215571594 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.971405905 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190317765 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243855983 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353502124 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296914957 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617705253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199670134 seconds)
  done (took 15.991609928 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.198576128 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109904579 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092078627 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094716666 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115499726 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095427588 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089525341 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116222305 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093617668 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096321529 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094748087 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112829873 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091896182 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093497608 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106938165 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092280839 seconds)
  done (took 2.533376349 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145194632 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123332145 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116714211 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099335893 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093518437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117570197 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101282951 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096133037 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112939036 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095110524 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102534881 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114395086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098328737 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092788035 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115469646 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121699553 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093621711 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114021543 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116114922 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116769531 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099073806 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096405197 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114557904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097890821 seconds)
  done (took 3.458992548 seconds)
done (took 22.759857218 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145342736 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102317378 seconds)
  done (took 1.025626679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163123238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183585352 seconds)
  done (took 1.130602935 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111649042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090023269 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138557856 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1030107 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090491905 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108870968 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115731565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108372081 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091122068 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092245219 seconds)
  done (took 1.840136895 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093713217 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094711678 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123674447 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16742319 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117407176 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092575512 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095258951 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112882775 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096191135 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089344334 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114270974 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108339857 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095752596 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126861764 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094939626 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095548051 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117437249 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095227458 seconds)
  done (took 2.721251512 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091068698 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093009012 seconds)
  done (took 0.974363243 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092948454 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089728941 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091647804 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110316376 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091050562 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08935316 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107858365 seconds)
  done (took 1.462605732 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.526914358 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.235384201 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371144984 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073372449 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125907707 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.450158316 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105374684 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072146758 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093020732 seconds)
  done (took 2.87950774 seconds)
done (took 12.825168914 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091399458 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.243504141 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63664065 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112940702 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090241257 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162305389 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314151673 seconds)
done (took 2.447799462 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35041864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165249963 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085200668 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091762075 seconds)
  done (took 1.483068457 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081702854 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099873908 seconds)
  done (took 0.9806906 seconds)
done (took 3.264542952 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090528971 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.121676476 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.110197928 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090071865 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.089053299 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089300369 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.108604973 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.088821986 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08901939 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087945471 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.109452922 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089883805 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088497042 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10621633 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090472129 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08775054 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089307401 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106825081 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08959828 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088755978 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106803262 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089764746 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088661179 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088544177 seconds)
  done (took 3.116838042 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110870732 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091591027 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110989712 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093895229 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094084729 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112061393 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094870308 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091909181 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112581929 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091888868 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093460764 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093542324 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108893813 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095123737 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09131993 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111784836 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093595719 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090946302 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109341231 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094996109 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092859856 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108954574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094179834 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093142608 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111979159 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094617947 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092023871 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108787532 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095426901 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094330139 seconds)
  done (took 3.774544731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096125477 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086556891 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089701663 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11717694 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087935833 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089259105 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105154262 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090556327 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090921406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089615368 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110928919 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090559661 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089381666 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109532882 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093278195 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09247371 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098775359 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.109049653 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090684321 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090190223 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112663047 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090255906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089467893 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090245592 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108582727 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087256996 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089877543 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107738651 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091920572 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08920806 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091365007 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110997235 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091887454 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100303216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111285999 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09101988 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095066452 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10550269 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092118374 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086752541 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085783415 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109078465 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090281505 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095876962 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109097943 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091683581 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090498626 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090773687 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109047386 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093219537 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086081994 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107866398 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093652839 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091544088 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091426412 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105488124 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090909704 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087437514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10959937 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091736122 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086253895 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08589459 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112968845 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091519857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105036482 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114897013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091546245 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09115819 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108483783 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095943776 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09218134 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117960622 seconds)
  done (took 7.770840586 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113624115 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098385949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109118485 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092882724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09055719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089494432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114343642 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091809396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090603774 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115459262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090144876 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091051091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10901285 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092667705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091106145 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089880153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114544396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09004015 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089564225 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110008893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091621245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094703652 seconds)
  done (took 2.969483433 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238968273 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098485266 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139947904 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122669488 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108246344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122294096 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095351734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095311806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113356855 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10023498 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098500546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114048897 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109509557 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098308772 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11902135 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102069051 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113686068 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102369162 seconds)
  done (took 2.904876346 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103322574 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093117454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154082606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092527778 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091677069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112227066 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09815658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111181677 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112227374 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09343578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098595387 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110526686 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093019573 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092173587 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111395427 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093091151 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093070288 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091963233 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117178876 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098505023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096995409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118336429 seconds)
  done (took 3.090263067 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106582563 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092941378 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129083755 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097350138 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091619426 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091678772 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11753257 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092675298 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099540921 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112344081 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092192394 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091085513 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125127883 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093689387 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097795709 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111285101 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092673433 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093223575 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112273633 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093735491 seconds)
  done (took 2.847658607 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194315219 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126509596 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108198943 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115505006 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128408588 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109607594 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13632066 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109250936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106889554 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137746653 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111455086 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106424149 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136122565 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11401533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12608178 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117186703 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115572864 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135536698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108234731 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125203711 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121115807 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108150944 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135358149 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108345547 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108424074 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12700731 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107378668 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131266608 seconds)
  done (took 4.230786604 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092270815 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09043571 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089683823 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108899855 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091809954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089903332 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089226991 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110305178 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091133051 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089874433 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110334968 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092471812 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090159078 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090337002 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109422529 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09243988 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090463448 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108151456 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092618077 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091169787 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090308476 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11029795 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092202254 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090650878 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089388551 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.111202196 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09255506 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090147523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109922152 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092429149 seconds)
  done (took 3.695852936 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105296089 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101882104 seconds)
  done (took 1.027302098 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099653685 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10468981 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090066849 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11179805 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097268289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091324274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118024918 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097919278 seconds)
  done (took 1.630267848 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16515095 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.190102131 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096113878 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122212836 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169873817 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182975136 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129965737 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117783656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091939423 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083684493 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184230127 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082731899 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111527536 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090515973 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090398296 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118652883 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092914403 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100826819 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119382411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09542948 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097005272 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115221958 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096505204 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102298853 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107046599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096899813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094656442 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121910408 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091010105 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093844106 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108772819 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092825836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09596616 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095160305 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.113104919 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169637139 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121068824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089182652 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091738132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119772706 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125797867 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093133466 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114642232 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091647029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093966123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116151754 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098187927 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091606475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10530526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0889715 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093167881 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106806694 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093076113 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092714278 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091969979 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119091572 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095495151 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087861373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108689059 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089633834 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090595138 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107764614 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095147861 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093912495 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11321934 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093804219 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091209335 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.113037453 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095797788 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093142332 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110090902 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108483406 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093192344 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115238276 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09812706 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093700508 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109577017 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098844478 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091017738 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112066314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096680778 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121367938 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093271537 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110010069 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088180165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097871475 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113282787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095485124 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085196382 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119677225 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095447404 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093090836 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105208586 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091624749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088481721 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116066466 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086937091 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092789195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090583699 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11674689 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098041832 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090418396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11303057 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098000782 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096484436 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111192205 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156920199 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109401756 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089775738 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09462762 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117504185 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087159556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092118793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091604014 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110406649 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088615547 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095812228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111288663 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095209279 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096569884 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114629886 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09723837 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093450844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.111787691 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090556347 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097538461 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099701878 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114937422 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09449201 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09269061 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113552751 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094383985 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096153916 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109410907 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098232635 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089854801 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.11154718 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095093827 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096995812 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111745494 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089629582 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091613674 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112475871 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092994717 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095616416 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092904245 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10892027 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085660143 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092865443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107807285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095284682 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10095393 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109137319 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096201823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089061235 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119598006 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090630448 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09693082 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114224216 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100182668 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098386319 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08517356 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110717021 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096848662 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093570656 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110306944 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095205733 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092519304 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118231277 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088574036 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095841493 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084063668 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.111336003 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098189952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09386167 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115424578 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088723865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130699899 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125414216 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098530201 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091719711 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112823544 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097058139 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091576512 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11660398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099323228 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09691033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109660935 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094103988 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09881915 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089143329 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.117129507 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093321802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094703771 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105604127 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095417844 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084839835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118356226 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095899673 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097505883 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118494219 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096672027 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092584684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121748833 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091118949 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097138264 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085465526 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.119815496 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103306142 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09904848 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119705805 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096063557 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092317893 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.11495829 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103556911 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09563607 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114567109 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097477737 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087656437 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086669231 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.12033702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097110253 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089003069 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.11490074 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098239571 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095501572 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111345753 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086937825 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0975844 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117381952 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100743453 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094292338 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10956213 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09401669 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100964137 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106812825 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091406268 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095728314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098638968 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.115394234 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094974811 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095887509 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119950056 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098429336 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095032127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111494355 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102492034 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091810638 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093501541 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110990873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096496801 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0868041 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115192324 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094328595 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090200132 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110227357 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098283832 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100896958 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119463377 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094055154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097445377 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.128143464 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100890009 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092885512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099031529 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110344956 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087235301 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089783023 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107163979 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097115044 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089949254 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118169901 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093520586 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092930475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.11680017 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097189826 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09113577 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119205349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105823613 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088199345 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107116815 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094282943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093481247 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109034876 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092135188 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096123065 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095150395 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118961771 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096762089 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090433087 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115239611 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100898692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090644572 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11961392 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101375077 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099323581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108939644 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099857922 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091655811 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096938712 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109637897 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094051491 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093090617 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114642841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092970829 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091981421 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111414252 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088290935 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090057467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119670024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093778102 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09769873 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112832748 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094045145 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09104801 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11049829 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102146825 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092876481 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100954216 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116709441 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088552341 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087797846 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119677975 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096458999 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099441536 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110227346 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098804073 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099487322 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097764256 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.11611809 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103606592 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101705545 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121077679 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100038499 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087469207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113316351 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098823883 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093954692 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117013412 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097177038 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08884799 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116354597 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101925213 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09557178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092118827 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.1092109 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095370069 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100225682 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117824519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099096332 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096650271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115164597 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09127917 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098052453 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099162528 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115971639 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100637009 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093679951 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119206055 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091276404 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099928922 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116381339 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09065646 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087818613 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112443456 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102684665 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087812674 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098060532 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120514726 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091886849 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092113031 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.11981197 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092063057 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097573314 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120247168 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094340901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103784813 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11577308 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094153413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098872843 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098698708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109796874 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093325299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092726703 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122378025 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093412899 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0999155 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115004901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100357348 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097685676 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119775286 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101153575 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100918794 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088101685 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122970678 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097803037 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097009705 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113141524 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094421989 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089232624 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113646589 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102142673 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091229787 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123444986 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101985492 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092393691 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111930826 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102228921 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093543969 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102191026 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112737035 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09765899 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087649041 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118907903 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093912962 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099872208 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111439907 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090088641 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09985627 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.119480282 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10117219 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096619706 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101164895 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.111217679 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088437492 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09662068 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112523887 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105331475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097542735 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113677857 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094561713 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096443137 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115869006 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103281577 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090213013 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091653383 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116984502 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096671723 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092462776 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111705451 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098589036 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093804829 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118108038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094127935 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089423792 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115104897 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102151963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093907349 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111391862 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093900865 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102627334 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113248189 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093054235 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089214595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099960297 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119086668 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101516252 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09132968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117192306 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092214494 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097218826 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123529893 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093327772 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094827177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115657858 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100519994 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099693804 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108783645 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093815804 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105431467 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12027685 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097782938 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098333933 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093444891 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125296097 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101536347 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098114892 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110265662 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090997901 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092994891 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110066354 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098915075 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100812679 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114674177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094374624 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10027876 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098531845 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.12029183 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097869783 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089286491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12351186 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09291603 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097750783 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110166115 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090380139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097901865 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099802587 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117909619 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096080577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095768076 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120223321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09006112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092756129 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120261969 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10104876 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101115212 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115358379 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096326899 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101840676 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105864562 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.119082742 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095762416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101651189 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123833737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096073005 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094259171 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121672957 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101557723 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098099966 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123162726 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094102664 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094225967 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123532303 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104699223 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10376103 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116130413 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090883471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099678254 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113713832 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091606254 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099054149 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102959586 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.124777391 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095478435 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091887539 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126935288 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101377384 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096107207 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115758749 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094456113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099848568 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11462963 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100343561 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092837036 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123869281 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103456788 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101191362 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104412416 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.11293632 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101240325 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096928154 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126023673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098206567 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089869599 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112455842 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100416363 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102655925 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124040526 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101258476 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099689421 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100090852 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118078972 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09628663 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092392417 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123963267 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101282419 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096426566 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118138251 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09673957 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096491947 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097513974 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123612381 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103663731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096341075 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127540494 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103272042 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09469693 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115049771 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097526301 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097656086 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118001407 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10140813 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094648336 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111485427 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102738224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10261388 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094724777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125812639 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103829645 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094501273 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121251255 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104583717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100766687 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118914121 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0984798 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098875855 seconds)
  done (took 62.148416015 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145363073 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104292053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119728866 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098756303 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114516053 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122104195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098404498 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099890983 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119771888 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10791502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097460535 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118226863 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113221093 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118189508 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13730933 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106923358 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117899807 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101342984 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098913603 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098155341 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134718889 seconds)
  done (took 3.24676167 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116832313 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110552216 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129542952 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111853483 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104269047 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132001802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109246673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129045788 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112475497 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104558875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1340242 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108673008 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126221207 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10763516 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105845681 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128054154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111992496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105054908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131449703 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109481568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105514091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130441169 seconds)
  done (took 3.435419319 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128645871 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100548966 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095386352 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120035141 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102952243 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097453629 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122624003 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100726093 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107048746 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092294782 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112105095 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09434868 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096555074 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119775943 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093379485 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098604476 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128352389 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101956386 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102712616 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097342416 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111711681 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098289666 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098941385 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110178938 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105408201 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10296811 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09777516 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123565807 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089840107 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101137598 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.1209794 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093357291 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089069471 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088666197 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111337355 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102032554 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101367479 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119534819 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100374597 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089211465 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098434426 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125552754 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090220379 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098978434 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120015259 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093039286 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101563924 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119752956 seconds)
  done (took 5.891958957 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127599126 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.419821242 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103889603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135414613 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136191674 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107813942 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100004194 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137279087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100202995 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123813183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115222708 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110483633 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126430399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1055194 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103048465 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125431493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103305179 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100137042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128162062 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101125525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105225006 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125870825 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11050152 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131191452 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105355609 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101054321 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122418459 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107884234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110201612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128011653 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105137348 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105340851 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133931748 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102508612 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100300441 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125592923 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113514583 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101762651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125002329 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100235484 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102457967 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126646771 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105170326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.111874177 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12589656 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103619392 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101684658 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.12146879 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110215094 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10151937 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130162431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111155054 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125595327 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10434732 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105262823 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133194652 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103247337 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101168426 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125982147 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111054447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100704452 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128033644 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11247669 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102794864 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130357868 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113402922 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124207291 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106591185 seconds)
  done (took 9.062234619 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133219585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105571958 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135719825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114452789 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104154128 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128458196 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106964427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105378505 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128906919 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111790021 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126296667 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225002395 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127075676 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112461141 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104763751 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.13065675 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107222971 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106691013 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130343223 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106273663 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10569497 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.137133971 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105601064 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136310963 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117768651 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102115797 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128414329 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106075429 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135978002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108102115 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117898273 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12728305 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107411317 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114402839 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.143179156 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106855353 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10052971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13002316 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107348189 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106821338 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12700662 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114720694 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127918831 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104382276 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105892896 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126842356 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116272394 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116111366 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133175872 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112435529 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127696763 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11615428 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10702463 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129739694 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115938432 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120709556 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138137812 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114483203 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128486568 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115376018 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114999908 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142853782 seconds)
  done (took 8.338273239 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100761615 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100101756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098974679 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121781881 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101085734 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099987385 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098881955 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123049655 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100319107 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100112186 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121679932 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101427391 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100094145 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098568783 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122696722 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100510224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09969647 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120678953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101612644 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099686148 seconds)
  done (took 2.999320492 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111052011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116360949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122710427 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110110762 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101721676 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129101862 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104048683 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101785083 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101091653 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125624941 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109671807 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109296915 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125396396 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106539294 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131695085 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108974665 seconds)
  done (took 2.705776548 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119736544 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116529403 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211271481 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103222609 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125556412 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108805401 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102217709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128247387 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102003494 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106729361 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128740849 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105876325 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102471499 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102200114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12613588 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10539879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100080845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128104027 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103544447 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216751112 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106133998 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103616606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127147794 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105556821 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102866234 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130429504 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1089764 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101272053 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125442643 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103805934 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103978287 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130688132 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102900213 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10696012 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102509163 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125994841 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103604761 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101858534 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127412095 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102803137 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104147603 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126004679 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103215531 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105541179 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123141333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104250836 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101178628 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107496877 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.127823446 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10426586 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103273539 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129935903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107652438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108973001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131569996 seconds)
  done (took 7.250025937 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114497526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103959642 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134541027 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101638417 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103329491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103395834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12797357 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104786446 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103879326 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124601002 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105309081 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104045197 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125637556 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10484331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104700609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124587283 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10331783 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104607297 seconds)
  done (took 2.894005662 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108593009 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103122817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106010998 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12649109 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102467189 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102961864 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124010075 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102603257 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101751278 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10156785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103136785 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100530949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126052201 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103284217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102434549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125893632 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104480844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102469256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100010401 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125419238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101791475 seconds)
  done (took 3.30096607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114274271 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21416144 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108901839 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.222395545 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100167247 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097060753 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.135311421 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100933761 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137861467 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099983957 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098894051 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120972192 seconds)
  done (took 2.450756378 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130574726 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139069685 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127151643 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104765681 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111573052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130197638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108439206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107179592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139196652 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118759948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130035299 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116743654 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114900197 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13800561 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11270018 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133458007 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108959256 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108391252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12533826 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123784212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106390704 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13807823 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108854169 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107016361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129725174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11580268 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138185248 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121373181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107476655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138572139 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112598432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106993874 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137682556 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117955726 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126199866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117400201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108694637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144525711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1121005 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137082418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105137209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110962088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138290954 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113537388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114849369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130543022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112498597 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129369873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109700836 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128296684 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135503232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116449809 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134292891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117000844 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115782184 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150899798 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118457862 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138894662 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112617985 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141178288 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117598756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111803985 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137487026 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119308037 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133989706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116503616 seconds)
  done (took 8.971864308 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14280448 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104631447 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130191772 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120561233 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115692257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131971983 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110282996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129633901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10995985 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105045686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173643144 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108445444 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115876351 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138670124 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108955101 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129992565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1100971 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115379917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127886687 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128455426 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107787802 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138926843 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116425337 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138385605 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119790642 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134686964 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108773493 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107960286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129849011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10977703 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113427531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130053239 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116584713 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105277376 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139320957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108761524 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107820185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138866438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108778805 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133629079 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11773522 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122011331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131440726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109001523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142061657 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110554006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108786338 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106521965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13161254 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106525079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141277201 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120392691 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118709523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140257348 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108122493 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129973607 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109510967 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109253602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13116805 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113323246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115777004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131928829 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130034671 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132165468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109975209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115673582 seconds)
  done (took 8.925143124 seconds)
done (took 169.479019328 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175064572 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.214389226 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197926668 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157547855 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094834617 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153599539 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128563379 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197143429 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095942081 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094254748 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093915558 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121650684 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162209151 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093545159 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119087385 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098734121 seconds)
  done (took 3.100005703 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184958749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333810791 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110006253 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12256525 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102362499 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099117208 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123185734 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102415128 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099412782 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13043169 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100437719 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096557036 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129129674 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098023486 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099602883 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121566094 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107318881 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099194851 seconds)
  done (took 3.176283867 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119648806 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162320122 seconds)
  done (took 1.19732348 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130951635 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215094089 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285216766 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171633436 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120495623 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142889452 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149539255 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134245041 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189677265 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135532621 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112438111 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097561245 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149382926 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105625488 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115633244 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127233294 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136544403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115667973 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102664528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144634663 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104550833 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105192576 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136227788 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18094315 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133828199 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103625091 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102600028 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124024704 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113442714 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105567471 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141656007 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111655084 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1803203 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103761438 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176629927 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105806101 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123686963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114296323 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099293137 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12627015 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104634911 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113770256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121749882 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102960416 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107253599 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12711773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10254706 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130021801 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109150603 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107302842 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130227672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151112327 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130681438 seconds)
  done (took 7.953833251 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.869697813 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139270839 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098476957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.018727651 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145774895 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113157947 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.865428456 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146602024 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249881241 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.891143442 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116000343 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107368892 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260411129 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257378434 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.286892454 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359222454 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.699422326 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135709478 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128784249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162841514 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108092859 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145423489 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120780836 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515429531 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101099347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100141696 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131870789 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108678184 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178089479 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100577172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102686405 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194491813 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291141147 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211196139 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100907619 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121973056 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100168731 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183356342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271402799 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219547837 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172704957 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120690394 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100756621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106746337 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142219807 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096969736 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178442355 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189205061 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165760869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126363257 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109228524 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109568766 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130449781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174018193 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098463836 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357543613 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359674784 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122230632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109861645 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111944439 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265190413 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124979375 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234450472 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126614785 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214693442 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121893122 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834292281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160868016 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122250941 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105406847 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106823023 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131372004 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107370271 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188869204 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475295898 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134252932 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105175521 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098469948 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232425146 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124226741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101148606 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178413242 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102144583 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109283753 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134623157 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109564334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189169988 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269453744 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111279269 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108533176 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128742986 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113927525 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100880612 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233530547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226673563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175789445 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227366667 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108217992 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178364037 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182646997 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106739965 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188557849 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108137007 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111989863 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131184995 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223092081 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153492077 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103863653 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105811606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131913028 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1364285 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104066167 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132546252 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184731743 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.530660174 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183175813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098512038 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129371275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110004374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180411088 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108920608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261216173 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132020721 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162767947 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130926234 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098484054 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108487437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178355855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108885815 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134717402 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106516303 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133877991 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256624377 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221415992 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13352446 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250556523 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17647736 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130200662 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165994482 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133941265 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18747938 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112442143 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107780789 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124783951 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821910717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114748232 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108261894 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128958701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181260005 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12490779 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103549421 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10064297 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121418219 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812342638 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109217906 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098084342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101263276 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130230921 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108415884 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130958895 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106792715 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176795641 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242616962 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109469435 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132279328 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102465137 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178574218 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10207372 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100684508 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123618082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102576319 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110111405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129052555 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105201053 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189489035 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152308076 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.250413179 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.651792842 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10207394 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100580698 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239188111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125058622 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327532186 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109446123 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232882674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18232784 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09822758 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381695523 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.159829768 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20615162 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105026565 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189999984 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098784908 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132648512 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154467871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125172563 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108368077 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175880306 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113618319 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109799836 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.301974484 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102096401 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250436582 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098770851 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189177824 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10275114 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105369838 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346031204 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102117489 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11562598 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178264589 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105115362 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124747357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.63577607 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102520025 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112758203 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130614287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233703382 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181010029 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113112425 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110859639 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133349406 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154025394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228891793 seconds)
  done (took 47.594311033 seconds)
done (took 63.934283978 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270123161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178500119 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28310107 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17928484 seconds)
  done (took 1.919852819 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271749014 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163088497 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.258064195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097736979 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.264081447 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098851735 seconds)
  done (took 2.095269243 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.183605063 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170885943 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147732529 seconds)
  done (took 1.448157308 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201946652 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.218081986 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330416811 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236236462 seconds)
  done (took 2.01437675 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297520764 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119586218 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124696638 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237812594 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256098675 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212600621 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123975644 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179545915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128813825 seconds)
  done (took 2.668926483 seconds)
done (took 11.086900816 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.410962013 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.390542055 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.402736557 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.385218728 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.255416277 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.253775077 seconds)
    (7/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.177639126 seconds)
    (8/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.310664697 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.242618193 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114085815 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.356252275 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.25321543 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.203880674 seconds)
    (14/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.275397486 seconds)
    (15/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.133263911 seconds)
    (16/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128360724 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.422334265 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.260152829 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154852334 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122525285 seconds)
    (21/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.135139594 seconds)
    (22/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136750328 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.273801664 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209531736 seconds)
    (25/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107013787 seconds)
    (26/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.185650823 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.134946971 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.199844056 seconds)
    (29/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135005335 seconds)
    (30/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.15210175 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081383238 seconds)
    (32/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.234666754 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.30571144 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111805136 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.156453499 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166424006 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121488536 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199792828 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196590329 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.163555792 seconds)
    (41/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.182771667 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111152203 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08479132 seconds)
    (44/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125501204 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103252408 seconds)
    (46/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.181457779 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135497501 seconds)
    (48/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174940204 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.143227589 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105172248 seconds)
    (51/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.346786918 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111412273 seconds)
    (53/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.130779679 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144091908 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134656262 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117079559 seconds)
    (57/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.108373004 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.196889261 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.219540323 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.133929239 seconds)
    (61/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082087697 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110352933 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.131861943 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111033673 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086023928 seconds)
    (66/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08179319 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.154714545 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114622884 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086270965 seconds)
    (70/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.209230831 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104825608 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113377399 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128231077 seconds)
    (74/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.144169955 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124448591 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078603898 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.106624602 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12337205 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103814479 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.23549213 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089467483 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106582156 seconds)
    (83/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.303317151 seconds)
    (84/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.079964558 seconds)
    (85/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.176774008 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110855637 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086333259 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101193495 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.149839502 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107910695 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103298612 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149836591 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117443363 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08628873 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.144175611 seconds)
    (96/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156521076 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103020624 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157630078 seconds)
    (99/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083062258 seconds)
    (100/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.177315599 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.169157509 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102787373 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110282973 seconds)
    (104/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084365852 seconds)
    (105/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.173477971 seconds)
    (106/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080514638 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127687518 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.136599406 seconds)
    (109/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.137891055 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104607062 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085980821 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128095244 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082905762 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086705513 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084907992 seconds)
    (116/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080124881 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.132082412 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086890643 seconds)
    (119/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085685951 seconds)
    (120/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079210192 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.117080673 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.13372175 seconds)
    (123/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086133996 seconds)
    (124/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.14350925 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103435174 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110475948 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079362677 seconds)
    (128/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.145658162 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134757394 seconds)
    (130/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080660102 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083410869 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.148157015 seconds)
    (133/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.10673663 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105779016 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123808505 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148491033 seconds)
    (137/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148390983 seconds)
    (138/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104801928 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106329616 seconds)
    (140/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.138164227 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104565499 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111200943 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104022432 seconds)
    (144/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.081238893 seconds)
    (145/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081450816 seconds)
    (146/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088280659 seconds)
    (147/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080688143 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127968078 seconds)
    (149/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112217203 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087858551 seconds)
    (151/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109522093 seconds)
    (152/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111249792 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106163036 seconds)
    (154/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081041121 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104186397 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105594012 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088081065 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104836161 seconds)
    (159/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088169109 seconds)
    (160/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126193256 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086614366 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102080798 seconds)
    (163/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079760258 seconds)
    (164/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.08032235 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.106655225 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105495224 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110542253 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127535969 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125567283 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086733822 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087447594 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.125725827 seconds)
    (173/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113717851 seconds)
    (174/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.144562355 seconds)
    (175/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082706531 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127956677 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087699235 seconds)
    (178/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080528023 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087646853 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127389279 seconds)
    (181/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084058119 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123484285 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087445168 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106032972 seconds)
    (185/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080864982 seconds)
    (186/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081451448 seconds)
    (187/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087788663 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081229248 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1058883 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084683622 seconds)
    (191/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080609709 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083960732 seconds)
  done (took 27.496492653 seconds)
done (took 28.445624432 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227728227 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132122962 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112859771 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1109982 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235787925 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119252555 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153359721 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114452278 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121115602 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137097318 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102701772 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124586423 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135825461 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205491404 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140492883 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105312972 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103155388 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147703244 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128928639 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126931239 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235944549 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10432954 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148011331 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104063025 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235234099 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105969627 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111830406 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.138381403 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126226577 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112326772 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138545976 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104666102 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127200493 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152524077 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103912981 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113107013 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10354416 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111576243 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114720984 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113637548 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148647352 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113958871 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111482219 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.128942918 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115125705 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111609868 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102857344 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.141407973 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10198168 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112517601 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131950152 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128942269 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112305115 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12623077 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102814007 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103286625 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146949526 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105115444 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125273018 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127366397 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10518505 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103562141 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113199007 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128440428 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112600844 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103020539 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136821681 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116667573 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110938204 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128958532 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104318854 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110926906 seconds)
done (took 10.151654015 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107996989 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14803416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234215616 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237281852 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131281031 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146941174 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118528416 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126870127 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142110485 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123637751 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138946008 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160416587 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.239245751 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119876383 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119426317 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141385245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115600975 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111114864 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238169912 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127277737 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155413503 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118788749 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155808343 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121894341 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108165488 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156590133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11099767 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116353079 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132374784 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126994225 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127986078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132057163 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11075855 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126777592 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150947528 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119080026 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119070699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140282398 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108702237 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107520796 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143602227 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123700074 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107224488 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145270914 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116749939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122299295 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139718891 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12126583 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108599955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140490911 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11015277 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131826397 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143702025 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124793862 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11912031 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144733367 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122177525 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119410411 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136418126 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120628566 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107801043 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133092662 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110131883 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129064802 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136588316 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12074431 seconds)
  done (took 9.835159354 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127282795 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136815476 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14275036 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119858504 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111427989 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126366529 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101708441 seconds)
  done (took 1.861598679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104508327 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244336292 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21752925 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244178732 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244201182 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256070243 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12584023 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.128596442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139588637 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113839761 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246087091 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273886509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113555944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145552748 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.220855795 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130608771 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.248032972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103858016 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118575182 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248460299 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120324102 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161076357 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117279771 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103769851 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.240867568 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104586557 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293956125 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148258753 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112637658 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117193123 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146716024 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182941461 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242627193 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117448518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139422689 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.243642577 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.215101087 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144965332 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.230544221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135474079 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242915985 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11861635 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119725594 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144434485 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119981465 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233364721 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122552826 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119507543 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.146065446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225214553 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141711474 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216573676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143438331 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118638252 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113580946 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146656836 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125922178 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119175239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.25250241 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147231698 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.219052076 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246237561 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.24483824 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248071776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128635393 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248680783 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.232891163 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118326855 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112800528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14633871 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.221505282 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.144603762 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116298013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238261456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121396536 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.250724478 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250774772 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117077126 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116528382 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134495994 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118095839 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104070373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.24103773 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117673757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142677329 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123034758 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116360969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146203522 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109727033 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127528389 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.146013348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116639695 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123401262 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.145377755 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121174103 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.252555754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114612512 seconds)
  done (took 17.127974756 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106996189 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106132085 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109337221 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132097346 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106774443 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105870653 seconds)
  done (took 1.695675215 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142247976 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11976519 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152881625 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120949811 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166423775 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252707016 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261731122 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112049806 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165429172 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130744117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254212985 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258114889 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228231959 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.149958446 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260538324 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12062752 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262582697 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117419164 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127740761 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144285456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120410417 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122901001 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144044662 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.265034132 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120731087 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121148613 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140073772 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129220337 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125721361 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140687424 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123194751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119100106 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138251729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114161575 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260583814 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110913479 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142259562 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122481639 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121507902 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146433059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232804445 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145067749 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125903605 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121285457 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141014387 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111649752 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121263058 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140321142 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.26047234 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122861676 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120750172 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.148457574 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12097348 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122145481 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139248726 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114091892 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121859267 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260679669 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123015669 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140638218 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119659633 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118943707 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142195671 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122970061 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14572461 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122623751 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111133627 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14689649 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117887541 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120343721 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146590249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120314047 seconds)
  done (took 11.871615792 seconds)
done (took 43.384334373 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.764985243 seconds)
  done (took 2.784578187 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.976251268 seconds)
  done (took 1.995091882 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.646980361 seconds)
  done (took 19.700317963 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.440430138 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494931668 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.130506611 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148918032 seconds)
  done (took 3.23692201 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.845072407 seconds)
  done (took 1.892633675 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301255244 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266247309 seconds)
  done (took 1.595561111 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733031331 seconds)
  done (took 1.773309659 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.53483342 seconds)
  done (took 2.562510799 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.289965892 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244988695 seconds)
  done (took 1.57969793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.647711921 seconds)
  done (took 1.692427242 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.569454606 seconds)
  done (took 21.618173052 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260932415 seconds)
  done (took 1.304460115 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284895906 seconds)
  done (took 1.333227206 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.697315 seconds)
  done (took 4.745911607 seconds)
done (took 68.851354254 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116057879 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118261414 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118479577 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142830334 seconds)
  done (took 1.530033154 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125450419 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119684025 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149999426 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120101749 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126459633 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121855103 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145459882 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122847295 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118359437 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147839185 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120684434 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11823122 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149191958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119149165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116908422 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14927782 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123975398 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119121418 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147242533 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120774419 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120808716 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147782159 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123229388 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121290624 seconds)
  done (took 4.144767225 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116486647 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109767279 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111923782 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135528514 seconds)
  done (took 1.523159665 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12846387 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131874786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155467767 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126477059 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131504222 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155547718 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118231478 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116406863 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145105119 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128564737 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134084771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159154485 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131052125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146992154 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130419341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113633769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119199989 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15799281 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126790608 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154627842 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1207094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125198374 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150789859 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130740992 seconds)
  done (took 4.284626091 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194300307 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131274683 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177629077 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164938076 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180761281 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117365051 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147125393 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152953466 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126670793 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120926362 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148313374 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165956638 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151629778 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122059012 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120332918 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152583898 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132319121 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124337599 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193641315 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123930234 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153679247 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133391834 seconds)
  done (took 4.288802655 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123396761 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110337379 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106777852 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137486985 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122589109 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.11265013 seconds)
  done (took 1.768637531 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11037417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103994411 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105204889 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130583345 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109002103 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103352476 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102994085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130888684 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104619565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104218713 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130818859 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104319844 seconds)
  done (took 2.395603815 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205553115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148020461 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258226477 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.435977115 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165036554 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189906271 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287063517 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190927661 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205804058 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138901831 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215764091 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16404372 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18123255 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187045487 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167859216 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.16028868 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193493695 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207638057 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172556966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243190641 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158129309 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209184575 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190669999 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179681732 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140834983 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191818991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12002487 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128550687 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197931617 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193984764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176154351 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178447103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143818972 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221359094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261414583 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205668781 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272702966 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133963761 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199646148 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191515264 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263186396 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169100409 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192927053 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181725126 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128471828 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215052078 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153124128 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210666778 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134255301 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173322688 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21382113 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181294749 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199985757 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136964423 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329012115 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134593538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170938293 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179691624 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21632702 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232602333 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203644027 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123651995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203047133 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191592919 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242807332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16867929 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165638891 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124851576 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192470994 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235692938 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181952174 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188483127 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240064982 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130433904 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199904266 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168450611 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183942992 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235254585 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171153989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147719937 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151996769 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160379768 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127672027 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189516693 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149343378 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215716875 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159938811 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342192348 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179792163 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184465276 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161655438 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190542344 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19014472 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149518794 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10203131 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17235463 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161316297 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186798414 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128440589 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181315657 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141612772 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12575984 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181816724 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123638515 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197486096 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135056992 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191504886 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170676106 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15949921 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182316135 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177079127 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161656246 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197662493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191894818 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159371638 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132102877 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246170512 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195316848 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138833547 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201896619 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197163896 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178155155 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137212986 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193703871 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191646396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170955715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227049024 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139458282 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134144966 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168935018 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197025022 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160598658 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185771798 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128140579 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16274744 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22027351 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153705714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141265404 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209616241 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132710064 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124475933 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164578098 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136412052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169881491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148902677 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138301154 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182973421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166251886 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194451412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185611048 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136908851 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199841206 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130796437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166978541 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178279801 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119313317 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203358243 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223168557 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130609135 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207640603 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163279139 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210009364 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171086443 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157254742 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211236225 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128467532 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120241677 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191714909 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168852305 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192402954 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21504812 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180012664 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194567988 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190730341 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149741382 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197887887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183910125 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184947506 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142387826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20185743 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169090769 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149145042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123449691 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126324791 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166383329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133303694 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165164919 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181847375 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193158443 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204890105 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16850342 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166120303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19045948 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153060807 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16154481 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203110966 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138629809 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218176232 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188711764 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207231575 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167013905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163726152 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119392981 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15431694 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134249331 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190768111 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137586573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134391822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170243565 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218097787 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172809185 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176312227 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218845526 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166680147 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230299373 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120343945 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190207254 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169662383 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196495432 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18656598 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133664756 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187864988 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22139048 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141733821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221167419 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16731819 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207698243 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22553531 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164192745 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158848992 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148104455 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187939442 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13853144 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160845733 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174882328 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129282691 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181197383 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138394358 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167299445 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187197654 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173595215 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177612071 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18846911 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202485405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126157519 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141592869 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202307927 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144423594 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.13538123 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170888317 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223297161 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177793649 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158108507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204528857 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131054776 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314922729 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213703343 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209034229 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134164979 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167556311 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171649308 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1906051 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16253427 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212652415 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140663746 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237064508 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197925303 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141916515 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129975083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176778703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151959186 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169409658 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15608397 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191949864 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144396824 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216749744 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1362593 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200509043 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206090021 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147726908 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149437138 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16771277 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2558128 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168448816 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203270203 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162509458 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194517145 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182876968 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152302492 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12674569 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131291064 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216182654 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128084694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206700797 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193741186 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209660366 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173769192 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192196687 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14067455 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125352142 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195069123 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147402257 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214914202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163862475 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137065107 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221566249 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129889968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130378717 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191683716 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314678353 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14714392 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202492116 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106842793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309591308 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129465643 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130503654 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191305461 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198690453 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133088181 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184360462 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202696197 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141235145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191930926 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134108369 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208116381 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21030014 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167476574 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205074542 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146193714 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192406946 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160158648 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205557964 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145170125 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176765929 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158558329 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224332058 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206563637 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132999763 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196686633 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171170806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198305743 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174039132 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169018191 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183203476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155485089 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164937338 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165719211 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12507578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159792606 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194995064 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15727375 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177636778 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201170464 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130676677 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126897271 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176826976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166690123 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170368264 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129894434 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217266655 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128665395 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212409504 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239641407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13009782 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168862098 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175188723 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129295702 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167111861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142874086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1307115 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201887461 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181638779 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158612464 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176973214 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194366404 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192951945 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157734206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170999301 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26497535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127378359 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22091237 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151100949 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226644032 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179759271 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175519448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19927762 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152363304 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195699849 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148624243 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249013973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166552311 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.196022123 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130646387 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173934096 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13927283 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133094214 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18224962 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167596644 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1727316 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13521511 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196460707 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14448277 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177718347 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14135785 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229800721 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150445346 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218335621 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215834802 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139879732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20158241 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176291163 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157070093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16505402 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201935205 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144044934 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184033557 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13424084 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136348674 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244653438 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125455738 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19086682 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173016496 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198671365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199471722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135489885 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204419019 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141591484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20268361 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128320267 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151867191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19886208 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134455791 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155587299 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172091907 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190966364 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163758289 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170743923 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176783103 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22335239 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124695834 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133836041 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318505774 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190200896 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195438856 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166187269 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137462156 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146562941 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18970122 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164617558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202860106 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130084157 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159714673 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14491366 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18379994 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144016518 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195291209 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182796584 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190880779 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185920051 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165047901 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253628138 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172287055 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171409411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117829907 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158666853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140408796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135554696 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172939819 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210300745 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243663989 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164295609 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147962112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166297681 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127036791 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130064875 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193046332 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.835183559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20545931 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176139272 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105524308 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141483619 seconds)
  done (took 86.500887979 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213264289 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175893318 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.201959674 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243809835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2258161 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311851076 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.290409481 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.303553111 seconds)
  done (took 3.111920047 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121342826 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160592161 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141201712 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145257884 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110369969 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.486553996 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160358433 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122071283 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161536117 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154456973 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136597189 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.575074202 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116211661 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146515469 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123346972 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136373951 seconds)
  done (took 4.137983408 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.798200044 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548945608 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.150221452 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.282439263 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.26654214 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.206236589 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.804591238 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204018754 seconds)
  done (took 12.401596118 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.167764162 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163583755 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.453471862 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309473335 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184822045 seconds)
  done (took 2.426145981 seconds)
done (took 129.550524109 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125790598 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125408294 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12458926 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156877026 seconds)
  done (took 1.66939649 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197283493 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093078342 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095028193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121307796 seconds)
  done (took 1.652270422 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.478603838 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093201799 seconds)
  done (took 1.746852715 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156483392 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137128314 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169913892 seconds)
  done (took 1.625313809 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136533584 seconds)
  done (took 1.288874982 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129897875 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129559253 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27264784 seconds)
  done (took 1.68650532 seconds)
done (took 10.825317447 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122580266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.929830213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436423123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135392925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.7140439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430014286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.437666249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177143811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175381108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138876782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133901757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691661096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.45204442 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879506861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.41039121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910482903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6968519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113678332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148041637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114120669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.420739112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138434105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113846678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113322571 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720062032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422688951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111033136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.921721684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111305501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115603057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428069857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112286769 seconds)
  done (took 21.121725856 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113969536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170264697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148204225 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113353122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115818625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142267069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12412986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122977948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205728438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111193198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162763757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112646791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117295646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139265836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138435854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111568003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113390245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145260081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120778367 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113568632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163514277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110751056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112936515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143046917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111848164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133840377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141473294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124397537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111477117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145528992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117572195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111738458 seconds)
  done (took 5.332352154 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16134051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180369982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150654405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149954869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190536322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114532041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229008539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151638952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208394729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113302036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134519702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139809376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154236276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113340032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166893457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112238771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115726644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144302986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121242508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114073382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162838536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112462575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113168407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143949862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112678122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135360434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141320976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126704843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110840244 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145270031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118142017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112623857 seconds)
  done (took 5.665646986 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126734869 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126353186 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134236289 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165466388 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121224086 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126079047 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156133629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121777811 seconds)
  done (took 2.244908291 seconds)
done (took 35.524314392 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138043664 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131924189 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133326976 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157503589 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.226289927 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.152558976 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129563612 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119557054 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158723864 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133806875 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111864536 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.15007616 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133057006 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123385789 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.25883595 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12715316 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.263866732 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260399704 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.124318975 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126299671 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.151522103 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234358039 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156488252 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121455812 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250624454 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115602279 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251897928 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123128118 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123750987 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11322933 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.260465581 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124018873 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.154334575 seconds)
  done (took 6.493754119 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242912324 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153817893 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122692589 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120175681 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122683388 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150804614 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246894299 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153647021 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120793969 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120016648 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151457494 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228047889 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159585941 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117148452 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123666955 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11165286 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280802409 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122698936 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145615715 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095672369 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115780948 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119666729 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.292038586 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14852937 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121757323 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120596575 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123266617 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157904988 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124142333 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123220235 seconds)
  done (took 5.711812872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128450814 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134734665 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139060493 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221610386 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150295684 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164258366 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140622837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135084014 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174504059 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115092563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129617545 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18261687 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131556926 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126095831 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1452449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133542996 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135991801 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145678464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124493975 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132509984 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164401283 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134147826 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136893556 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152538457 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11360392 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122668903 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153685874 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127166173 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123437198 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128052357 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.147899247 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11840377 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116602842 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179730561 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116665704 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157934136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14208496 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127632791 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157347653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150379495 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117969028 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116067478 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171839251 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170086543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145113194 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12897903 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126979445 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129399488 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144928515 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133587921 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15749697 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.146705828 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135521916 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113134698 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143700159 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123633828 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115095153 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149554949 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132377116 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11685167 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171356165 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122989304 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125845012 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.146553945 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127541473 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113558305 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112579278 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151242131 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140530533 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122383822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182383532 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114928858 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.1262864 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159343941 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127042762 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127232955 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144383908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127451971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126098728 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149772929 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129838236 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11698253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117189572 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1619387 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135420384 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127689264 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.156477838 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128802697 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118038163 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147217324 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133560924 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115410051 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151026146 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128352741 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114888377 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149002769 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128139872 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125396346 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111477865 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.173822134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118413992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113118075 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.170743304 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11962841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118758395 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155794285 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157400121 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11475752 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156839069 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128445045 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114185123 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15381107 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118463894 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114852199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163138105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132284111 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12215025 seconds)
  done (took 17.228453935 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359959056 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345800451 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187154474 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.433597572 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129212396 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.27697357 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.344241957 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.346716051 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114729682 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180709405 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176599666 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.31334861 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115912962 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.176422753 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349213647 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.40517617 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178224419 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150779531 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182087208 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129595644 seconds)
  done (took 6.085764395 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137054323 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15051989 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168145656 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143026595 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125112139 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163036297 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116129687 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135210811 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157463239 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125539152 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116885842 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161583042 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128852302 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130883897 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159886633 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148547334 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122087358 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150896674 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13820213 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120069766 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134157197 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141256652 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122880392 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16844742 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135052768 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125586643 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143463737 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122133183 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121686439 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123135398 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.152636471 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131974251 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151956719 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107318345 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126675058 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13054082 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.153315965 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118627022 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12085002 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148648815 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130695787 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128548752 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123344769 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131613098 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13629555 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111893218 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.130812612 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158436117 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10742148 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13492921 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158500727 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129813113 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121732527 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168048411 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122547775 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131772092 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156353967 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130157841 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11995547 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143353143 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115611009 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119025507 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12370197 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.160774209 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129191511 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134511694 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.16269857 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11624117 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120100445 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149362794 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120602471 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129458357 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167049343 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124348713 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121859911 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158031496 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124937133 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097065366 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123688378 seconds)
  done (took 11.855396175 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140738 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126002527 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133815253 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180719693 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129714422 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120418132 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156560657 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135122863 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129141846 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165051529 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130413375 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128651551 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167727247 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126296336 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125506437 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162219053 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128939408 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155869407 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164029714 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142485809 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129994854 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152135446 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127812251 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126796244 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175970311 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126458001 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141501499 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161253959 seconds)
  done (took 5.199247612 seconds)
done (took 53.742723612 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.332239809 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.530169558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.30327826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.299553297 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.351353835 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.333376494 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299646418 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.301039257 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.859708028 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.273466 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.298894774 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.298916407 seconds)
done (took 29.681059373 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.320894209 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.306470753 seconds)
    (2/2) benchmarking "String"...
    done (took 1.586233427 seconds)
  done (took 5.093304856 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.290704423 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.290241077 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.54265288 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.288343649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.291356303 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.291616171 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.295287362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.308088981 seconds)
  done (took 16.495802159 seconds)
done (took 27.392458085 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.36865483 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.658288582 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.601072595 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.2764684 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.289343716 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.29849815 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.293386301 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.360877034 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.300807012 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.277798897 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.726043065 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.635212708 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.311328791 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.764910411 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.270300211 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.299953799 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.306870461 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.666012686 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.292015903 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.326069583 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.267347464 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.274710573 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.315167652 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.302127008 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.301542759 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.297339644 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.272301165 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.290756177 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.647670894 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.336770878 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.327152492 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.294752322 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.276161118 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.306146068 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.289104851 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.292882507 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.597805225 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.306520893 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.282048233 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.311643764 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.605534552 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.321791252 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.293154113 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.322106947 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.276970879 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.347248227 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.274228566 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.434138011 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.319431675 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.308290694 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.360831955 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.744752051 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.314081598 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.314108938 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.304213331 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.638649882 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.318975281 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.412513309 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.330060608 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.317524614 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.292139807 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.308262634 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.333016597 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.309483781 seconds)
  done (took 150.901435621 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.29388163 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.301754181 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.300403075 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.345970273 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.298642301 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.298919626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.291933413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.295807599 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.30206895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.330419455 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.29898675 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.301549874 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.302075607 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.263666078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305332851 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.318022094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.310083055 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.295157912 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.325613449 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.296994213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.2988181 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.302948052 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.314717653 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.297638689 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.312716976 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.387856496 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.343166603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.311980209 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.312238776 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.294955708 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.297008375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.299454386 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.960198669 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.168083033 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.306334354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.336728806 seconds)
  done (took 83.812682942 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.294815288 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.298025788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298477843 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.330931141 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.299194985 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.916311015 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.922050481 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.363321142 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.357101009 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.837135139 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616218141 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.302027492 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.391053459 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.307063967 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29638278 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.31244813 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.321944155 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293360665 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.298579734 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.917835571 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.312552884 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.278840964 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.480736873 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.315609228 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333967842 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.692435729 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.298238986 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333300928 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.644251945 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.348659283 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300241609 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.688583876 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.816352678 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.416277177 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.301430372 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33433261 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.296843668 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.584101101 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.295668862 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.29673516 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.304310096 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.975745197 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.301378441 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.297756666 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.921470701 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.353564252 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.305800984 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.300680516 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300179578 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.362850097 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.143731443 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.300632131 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.297074514 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.300193778 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.300437767 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.297327587 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.334394674 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.359449662 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.39844243 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.301743926 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.302315665 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.302357593 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335139907 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.302497742 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.884081251 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300847953 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.751533471 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.364124238 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.403985894 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.921803803 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304365522 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398394554 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422792099 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.303503081 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.301413976 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.300198591 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.299836491 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.415275068 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.303011121 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.024803237 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.483759946 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.315179272 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.836141427 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.40772972 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.299221076 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.693484058 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.307759047 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.29873261 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.10570875 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402650188 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.303152518 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.302194983 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299570604 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.304005653 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.02271856 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.925728734 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.617218428 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.306317822 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.054611425 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.304453535 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.210445377 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.30162206 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.902663709 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.996886846 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.306116138 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.412338765 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.482430752 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.320368152 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.3093795 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.844847039 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.306972003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.360628657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.301333631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.703463835 seconds)
  done (took 387.291461117 seconds)
done (took 623.196110809 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.181176186 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.127539928 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.293130096 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.144803079 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.126202418 seconds)
  done (took 12.06688182 seconds)
done (took 13.265793834 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510276741 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511857489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372214553 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514256754 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344272696 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530085307 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493252908 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.323357602 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422152184 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.389229629 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42455467 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35909968 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.340334062 seconds)
  done (took 19.730204674 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607961486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.313169881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.368036536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57581543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.348110932 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.597802716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.642661482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.312872153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470085457 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323733922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326700924 seconds)
  done (took 19.0869165 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.648833537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.315346979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369773624 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584318552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35150921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608367813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.645691142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.313471049 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477384907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335449314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323631772 seconds)
  done (took 19.172137431 seconds)
done (took 59.188227236 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.343399052 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408999633 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.340816159 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.321860766 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.323923091 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.324194408 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.327179179 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.32355395 seconds)
  done (took 11.910265003 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.324488837 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.320778618 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320222243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.321244552 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.320398062 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.323823764 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.321087514 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.321410665 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.320431733 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.322820839 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.324251015 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.325185298 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.321916253 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.324071591 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.32214543 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.320925429 seconds)
  done (took 22.35351043 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.325572893 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.324036955 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.32001752 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.325716048 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.323439285 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.324427845 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.322475269 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.323465801 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.325302642 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.32081294 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.323756165 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.322549825 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.324058375 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.323544703 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.325683371 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.326866778 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.32323963 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.324725325 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.329742558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.322701721 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.328479881 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.325804651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.327227308 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.323702448 seconds)
  done (took 32.99078353 seconds)
done (took 68.458593952 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.319376267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.317082764 seconds)
  done (took 5.838714513 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.382133885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.380301051 seconds)
  done (took 3.964430908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.328232512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.323858126 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.326827814 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.32620434 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.322689342 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.322594327 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.323858916 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.327318203 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.325837152 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.327706341 seconds)
  done (took 14.460958554 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.328715282 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.325082739 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.330703347 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.325240849 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.327813803 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.328845161 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.328627776 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.328702964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.328764747 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.327821436 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.325452723 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.32729043 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.330640713 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.323054729 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.324534647 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.325034325 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.327092923 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.327345817 seconds)
  done (took 25.095862706 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.343122068 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.347099571 seconds)
  done (took 3.892001524 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.457618692 seconds)
    (2/7) benchmarking "second"...
    done (took 1.367236881 seconds)
    (3/7) benchmarking "month"...
    done (took 1.429691663 seconds)
    (4/7) benchmarking "year"...
    done (took 1.431978429 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.368074625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.3474324 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.370496501 seconds)
  done (took 10.974377836 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.31747668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.609593387 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.804231595 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.480674889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.311981552 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.324820733 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.292576399 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.330739661 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.332932928 seconds)
  done (took 15.009130689 seconds)
done (took 80.440429154 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.314689546 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.361813548 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.337350296 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.332155401 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.667577352 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.361474996 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.315281345 seconds)
done (took 16.901997088 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.306980659 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296926906 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.296109609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326584329 seconds)
  done (took 10.428225797 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.325321817 seconds)
    (2/2) benchmarking "read"...
    done (took 1.640182347 seconds)
  done (took 5.16836153 seconds)
done (took 16.802593231 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329039525 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.328077986 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.328783417 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.332474609 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.326583842 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.332843013 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.329281845 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.327827844 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.331498355 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.329693229 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.331452205 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.332492313 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.329577419 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331883168 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329695486 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327804823 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329681437 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.33025136 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331721558 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.330050032 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331327441 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333580786 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.334446425 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.333433049 seconds)
  done (took 33.135351152 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.330426842 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.330392656 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.328357081 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.331540982 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.330126591 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.330612571 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.331807277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.332899607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.333249265 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.335793098 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332401054 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.333996427 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.332357317 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.333799535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331175729 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.33412 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.333552551 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332032253 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33226352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.333605079 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.332236612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332654065 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.332927731 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33384667 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.332850417 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335559103 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.333216617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.329563457 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333090902 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.331073711 seconds)
  done (took 41.182186996 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.338786918 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.341037089 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.334453541 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.334867313 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.33513187 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.335727918 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.332809066 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.335144797 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.336261027 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.335104882 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.335166733 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.334932853 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.336607536 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.336680964 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.336880013 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.333291296 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.332844197 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.334523093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.334541535 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.334893132 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.332785951 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.335195184 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.334826181 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.335025641 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.331206335 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.335330193 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.333049992 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.335100571 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.336090238 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.330787955 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.336752972 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.33594078 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.332399634 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.335741755 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.336925039 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.335232295 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.340962529 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.345625675 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.339013476 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.337360186 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.333516952 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.337343314 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.335939478 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.335878799 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.337253292 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.336036259 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.337281319 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.33499284 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.338148031 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.337707553 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.338071384 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.336650244 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.336371259 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.336198887 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.337355513 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.336793069 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.336398773 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.337706322 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.337382319 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.338084738 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.33816234 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.338063622 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.33327754 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.339404443 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.338737497 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.338166216 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.341245264 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.338767297 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.338515927 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.338137642 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.337664772 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.3391085 seconds)
  done (took 97.432241992 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.338235947 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338949174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.337862579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.339247989 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337465195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.337962471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.340139693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34001737 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339203758 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.339820535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339846214 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340409094 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339909143 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.342724897 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340428296 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.341465482 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.337344825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339871777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.339984883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338110815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339462231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.337111205 seconds)
  done (took 30.68226693 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339442927 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342344667 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.339278009 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.339252901 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.340590272 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341078171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.340562738 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.342237985 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34095267 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339797409 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341167236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339678722 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.342463438 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341515139 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339424303 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.341329472 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339533031 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.342144432 seconds)
  done (took 25.345871652 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.342191115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.340519728 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.341732798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340905374 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.340451494 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.34233172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342259059 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.341922379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.340112612 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.342313469 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.343934813 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343629315 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.34402157 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342881266 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342817248 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341014923 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.340923324 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343429734 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344061614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339795401 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.343257014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343092877 seconds)
  done (took 30.745591422 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342519505 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342687224 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.339699336 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.342536516 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342007976 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.340980237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.338927186 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.341014582 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.346025296 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.344130665 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339393528 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.344173573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.346163142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.343566468 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.344274502 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344262405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.343543889 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342912867 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345177745 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.343040833 seconds)
  done (took 28.076635504 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340581452 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343826743 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342314783 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346358411 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345201989 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.344254467 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347376721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.346113046 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344327403 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344104656 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.345805364 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345250081 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342058731 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346016971 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343268297 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347666411 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345477405 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.344416968 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.34499236 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346809346 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.34474833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344943712 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.345832894 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.348575239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.346429907 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.343338904 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341027668 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.345930575 seconds)
  done (took 38.879147227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345116008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346531528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.346228344 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.345632728 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.345191408 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.343621705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.347601958 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.346984234 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346184531 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.346407414 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.346447427 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.344956125 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.348277421 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.347711633 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.344509876 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.346985764 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34649784 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.346086703 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347754151 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345030282 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.347237568 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347406848 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.348180941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34691433 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344816365 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.347171353 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348833026 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348245655 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346631532 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.343603701 seconds)
  done (took 41.615052879 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.365726141 seconds)
    (2/2) benchmarking "in"...
    done (took 1.365946267 seconds)
  done (took 3.953808513 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.34726969 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349219435 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.345278009 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.345265065 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.348390311 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.349710854 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.346432829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34826961 seconds)
  done (took 12.002199285 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.341064749 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.348669298 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.352034637 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.348977008 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.34701817 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.338188692 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347220189 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.35395367 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.340291545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.341491669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.344017079 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.344346793 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.343136198 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.344985757 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.339263612 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342146738 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.351619098 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.347392144 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.353307008 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.350185094 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35168538 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.344214912 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.344567147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.349251339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.339518076 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.350859084 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.347042726 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.355867517 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343303948 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.348187587 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.342387007 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.349878684 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.352991857 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.350558918 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.34771613 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.346412141 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351466679 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34914918 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.348655512 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35346399 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351952382 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347041664 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.343662686 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.348857683 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351421765 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.357379568 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.349037463 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.348952607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.341829947 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.344062407 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.355260008 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.340403371 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.352848166 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347996762 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.348557827 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352534958 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.356594432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.345467747 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.351549816 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.353019772 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.361774767 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.360632626 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350864517 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.356557693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352739917 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.366971722 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353785237 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.357104316 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.352516116 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.349166566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.35319235 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362952348 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.366850995 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.359339927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354359648 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.352213787 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344109393 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356174598 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355616988 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.358166546 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.357555249 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353125997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.359042328 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367686981 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.350396247 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.358213496 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.354115621 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.356162325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.348417302 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359045954 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.359432468 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.354808986 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.345949933 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.349905684 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.350900615 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.354656733 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.34692022 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.351595389 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.356735867 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.350586613 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.351602721 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350968829 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.357303474 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357055953 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35315296 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.356588487 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.360804368 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351902233 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.359741592 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.362030553 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356925932 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.347885155 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.352798177 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.358749055 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348442587 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.356543056 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.356688872 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.352471421 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360828621 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.356224967 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35937274 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.373933296 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.361238442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.354768776 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.353884684 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.36608321 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.359352176 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.35151878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.361326235 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.354911198 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.354659278 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.353338037 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.360654603 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.34869072 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357895017 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.35167368 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360061347 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.355514009 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.355989386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.35313606 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.355795768 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.351650789 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.356847895 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.360022463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.360417286 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.353817321 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.363993543 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.353240573 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.352913137 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.355859102 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.362290424 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35582979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.350264098 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.360436102 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.348687675 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36120796 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.35151254 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.360079507 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356073426 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.355357019 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.355234284 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.348618716 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354520728 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.362210971 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.355792099 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.3555569 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.361030403 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.356798323 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.357423021 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.348511973 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.357258904 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.35103047 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.353904536 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.362666654 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.357021848 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.357859638 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.353837399 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363687485 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358021879 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35862444 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.354022135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.359780359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.364486267 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.36131158 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.368667095 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358804959 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.359979354 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.351947285 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.354103121 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366976877 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.35387889 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.368063787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365047324 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372118835 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.35190176 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.361827386 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.353808942 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.360893532 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.358403886 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.366329881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.358650529 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35878151 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353584593 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361634217 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.357729425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.363124855 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.352399039 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.361297516 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.362630603 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.35934996 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359656796 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.360559541 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358734609 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.366685857 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361224912 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360900851 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.357440629 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.365899632 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.352501843 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.356548089 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.364688773 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.359210664 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.362458066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.370769216 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360000393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366865768 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.359804089 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.354769883 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.363477694 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360351135 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.362924011 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.365357925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.363131127 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.356738529 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368434761 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.364536079 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.354907067 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.362144175 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.369072146 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.360223133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.355479945 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.368775987 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.365070279 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.362121259 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.361265582 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356297386 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365216487 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.365490114 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.372313761 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.354885867 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.364975032 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.355897277 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.367283143 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.359943938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.364158538 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.363581801 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365470554 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371339425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.361318896 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356367636 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.365780052 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.362001025 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.363090467 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.358114458 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.368201104 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.367148794 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.367372886 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.361255844 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360168279 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.365525977 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.358715794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.368373256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.359993663 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.3760907 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.387050907 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368558891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.367723755 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.368053956 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.366035946 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.366792755 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.359577169 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.359782077 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360398234 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.361354558 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.358885096 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.36787512 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358592379 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.366195106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361590218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.366594225 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.366927905 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.368093008 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.359209104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.368683128 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.366335031 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.364795433 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.357880952 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.36469634 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.360995018 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367913809 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.366219682 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.361339157 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372783332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370005956 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.364626753 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.362849648 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.36138631 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.35944078 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.362937354 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.374035927 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.363867143 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.375985951 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.36156181 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.370868042 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.364700948 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.371046409 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.377481614 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.362313142 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.373975022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.367751509 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.357531852 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.359312135 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.367381892 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372945489 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.378884829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.360943188 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.37128007 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368645941 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.367454719 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.367686901 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.367212567 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366887625 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.369021326 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372253169 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.37548965 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.364259497 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372157332 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.380518876 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.372103604 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.372523648 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.36320082 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373537712 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.380857127 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.364400116 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.368838811 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.363699422 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.37259338 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.370284121 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.3718727 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.36832915 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.368530005 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.375500739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.376650196 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.374981107 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.373611181 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.375193719 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38418562 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375613882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.38298046 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.368455934 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.377174997 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.369620406 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.364530515 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.364323984 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.367136641 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.372894741 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.36369888 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.374065204 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.369907099 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.364763796 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.370798255 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.375348568 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.364753688 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.37416323 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393627635 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.364500659 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372737672 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.370464442 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.363425965 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.374781126 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.37183703 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.364550793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.36668489 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369719446 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376811317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.368279262 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.37516216 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366313968 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376859182 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.372260947 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.371285855 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.371637731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.37282946 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.366399734 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.376953421 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373429267 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.384172916 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.365945669 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374800807 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.370684806 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.37937896 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.386719162 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.369229522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.377458423 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.375159724 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.368569581 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.373519698 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.378257757 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371351775 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376118843 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.367904953 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372927637 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.372683429 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.377131684 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.378640839 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.377181974 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.368530623 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.369792961 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377727368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.375403306 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375838601 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.372763932 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.383272611 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.367209953 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.371102531 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.378462558 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.372373317 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381792733 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370471521 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.376324441 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373139742 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.380316837 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.375078704 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377035259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.368420589 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.3696777 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.384797488 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382550908 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.376793496 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.375064814 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.380456707 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.375064637 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379802522 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.376060265 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.373852837 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.375457665 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.380413621 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.371628337 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.372145793 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.372216604 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.378279099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.380825549 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.385806096 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.370213827 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385912169 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.389938488 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.385361012 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.369921954 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.372071394 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.375060629 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.37747916 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.376863964 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.37314789 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387770074 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.383351767 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382014939 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.378863807 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.384437482 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.371365669 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.381894592 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377163721 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.374434122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.386367861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.374294632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385028402 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379494066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.380000758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.371623112 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.373064619 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.375948028 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.37685523 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.379555455 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.378543616 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.383315219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.376115997 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384076383 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.378019919 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.37890409 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.381009109 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.37291755 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382547126 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.373670845 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.381955803 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.384156006 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.374388155 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.381420863 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38098746 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.374995871 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.379757322 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.387214708 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.378229453 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.372088819 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.37863966 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.387145247 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392568954 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.381122946 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376865227 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.378648484 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.3864799 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37811346 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.381387098 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.376312602 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39506215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.39481692 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.376029787 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.379755451 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387521818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.394046422 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.382138641 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.379094279 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.377276853 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382053727 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.390667518 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.385078577 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388418789 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.387979868 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.376774048 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.383208468 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.376661864 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.380685975 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.386644418 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391046679 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.384109857 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.379118735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.396644475 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.398484674 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.384472156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.407481945 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.388775922 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.382303047 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.386427973 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377306821 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.384323851 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.381446765 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.387546812 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.384039308 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384720705 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.381887126 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.375474735 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386421661 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.392405382 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.391171519 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.382809044 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.373002407 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.375968827 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.385562211 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.384872738 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.384449281 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.38461119 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.386943433 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.38366904 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.37768219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.396898455 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.405174658 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.390957353 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.383714769 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.384241269 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.385824994 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.390253385 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386133709 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.390869953 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.386365209 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.385080056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.38950448 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.397024984 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.385229078 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.383262277 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.384926395 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.379828764 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.389810196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.396168264 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.409278298 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.388853174 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.392126003 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.386564587 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.387741161 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380438965 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.388962285 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.386489702 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.381638 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.383585815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389270701 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.389049528 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.387472333 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.379026127 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.396630328 seconds)
  done (took 816.134903923 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385769709 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39037617 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386078118 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.388693641 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387340322 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386386455 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38514978 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.388208192 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.387994679 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.389270535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.386911971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389272752 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.38712127 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.388402848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388958894 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.391418151 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388116757 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.385807583 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.390788661 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391172387 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388039121 seconds)
  done (took 30.407239847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.387182078 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.390002995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.387382063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.38663585 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39034741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.391293909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.39063198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386622037 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.38834825 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389060516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.392906177 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389002431 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.389268716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.389373292 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392249578 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391177121 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.388994135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.392176444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.3910522 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.390412108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39383477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.393652896 seconds)
  done (took 31.83976114 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.388477583 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.392662894 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.387838108 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.396158136 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.391040712 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.394102692 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.391591624 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.392207153 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.390772755 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.387424969 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.385544612 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.388450024 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.388340807 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.395796293 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.388972472 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.398685036 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.395030271 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.392864477 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.391904777 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.393466647 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.397360405 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.404770913 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.391793628 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.388880123 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.394900817 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.394697842 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.393704172 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.393907672 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.386834518 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.394955664 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.395306103 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.384795094 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.399098591 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.399482584 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.38874697 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.397910235 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.395453168 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.396909227 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.395335099 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.395958775 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.414707979 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.395483043 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.400226708 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.408142519 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.396206369 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.391498138 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.401270104 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.397637311 seconds)
  done (took 68.187834482 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.394657811 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.39571332 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.395441313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.393421284 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.396044045 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.397204269 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.396250121 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.395708342 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.39682263 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.394427106 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.393667907 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.395085702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.394272317 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.396510252 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.396213777 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.394544031 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.392198609 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396161704 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.398447659 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.397885251 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.393480636 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.396031048 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.397208158 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.393210692 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.394281885 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.393188067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.396940997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.397688397 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.397925378 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.395457094 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.397542003 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.397831867 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.397427931 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.398397526 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.395405825 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.393539942 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.396533854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.397874778 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.397027839 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.396551995 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.396609585 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.398071183 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.398962634 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.401155383 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.393392312 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.393734059 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.393065869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.393596587 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.39377227 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.393830174 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.394495064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.398057222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.397891109 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.398193585 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400816855 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.395866008 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.395985946 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399303776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.396360097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.393691767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.398378168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400528906 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.394191949 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.3970368 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.393713822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.396210421 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.396779848 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.398240448 seconds)
  done (took 96.204362231 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397424239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.397415825 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396163129 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399073257 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.397132089 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.399908873 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.398356165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.39935245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.400478443 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.399145435 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.397333092 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401580166 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.399157463 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.400891727 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.397820573 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.404543981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401775497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.401184147 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.401012014 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.402552029 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.398887439 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.400154217 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.401001605 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.400005618 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.402477122 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.400858429 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.400169087 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.399336346 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402954652 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.403257952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400443902 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.402572965 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.401120008 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.400381675 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.401880872 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.400590997 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400081234 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400789229 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.40042121 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.400961017 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.40047691 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.398563987 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.400871653 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.402563556 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.398688392 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.400231482 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405069793 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.402073616 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.402750409 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.401195356 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.402872227 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.402685901 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404162276 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.401669002 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.399943153 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.402173572 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400844352 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.408377069 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406609244 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404883381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.405834887 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.406225179 seconds)
  done (took 88.133884964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.399533992 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401150038 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.398564348 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.402538896 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.405690272 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.4022223 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.402921226 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.401666274 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.406108848 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.403646454 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40329297 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40147947 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40504979 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.402955929 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.40372995 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407947011 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.403050986 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.403141123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.4022001 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.404702476 seconds)
  done (took 29.329024696 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.404977072 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.405076032 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.40198059 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401545582 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.402245315 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.402771512 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.40648493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403202436 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403844357 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401610384 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.40520163 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.406860356 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404290446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.406190008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.403812329 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.406087334 seconds)
  done (took 23.735140542 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.406462542 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.40787958 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.404167348 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.405776075 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407419486 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.403690657 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.40724478 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.406304439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.405316576 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.40572585 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.40799065 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.406002724 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.405054742 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.406158081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.40820845 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.405383314 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.404941408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.404529024 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.40268552 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.405554765 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.410004105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.40398567 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.40385518 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.405729775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.406870592 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.407092031 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.405487475 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.406950537 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.404496757 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.406151643 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.405127104 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.407101863 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.405513617 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.405665773 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.409931127 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.40797479 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.406305362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.406456692 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.405135244 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.405362268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.41054951 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.408446215 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.408058905 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.40573214 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.405974961 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.406705721 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.406896593 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.407535803 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.405629753 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.405603313 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.408385898 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.406777482 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.406182207 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.407608348 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.408157365 seconds)
  done (took 78.621473558 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407528966 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.40975348 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.408548754 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.405806831 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.41038464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.409836536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.408252595 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.41074166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.407851618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.408800107 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.408925437 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.408898452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411554505 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.410409383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.409577896 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411309029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.406595154 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.410538798 seconds)
  done (took 26.639755425 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.410152179 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.412770735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.409856456 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.409592771 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.41234245 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414048464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.411769793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.414041384 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410736903 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.411146166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410569355 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.410438318 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.410987924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.409350567 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.412419246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411758592 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.413012202 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411566555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.412006291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.410406063 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.411614176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.411786802 seconds)
  done (took 32.326607788 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.403720544 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.401901148 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.40147147 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.419056403 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.420498537 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.403765866 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.403213575 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.404240973 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.427501028 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.452272752 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.445717076 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.420094894 seconds)
  done (took 18.278126052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411401308 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415277657 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414349889 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411413065 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417384816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416171976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412618009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415103217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414814528 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414348094 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411550299 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411767037 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412102845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410963069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414205679 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413750406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412266025 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417070928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414894119 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414108187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415902519 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411029871 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412562367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41448095 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418034282 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417655779 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415236063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412299084 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416149173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413634199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414835979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41661236 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412465382 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412337016 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41457355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417461269 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414143554 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413240118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416650653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413961116 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.417650803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415886102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416684875 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416569226 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416346069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416571039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416433239 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41821762 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414015302 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416980901 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413435748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412487344 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416642733 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414681227 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418071437 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419725752 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413190854 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41579406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414009628 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420419159 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414664788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413786129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418718716 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414290562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41894303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41740464 seconds)
  done (took 94.667996876 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413857138 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416231928 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419139391 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41561729 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418500878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419359644 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419907508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416910643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417303674 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416411166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416401945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419728491 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419287045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423045064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417923009 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416249881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417740062 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416835999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421684256 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420736409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416716643 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417936475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419932268 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418628432 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419512342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416978342 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419237716 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419788791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418961264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41716971 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417938314 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416312095 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416759332 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.418770765 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418138706 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41885309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420928559 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41864232 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42034529 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420156807 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420189685 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418494519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417656452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419316682 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418329818 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417041176 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42252009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419688415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421771052 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42062573 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42361951 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421921126 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421036389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431104951 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422145839 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420628644 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422318363 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420755873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423448576 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420924354 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420190332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419085563 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423667644 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420395313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421924998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422922705 seconds)
  done (took 94.969304225 seconds)
done (took 1913.733252649 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.579417564 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.529879459 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.411581945 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.427377565 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.41529047 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.416098536 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.424247865 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.411113728 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.412295582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.415151816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.412041423 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.607354738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.451601764 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.415539941 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.414714688 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.511833078 seconds)
  done (took 28.538621388 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.445415709 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.418912866 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.553603676 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.42134876 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.443099792 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.629313541 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.482181647 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.419204178 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.620609781 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.442487519 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.417735256 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.444505578 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.421029817 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.419715741 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.44237983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.634268556 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.713074548 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.426594314 seconds)
  done (took 31.080524299 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.952022273 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.448017667 seconds)
  done (took 5.688622305 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.442898957 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.422920795 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.421453338 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.421008747 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.413518177 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.411707226 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.416600488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.411221031 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.427296457 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.566958322 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.427430158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.43291251 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.437930729 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.41859236 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.426487202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.467953613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.570099151 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.429907689 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.427236903 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.426591542 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.420143173 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.526001315 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.468305418 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.430571258 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.567575139 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.416496316 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.427922645 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.428965431 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.546474755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.432651381 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.42025822 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.418988008 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.422653225 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.415008213 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.012053593 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.419405757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.448203838 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.432078467 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.428776811 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.583684849 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.425238337 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.431350705 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.413561549 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.994613221 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.545699417 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.558155114 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.437969063 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.42408192 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.42614297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.493616793 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.427731261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.424427746 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.486964064 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.304460304 seconds)
  done (took 90.579779313 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.465666464 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.414186877 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601699836 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.442844554 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415291389 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.438692277 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.436650219 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760718554 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.427296002 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414598927 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.765146435 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.109843203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424745856 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.479655618 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.456992039 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.472736666 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429763578 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.422125516 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.424059852 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.419038099 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.029450113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.436925181 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.422462761 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.491258685 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.461896847 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009660119 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.418776817 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.424220364 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.441645992 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.417420187 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.073290962 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432386077 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.468196417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.416843439 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.730778494 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.876808963 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818879494 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.421655157 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.44303287 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.421803073 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.442468783 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01662155 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.865118107 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.424014559 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.421696949 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041651614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.420902678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.416905242 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.419708239 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.693981636 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418744758 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.418864989 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.416224194 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.422364516 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.41599103 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.478985939 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.487165656 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031625798 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424948313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.413604188 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.467104437 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.419897787 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.426959674 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424387075 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.419277714 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.864489453 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.66834717 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.426255804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.863562393 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.073680436 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.425783046 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156223234 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.425863978 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.432702604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.456872466 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.430734745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418684739 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032499907 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.427670676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.41880455 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84370904 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.42822653 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.759616476 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.446980222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423726182 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.05683786 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435438561 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.471383888 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.422942404 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.431109296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.420909173 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429351683 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.744750982 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.478308544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.423431843 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.422284324 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.468399459 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424535829 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.422789798 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.423716732 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147750574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.438698044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.424844959 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.443674248 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421874991 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.42587935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.426002329 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.422957461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.714333803 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.423308877 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.429460014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424660865 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.423806776 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.428963531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.507814936 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.432220389 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.804116261 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.429050666 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424013037 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.447547945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.42514785 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457501254 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425282918 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.455922762 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.42531027 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.726208436 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.445773002 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.430708532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426387599 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.42416573 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422854015 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426066421 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.477764351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.42594399 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.289228289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.431291995 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.472614804 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425078356 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.428987283 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425588474 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.433267556 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425701828 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735799893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.747109784 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660253659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426748305 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.426482049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.311709448 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.46738214 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612157409 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.447747669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.427026685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.708437968 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.657234779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.428552803 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.425133949 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.432824381 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.715268782 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.430619649 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763121404 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.10171501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.43192382 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.426304678 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.295705599 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.276076035 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.432740524 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.430097061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.756890822 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.446831536 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.425078121 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.426950834 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.427688465 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.427606477 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.43009294 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.432033864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.42698009 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.426729188 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.765917167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.62424398 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.448305049 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.430763523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036439804 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.453424066 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428817466 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.438532506 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.429570145 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.427153972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.495998365 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.429745404 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.460009989 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.431320097 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.440752228 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063498036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.438079578 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.435154904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.629218794 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.242747744 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.434392794 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428621617 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429468287 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.488134608 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069411371 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.466418449 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.811813987 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.436868904 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.475464291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.446938072 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448458761 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069480455 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.452452447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.432616851 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.247887704 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.434833578 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.876015472 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.431164254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.43263526 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.188576018 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.435865778 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.432077016 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.431372076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.434178913 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.746806477 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.432150197 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.444237281 seconds)
  done (took 522.351521886 seconds)
done (took 679.523341335 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.430906952 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.430013575 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.437399383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.435991471 seconds)
  done (took 11.042237209 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.449220401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.439152583 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.447030167 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.437188502 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.449152421 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.437889602 seconds)
  done (took 9.967294263 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.435530344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.433015054 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437206337 seconds)
  done (took 8.613582271 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.677484917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.457470089 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.85095073 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.447517291 seconds)
  done (took 9.743375982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.448619086 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.448942639 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.449329925 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.449181394 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.447827321 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.450008217 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.450562537 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.449476316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.452021866 seconds)
  done (took 14.352285293 seconds)
done (took 55.027415791 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.52789738 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.41435915 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.786451736 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.521811923 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506258908 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.560975632 seconds)
    (7/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.661487256 seconds)
    (8/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.91822676 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.603236425 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.470468441 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.438731498 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.410787086 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.418248697 seconds)
    (14/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.637581884 seconds)
    (15/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.514719655 seconds)
    (16/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.504173636 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.840925401 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.458578844 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.515725499 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.607118875 seconds)
    (21/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.428751396 seconds)
    (22/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.471305351 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.670144035 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.416182249 seconds)
    (25/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.564689548 seconds)
    (26/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.520524707 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.474596147 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.549895814 seconds)
    (29/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.474637867 seconds)
    (30/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.668557333 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.713065967 seconds)
    (32/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.518380378 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.625863055 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480311521 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.522702415 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.415343093 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.457403236 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.601690859 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.674092545 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.532520367 seconds)
    (41/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.438088268 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.51799606 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.834040541 seconds)
    (44/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.571694713 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.598175557 seconds)
    (46/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.615647072 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.472143357 seconds)
    (48/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.60459987 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.612069479 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.563505533 seconds)
    (51/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.419951217 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.488478674 seconds)
    (53/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.603342226 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.462606822 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.615448825 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.549342467 seconds)
    (57/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.750862149 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.419876113 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.719027014 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.608659694 seconds)
    (61/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.537040963 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.480738921 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.649427538 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.477666337 seconds)
    (65/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.706126311 seconds)
    (66/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.638165949 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.515321325 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.54300651 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.013667369 seconds)
    (70/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.567284935 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.562434 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.592889359 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.537569122 seconds)
    (74/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.674727114 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532461469 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.42824668 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.759713155 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.470578403 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.551289064 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.430554534 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.601976349 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.514715126 seconds)
    (83/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.416619427 seconds)
    (84/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.494123379 seconds)
    (85/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.560937893 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.474674656 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.763658724 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.531415383 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.530394136 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.565904164 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.602351948 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.52465846 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.463509581 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.427543911 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.73198841 seconds)
    (96/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.664347062 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.54535954 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563198149 seconds)
    (99/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.780052754 seconds)
    (100/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.422348175 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.565267159 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.578532206 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.473066905 seconds)
    (104/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.67636835 seconds)
    (105/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.423985553 seconds)
    (106/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.570181145 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.525097229 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.641005161 seconds)
    (109/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.513003066 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.462992257 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.418262617 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.460506362 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.679481796 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.427415825 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.693357733 seconds)
    (116/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.421192904 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.571932765 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.844538545 seconds)
    (119/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.678876597 seconds)
    (120/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.42371074 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.800966501 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.641470675 seconds)
    (123/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.486781481 seconds)
    (124/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.57069458 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.438069065 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.487662652 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.457338966 seconds)
    (128/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.622711441 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.479179365 seconds)
    (130/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.506240925 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.784595211 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.581824922 seconds)
    (133/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.42016892 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.490833738 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.589383168 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534629116 seconds)
    (137/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.713699302 seconds)
    (138/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.507306409 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.546833907 seconds)
    (140/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.534244157 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.736477675 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.517209022 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.41895136 seconds)
    (144/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.486523854 seconds)
    (145/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.528354013 seconds)
    (146/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.425394174 seconds)
    (147/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425316807 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.557952624 seconds)
    (149/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.485358299 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.41977262 seconds)
    (151/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.489277412 seconds)
    (152/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.847544786 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.470353001 seconds)
    (154/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.555479491 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.484650888 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.427903244 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.596116078 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.724072659 seconds)
    (159/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.427801405 seconds)
    (160/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.682240314 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.72908385 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.520311516 seconds)
    (163/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.42158885 seconds)
    (164/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.476006747 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.546678303 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.621264766 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.483500108 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.613706395 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.55558098 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.610461834 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.773652608 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.557609008 seconds)
    (173/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.534673579 seconds)
    (174/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.549225075 seconds)
    (175/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.544684648 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.574944206 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.721511024 seconds)
    (178/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.478063014 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.424264487 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.577012036 seconds)
    (181/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.571734047 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.652577056 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.01696833 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.428930609 seconds)
    (185/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.429163129 seconds)
    (186/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.513751669 seconds)
    (187/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.853115615 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.430651674 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.762687413 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.768678746 seconds)
    (191/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.428204924 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.429073444 seconds)
  done (took 349.284058668 seconds)
done (took 350.59449857 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.484233711 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.551060932 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.455620792 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.45515609 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458791927 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.44812838 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.483826265 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.455810549 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.474893123 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.472355808 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.448826071 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.473346874 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.470461165 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.471025733 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.491381899 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.458464962 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.456502888 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.46859447 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.474570543 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.475918459 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457316576 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459036944 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.485319631 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.456515974 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465830137 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465834308 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.463409239 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.459140071 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.467034098 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.473059823 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.465480399 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.469222202 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.474858445 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.470984465 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46031322 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.470237024 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.460237572 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.552831264 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.479444857 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.47448203 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.468515331 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.47852829 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.462062734 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.46530366 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.472406484 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.488107706 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469224353 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.474842922 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.467044441 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.461374242 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.485584612 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.473284976 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.469300941 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.45530077 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.455308145 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.500425606 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.47197772 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.479336008 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.468116784 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461256215 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.493138038 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.477832643 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.473047846 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468952582 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.471453386 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.477695791 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.473642887 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.479865442 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.469163668 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46093197 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461983354 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.470277685 seconds)
done (took 115.299054382 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.583154274 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.455904034 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.618602906 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.467499011 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.628799732 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.602901042 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.46749061 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.469072996 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.466522711 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261238115 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.466881031 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.468283428 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.459288725 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.468064422 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.579562368 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.466275537 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.466040442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15880925 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.467389084 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.597683822 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.456958596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.469550974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.469587976 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264387215 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.458434352 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.452202096 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.596355493 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.470264502 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.164192392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.452883991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.456408364 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.163407601 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.598368405 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.488597491 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.481165425 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.479678361 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.632792861 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.473070993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.586528428 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.58554093 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.618709655 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.508668783 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.452160487 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.459128674 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.472169849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.471729059 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.469294991 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.498474209 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.460486567 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.470272654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.162235909 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.480973079 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.469911496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.471016358 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.469276681 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.500286749 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.469928635 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.472258581 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.598566224 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.470791617 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.586629212 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.267654053 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.262834178 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.470189625 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.458983625 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.471815191 seconds)
  done (took 117.110486285 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.534396467 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.546549369 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.585386504 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.465468507 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.517510914 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.584089923 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.463328079 seconds)
  done (took 12.024901617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.469073755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.473125341 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.510195843 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.5105282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.472399332 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.634701591 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473258339 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.475437535 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.470991261 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.514253623 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.472714737 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4724264 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.482711955 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.462091701 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.511204671 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.474065598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.583983067 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.466233839 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4716487 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.620243639 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.47426913 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.482528732 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.515851402 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.477268529 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.475458489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.468744013 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.245863803 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473545705 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.47372704 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.473852288 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.473831497 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.529912477 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.473836357 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.464527712 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.474962379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.579534022 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.475403638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.473498606 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.474984044 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.466524148 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.47492242 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.474195961 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.474109788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.473717514 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.474258815 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.49044149 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.476195765 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.475973643 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.473098825 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.474611264 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.516566273 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472939532 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.471796665 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.475570046 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.519084126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.483025238 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476625118 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.474646562 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475618348 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.474567982 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.621736757 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.515133258 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.474241385 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.512824592 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474154264 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.476227472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.475196081 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.474780637 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.561490663 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.475348915 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.514545336 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.475318208 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.647916004 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.490456635 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475465174 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.470365516 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.471672292 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477642908 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.462445128 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.475585738 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.476697124 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.469782542 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.475450651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475955566 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.477909851 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.626665875 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.577332706 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.474839717 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.4844707 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.476765398 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.476583262 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.519685595 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.475103757 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.474763546 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517517932 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.586575175 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.520076504 seconds)
  done (took 151.012349044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.481773548 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.482277695 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.475102829 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.495968791 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.472481478 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.468912044 seconds)
  done (took 10.209867436 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.472909726 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.481565134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.47920168 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.479581105 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.479606549 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.479504536 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.478635421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471313942 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.484235586 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.479391765 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.479796813 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.479178285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.480686517 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.479456183 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.479748495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.479227135 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.480915082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.48102681 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.480053723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482681538 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46834576 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.481657044 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480079751 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.474625546 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.482687588 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.479234211 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.495282111 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.47931774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.479191109 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.477725637 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.484645003 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.482032717 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.474486145 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.478417196 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.483670575 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.473628153 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483170083 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.481095198 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.479583636 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.482740118 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.483192382 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.482201852 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.480679124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.481573149 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.474187567 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.478846468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.486784759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.497351788 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.481641261 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.480697886 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.483554807 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.478551604 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.483756146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.482639159 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.476512291 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.478135977 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.487100401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.484603577 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.481580372 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.476986338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.485693577 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.484684242 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.475858457 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.488752939 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.484769497 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.483638603 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.477864063 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.486131633 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485598293 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.483027498 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.485046663 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.482799502 seconds)
  done (took 108.972106695 seconds)
done (took 400.655132695 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.842726627 seconds)
  done (took 4.179882234 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.622346694 seconds)
  done (took 3.962184628 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.170504035 seconds)
  done (took 27.517139998 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.560280066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.522480554 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.491787589 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.472353634 seconds)
  done (took 11.383650719 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.819762542 seconds)
  done (took 4.157330507 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.477256663 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.492069235 seconds)
  done (took 6.310666695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.803222533 seconds)
  done (took 4.141225249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.836007327 seconds)
  done (took 4.181510788 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.480970485 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.495098092 seconds)
  done (took 6.324477884 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.446126073 seconds)
  done (took 3.787063179 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.889361819 seconds)
  done (took 24.229408572 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.489994443 seconds)
  done (took 3.832711764 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.50863735 seconds)
  done (took 3.845418475 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.787926951 seconds)
  done (took 7.126869851 seconds)
done (took 116.319615058 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.467870725 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.475001551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.47405832 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.473786176 seconds)
  done (took 11.228715776 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.546535699 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.549182466 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.557321768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.544661925 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.543673654 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.550507716 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.51184064 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.511360022 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.542765311 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.537267356 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.553737954 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.541423167 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.552807384 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.510095681 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.535371706 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.556080284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.543518199 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.559041915 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.511555147 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.543664505 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.48702275 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.54400516 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.539099262 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.484934923 seconds)
  done (took 38.197991311 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.999488631 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.547997572 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.63033983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.528556131 seconds)
  done (took 8.045186496 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.591566078 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.592174189 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.611445253 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.653227226 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.692284187 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.605977666 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.51526161 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.510138656 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.495449786 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.591301505 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.676394136 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.590094385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.807433108 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.486910602 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.804955126 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.485176677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.486414976 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.590314444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.639418196 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.669170391 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.487749056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.590256802 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.594981538 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.590525973 seconds)
  done (took 39.699841319 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.494055587 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.504093064 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.48889298 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.503270043 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.488160035 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.487387094 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.488439642 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.496251883 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.488326747 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.487216898 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.489169293 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.503577333 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.487360909 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.487123923 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.496399943 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.489059241 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.489647634 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.495636631 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.497883531 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.48904207 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.489939771 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.496269039 seconds)
  done (took 34.179248598 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.474139272 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.47135137 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.824951673 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.729791733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.473283881 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.475622478 seconds)
  done (took 14.792544553 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.564146615 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.73517293 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.485885957 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.91851339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.019875916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.48639681 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.482284452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.775075282 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.164031703 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.157101494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.556565835 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.56754402 seconds)
  done (took 22.255674272 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566721575 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486446219 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502472101 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543297278 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483963687 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486205465 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527473646 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245079942 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.491588861 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762713866 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483923359 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594994496 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.730780832 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501615492 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49165085 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.467997002 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722155817 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073076817 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493666733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495393322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523794854 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491756495 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505169671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.74712914 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492867341 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485483537 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.750661193 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486685878 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832572533 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813337654 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810435655 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493530626 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763951123 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222660015 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598948334 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739146915 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510482997 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48715112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.465196761 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.499102697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499390301 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497083964 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807425426 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494067292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487708044 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486601048 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265765435 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.495274191 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.487313347 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489414017 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810153658 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578375541 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.493580893 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488669328 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583941371 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490042772 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.493389974 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623630215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129560976 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490674445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515355068 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.512598373 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502618105 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489940994 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255278359 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.501554195 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.493224966 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495834413 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48927663 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504887989 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513646949 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488819798 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.511079639 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492356995 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447173746 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49592847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495325528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132958379 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503365397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.495252296 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718711998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490582341 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489386776 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.488756645 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489158957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368514474 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504005637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.45766888 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537558039 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25527899 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74864257 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518465299 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52209828 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.714167574 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.460134166 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492003051 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.492929995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498243273 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514085111 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262101866 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492105326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.496808251 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734515438 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.70455482 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492654878 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.478939031 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037792574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506007426 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.521857815 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514028968 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.749701091 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.229998503 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824690976 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503427899 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551651444 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494553794 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435211917 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511200432 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50537051 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494236283 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827458342 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.47292615 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500561035 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567250944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505054252 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493237923 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508778912 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504141867 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494308291 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.726090411 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501655381 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.822284784 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.506491093 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494654083 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.497576736 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505615707 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.501251119 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.717134215 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505067015 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772800027 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495865314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496158401 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49483755 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.713990683 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.498360074 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.507168344 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835963761 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494679238 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502158567 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828767391 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534521784 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608965682 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52793472 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.494595549 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768781275 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.502973594 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.503218796 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515455116 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504890569 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497180627 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.504762764 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500144394 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228325757 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49292396 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50427261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498099645 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.515575488 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572452114 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506466152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.754710061 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.50607914 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496741508 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.523499372 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.500023927 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727334752 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817853882 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.520522004 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674286235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.04770941 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225752438 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519336304 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.497388788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.49614747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.495894206 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498632106 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498475716 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498991354 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753534684 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830869328 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498158963 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.23614651 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501044309 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498146517 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.513271127 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821858503 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.51370066 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498511954 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.509937337 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518107963 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522002907 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828597458 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726825006 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.51613443 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499695319 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.019007034 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506551771 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501279992 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500157899 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527528349 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498281813 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436161042 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840031109 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505447547 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813725914 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504764327 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.542546165 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.499230693 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500219425 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519758581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.51798156 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515630542 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.759830286 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52190048 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510274189 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142064928 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435604303 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153219927 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510954 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.502659039 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525258913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279070202 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499836976 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501189182 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788956829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278753548 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501749373 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051700703 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.501939805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.450124202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829858631 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734813528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506591839 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.513844334 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833807992 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.721607648 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531520728 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508158436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508226039 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.472018664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128248734 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506084526 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688845966 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276714009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503930995 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.509012627 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.556843496 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.528010345 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995228268 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509180124 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505301112 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507148059 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509465861 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443781609 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.508780675 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503490261 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249527028 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519673163 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.05167819 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503417088 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765345405 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840113569 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.808941911 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.518904412 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.523909119 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.75430654 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825005225 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513170172 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507339642 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166254527 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.370086518 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.513527287 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50678931 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473674504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523038657 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85229903 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.52847645 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.526174012 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519152658 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507013898 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504336927 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.505287882 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514057493 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492592502 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087810148 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.503323976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504051815 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511516352 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511962771 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752193216 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.522420435 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214016696 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73689693 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496848018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542338598 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.512304525 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507106935 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.498255756 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507878108 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507911291 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497380487 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.730378898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507876718 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.481670097 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.545408203 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.718855326 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506855672 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52716353 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773283526 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.513381323 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.506873493 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480612453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540886398 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506862025 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530087371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499804692 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549896667 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582825425 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765281696 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.838540138 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83734147 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995894055 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511376688 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537228525 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.523766711 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592032817 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526601168 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.510632146 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.507720505 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223446734 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464734895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237678476 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839417235 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51328679 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518705774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509617115 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752265334 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510355185 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788974374 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509310986 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.505238638 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534272619 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530396745 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51477416 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72415702 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787965379 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511309695 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516389202 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511184078 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.512764981 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842359488 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.728644078 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105426001 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167968566 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520651154 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515692396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297866103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786773274 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510700821 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513267459 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511655559 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.518953553 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.5349521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.525720637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530006778 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736801852 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837209187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266448499 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843926738 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.542008614 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.51033183 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529335065 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.762714546 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355063104 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771587506 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227792814 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362679553 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774158242 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588296102 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777486315 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.520553717 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752399603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.527020495 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513315494 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511358805 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513333173 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.512089078 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.83404487 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232847008 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773241087 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.520152888 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.528029727 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544928962 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.774612415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.745060983 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40450219 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.741096207 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844441981 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527279642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51368295 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222759538 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845341177 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522620256 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.521648309 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782289751 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521088582 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551724158 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.386249377 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.513608549 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165184695 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.735133743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535900445 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525178441 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357873045 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227891516 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.523635387 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099798646 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524963817 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51524216 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800282697 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.524435774 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52275463 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803544424 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.522164825 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526304999 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787889904 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.214082922 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.390761467 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.540892839 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524826023 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.525863661 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518774625 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582954888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517714567 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522557126 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.013251 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526328831 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519515979 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533611124 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.526953548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538476376 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.525398539 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518218342 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.526331955 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.506463285 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.511086096 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545000685 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653742482 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154339454 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520593084 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.13553331 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.855571592 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765954663 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521084248 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.496489312 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.52453147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518780622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519194114 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520641377 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51662589 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173119068 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.538956266 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.841489279 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535306061 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.734442769 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734036502 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531015483 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789795276 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542476661 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545465652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.488163936 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521348022 seconds)
  done (took 1053.398333307 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.569055401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.528388511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.537750163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.570265044 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.583347421 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.540929788 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.594285119 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.540049159 seconds)
  done (took 21.839254305 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.511662661 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.525999299 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.51383256 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.525593593 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.523164385 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.081465477 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.529665736 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.528187424 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.537072216 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.529082735 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.529692661 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.248189361 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.523620847 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.529207122 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.518746709 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.530835861 seconds)
  done (took 35.073213235 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.720515998 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.745753945 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.097426784 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.513324267 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.524059407 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.549311337 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.905331303 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.525191577 seconds)
  done (took 28.960075903 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.528157313 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.528608444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.530904164 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.528081681 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.527243509 seconds)
  done (took 9.020443995 seconds)
done (took 1318.031354127 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.531746511 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.530454956 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.529951942 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.531174632 seconds)
  done (took 7.500849168 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.492497119 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.494534227 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.494198974 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.509032897 seconds)
  done (took 10.368249159 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.36415939 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156019714 seconds)
  done (took 5.899125289 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.082278029 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080573523 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.080271435 seconds)
  done (took 7.623078277 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.827447298 seconds)
  done (took 3.206002881 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.513959919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.522767455 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.568782765 seconds)
  done (took 8.986224014 seconds)
done (took 44.964484987 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.516600201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.283582167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.685181266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515694031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.688822559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.685014483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.783107978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.524979552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.525046921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.524587615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.515902696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.691409726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.772524765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.281768536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.772713256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.28873668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.69071434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.529706554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.51694306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.529938261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.784533996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.532737683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.534310929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.520673986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696637788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.676293526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.51925802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.287544412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.517426527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.517071165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.708337819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.519939468 seconds)
  done (took 87.519274707 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.525758404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.530887839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.521451017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.536001215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.537679319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.521543555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.538065269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.516183106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517936237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.518378193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.516691209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.537949993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.518960234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.519052808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.538463192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.519628967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.551951899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.533989228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.537189377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.515471796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.519732054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.532506545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.530797105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.528980387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.535599743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.521751246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.519155512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.519355988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.517210067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.539845861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52182472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.537387337 seconds)
  done (took 82.259821646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.524580498 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.521456084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.521665742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.525753458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535034724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52195286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.541876116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.519832763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517103415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.523619034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.522443663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.532590958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.522120611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.52120999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.51896046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.522176604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.534564606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.530612491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.522510058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.539763868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.523220448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.529044613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.520338932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.522470176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.531936791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.521219937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.540440912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.535830484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.519805517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.524405053 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520081382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.541881547 seconds)
  done (took 82.23347584 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.766829985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.537378647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.542387543 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.53116474 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.540391777 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.539611063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.531191028 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.770985913 seconds)
  done (took 16.141595716 seconds)
done (took 269.535320583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.530655261 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.111598932 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.563297302 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.536136264 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.555740371 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.560471008 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.76196967 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.567132505 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.752807193 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.550552883 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.549639006 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.548142572 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.459084938 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.685314452 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.428140038 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.554057213 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.534899627 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.52582828 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.178405233 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.795982389 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.569169594 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.539195708 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.437449999 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.543209483 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.519295288 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.607557511 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.612987844 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.70840759 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.667086005 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.606320141 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.106444028 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.534874398 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.534243405 seconds)
  done (took 70.118890097 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.530215794 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.539879077 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.540615977 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.54260453 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.540918495 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.5422996 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.53269842 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.542051819 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.541663778 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.541338744 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.543877401 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.542445333 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.547079515 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.541764031 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.540080611 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.516945372 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.532432368 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.542758373 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.532262902 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.513853214 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.540153004 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.5467016 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.540883155 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.54391649 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.543911232 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.540946055 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.543776563 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.544104088 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.543092197 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.539026697 seconds)
  done (took 47.563221051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.544582983 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.180587101 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.393601074 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.543382989 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.536461886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.539148893 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.890178852 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.543839457 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.539926691 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.543385281 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.097734789 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.543816025 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.57605428 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.406783168 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.537292942 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.545261468 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.5452529 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.536271188 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.205076476 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.552231687 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.901668224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.552129643 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.901492968 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.550326194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.542137644 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.538510347 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.542004734 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.472446007 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.545257332 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.11979473 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.499753294 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.890098911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.37236787 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.475069427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.50858118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.551539417 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.547756217 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.11982756 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.546691712 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.536354693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.898448143 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.543876105 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.43253044 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.27953794 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.56584891 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.546634768 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.498997748 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.120087346 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.838753322 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.551621093 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.463808899 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.547392401 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.548920772 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.540868855 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.833572342 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.54805306 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.540138351 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.530162112 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.549160741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.89992589 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.553954347 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.539894096 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.203185128 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.546490324 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.20034419 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.549140734 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.549613777 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.541263312 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.433960601 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.550277127 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.290016855 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.567502109 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.549389137 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.11336711 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.204341311 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.551604612 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.548228465 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.207980117 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.435176064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.899282105 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.550860558 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.427417947 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925179149 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.551687737 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.55515415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.550411824 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.551130535 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.615336833 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.893715387 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.216024412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.291575012 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.577292943 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.905318206 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.555065053 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.540782428 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.53452437 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.558283226 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.550361905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.43029668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.293171512 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.569220646 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.552557392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.286764804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.572447533 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.90426595 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.555126485 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.473597694 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.549198592 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.618484473 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.55366102 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.553296967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.546566374 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.906397936 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.554401597 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.552750317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.277006545 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.156481012 seconds)
  done (took 217.478163994 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.552831703 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.54395057 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.55491798 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.543538946 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.536163665 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.545488206 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.534411885 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.537634535 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.541987916 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.536129754 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.539055378 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.547299426 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.547719686 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.539421493 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.536868416 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.544176821 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.537681016 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.545959073 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.545788348 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.538095194 seconds)
  done (took 48.245053719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.553389104 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.232340338 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.191645611 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.561722957 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.554536264 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.5450455 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.614286737 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.553538 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.555585445 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.916167461 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.768816895 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.560708772 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.553386294 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.556279622 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.188020674 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.533597135 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.918845778 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.239004978 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.562262584 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.232004276 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.535148986 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.556165535 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.54602671 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.229533174 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935997182 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.903882904 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.623167512 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.234484478 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.561783781 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.556114868 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.234602196 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.562126683 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.54635095 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.21865404 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.561629412 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.571596104 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.554646617 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.618209152 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.61876803 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.922180716 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.247751753 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.915315053 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.573805741 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.740284276 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.563852744 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.531182308 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.246915026 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.564585472 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.529812679 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.558692003 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.564076279 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.203320692 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.556532863 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.20559971 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.563046444 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.559359763 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.237050799 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.209263587 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.200594539 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.770164409 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.55375625 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.901467404 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.563976008 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.247061612 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.565488139 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.557645408 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.559288377 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.765302024 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.24299707 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.909667288 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.930981932 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.932334686 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.563944619 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626709631 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.558118584 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.927745214 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.632836572 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.005433219 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.934223788 seconds)
  done (took 142.401416844 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.884170014 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.684635916 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.007489225 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.209276732 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.134767555 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.715122374 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.686253019 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.825264227 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.572000313 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.666600264 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.348201789 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.658587866 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.40052094 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.634323445 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.671185448 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.685630622 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.026324558 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.550754241 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.29125549 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.313786578 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.558952952 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.672733161 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.106945086 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.790811721 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.57134778 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.192007414 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.581230007 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158110975 seconds)
  done (took 59.001456396 seconds)
done (took 586.194577466 seconds)
SAVING RESULT...
DONE!
