cset: moving following pidspec: 9559
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.983852719 seconds)
loading group "string"... done (took 0.611870023 seconds)
loading group "linalg"... done (took 9.713450106 seconds)
loading group "parallel"... done (took 0.183874951 seconds)
loading group "find"... done (took 1.516228539 seconds)
loading group "tuple"... done (took 2.179217615 seconds)
loading group "dates"... done (took 1.485454846 seconds)
loading group "micro"... done (took 0.240528921 seconds)
loading group "io"... done (took 0.587700566 seconds)
loading group "scalar"... done (took 46.568137299 seconds)
loading group "sparse"... done (took 14.364691511 seconds)
loading group "broadcast"... done (took 1.173166637 seconds)
loading group "union"... done (took 13.079832923 seconds)
loading group "simd"... done (took 2.727040262 seconds)
loading group "random"... done (took 10.972996258 seconds)
loading group "problem"... done (took 1832.833909962 seconds)
loading group "array"... done (took 26.492163625 seconds)
loading group "misc"... done (took 1.173213492 seconds)
loading group "sort"... done (took 3.906423509 seconds)
loading group "collection"... done (took 19.410817178 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.73665791 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140813121 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.21303347 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.36051747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232232442 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148031762 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166226075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.589888661 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.963220929 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.266457242 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.149496054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.582977307 seconds)
done (took 6.269491602 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.274504496 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.380523587 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174185268 seconds)
  done (took 1.196132218 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07368332 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180404948 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110983654 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095700391 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111553177 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108200499 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109969579 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109226728 seconds)
  done (took 1.465175162 seconds)
done (took 3.655221574 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.544071323 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.899956888 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.564411327 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.166615955 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.197574929 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.174909614 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311101211 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162745433 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109184758 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105711914 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.215279956 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388190602 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.490530378 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.019689898 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.102387014 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.105808919 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.093405485 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.729420782 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079659864 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131322664 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.586028048 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112269055 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112489344 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121812115 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.202718077 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128340752 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.153209066 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102867953 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66124715 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100281412 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.226569192 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081422234 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170078754 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.247756665 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.07863877 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105764606 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665794793 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.181593139 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115689893 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098485026 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664363721 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081151877 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.235192181 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102538128 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.095337228 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187133404 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116744711 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096203526 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098413358 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083628817 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158292405 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.489610066 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105244361 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16616898 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.105595289 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692859256 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097333366 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153367194 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138358941 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.104848544 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080077667 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107857979 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.14948369 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.108973516 seconds)
  done (took 20.00811693 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156611653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163054701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09028451 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137865715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144472877 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.092761651 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080348516 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.090280159 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123837389 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.187046882 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135720617 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.166694238 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088227363 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083136742 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138702029 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247364857 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119112719 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118511209 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083557767 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103380441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137690361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093450364 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.104937625 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107521937 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164922691 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201998722 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107592887 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120827282 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098280085 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115020067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136965857 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146415135 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090196004 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083987321 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181896184 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118488092 seconds)
  done (took 5.211048813 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219664674 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.113772068 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.233651187 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175722358 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145718278 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.176992387 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138654875 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294062487 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.220336677 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180210967 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129072038 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094676354 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09097407 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077337011 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09101522 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.656011755 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177506982 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147096585 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.147857151 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101729803 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.093914898 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.377860774 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083000585 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093440826 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082968597 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090824777 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.21686284 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083198155 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.324027269 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115897552 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104881019 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126263142 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194712368 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134675131 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137691297 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083641634 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094698779 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215255674 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.13082255 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108040974 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073128342 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127013094 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132163519 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129453199 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095293707 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091355423 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.239513338 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.152954169 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096742957 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100936189 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.116686496 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197714731 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.135734301 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076528441 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.381049099 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096694708 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101261868 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09577567 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288694337 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136283661 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079426157 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091943702 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082869544 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096062191 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090210457 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426471365 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105208093 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.910402407 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079875634 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159069647 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096519578 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102573388 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099916823 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082593899 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114295073 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077759188 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091820408 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091769733 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075859053 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096904437 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115528427 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082251502 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091589848 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143348657 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114739407 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111612335 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120970509 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083735569 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09188341 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079392644 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12591716 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094412347 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080147906 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184168811 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085790093 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120064221 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097157377 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138022774 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094452702 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200813703 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079344757 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12058872 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096514293 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123599217 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10415118 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093756306 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096527776 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075116239 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094126926 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143330645 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094114428 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076970716 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09643527 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10753006 seconds)
  done (took 23.864509693 seconds)
done (took 49.719060865 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.509250943 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.117079785 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115986906 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115513818 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098604264 seconds)
  done (took 1.679159561 seconds)
done (took 2.364487326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.376092277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184517832 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118496388 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18277379 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102072516 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.188505635 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187673703 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099348483 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218393666 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097914176 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179736407 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09714751 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087331149 seconds)
  done (took 2.841607744 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096296629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120621748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08238113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111570448 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075300834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110944253 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10882869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117020082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110189876 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08709585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093084521 seconds)
  done (took 1.801618327 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093260084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114411233 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081905772 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107866611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076149413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108337965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090382643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117967924 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106979991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087504081 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091948861 seconds)
  done (took 1.758748305 seconds)
done (took 7.083999897 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.108947172 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.358830562 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146681935 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.195788098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.372143368 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.237348198 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.56471053 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.159409324 seconds)
  done (took 11.029191044 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116750562 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.140174955 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100034964 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100967174 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08333284 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096565846 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084073783 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098333095 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084259432 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098209992 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096774586 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083262642 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097631229 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083473306 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097966162 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084397277 seconds)
  done (took 2.29596981 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120926041 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118830701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106339001 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110767543 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08721784 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105031148 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105491363 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090266826 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100709885 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101887702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09552218 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108733909 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10680878 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087585951 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106185204 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110570551 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088609696 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105783674 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104892583 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092045162 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109382126 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103175731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093154352 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109879714 seconds)
  done (took 3.26496491 seconds)
done (took 17.267827384 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173616175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097134875 seconds)
  done (took 0.958905736 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14714614 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148482501 seconds)
  done (took 0.987043259 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110099097 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096152123 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137698041 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116328568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082113294 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095649828 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133415695 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096657896 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081507004 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096738348 seconds)
  done (took 1.744428592 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087185238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100893405 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093493209 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.157762953 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.094842696 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.101679506 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086906749 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102256437 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102620477 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083077173 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10502181 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121029076 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089400089 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124322121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101534365 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105566423 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.096922552 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102774338 seconds)
  done (took 2.553369824 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082290769 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097774139 seconds)
  done (took 0.875478274 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088252372 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097471898 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087316268 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101949725 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096544616 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082866663 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097111061 seconds)
  done (took 1.345782851 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.538882575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27395439 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372034841 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.119520838 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142224716 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374727366 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158640503 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112418536 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098456862 seconds)
  done (took 2.929270733 seconds)
done (took 12.087697656 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089764852 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.230840398 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.587815119 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122056402 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08155399 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154095792 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.301502889 seconds)
done (took 2.272521068 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356408469 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15377429 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088788877 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095007169 seconds)
  done (took 1.392746983 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076444287 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104039425 seconds)
  done (took 0.881219712 seconds)
done (took 2.98522774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079705961 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093463579 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079818015 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093641507 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079059062 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093426218 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080596492 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092845069 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113029144 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096214157 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.094360894 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080595837 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094413502 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080002477 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093401277 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078967161 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093598323 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078828454 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093337748 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081692894 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092951992 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078843109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094300867 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079287051 seconds)
  done (took 2.85415703 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103374958 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098992296 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100938457 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086977785 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10375656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100031553 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087176719 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097463118 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086078206 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098147491 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101307651 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087275661 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097245538 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087122951 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098096611 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103509773 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085494371 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099113242 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097278443 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088048578 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101690754 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082369526 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102108909 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10187613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087323962 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102696414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097875794 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083790745 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101646803 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087531173 seconds)
  done (took 3.564861086 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088741868 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092184875 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077849379 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104531708 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077736055 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096000587 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076888905 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094874232 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078986673 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09230935 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07838744 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09198246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07825881 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093770059 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080186435 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100330279 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113031458 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077553154 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093194529 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078099585 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098573911 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07700823 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095686717 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07728669 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091756202 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076492255 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092333112 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077650166 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094369067 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076526798 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099013356 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098890193 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077644163 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107496534 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084258725 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092181724 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086242752 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093414209 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078293301 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092942896 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076441729 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091581233 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077924606 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105117794 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096207738 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078585317 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092967214 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080389159 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092939918 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082287536 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.092182666 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077497527 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095958837 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079324406 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099808433 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077245434 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094758095 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076405569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095302915 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076777636 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092070977 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091338067 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085358269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09326702 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104873527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105927744 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07653857 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096564985 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097080821 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.20004364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095942561 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098424667 seconds)
  done (took 7.221241685 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083887146 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107466961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082244926 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097249128 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078200284 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094544987 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104304998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078372301 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097864949 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097915196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094558139 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081691384 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09848779 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097184565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07972439 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099414906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089359245 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095365256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078177766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097314562 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093575987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088455523 seconds)
  done (took 2.728855775 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23668459 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10429134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150327824 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115493492 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118828382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097336407 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102173556 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104090444 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085809783 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108091171 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11001274 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086785105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119571964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109035003 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106322362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093303439 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101598273 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108550309 seconds)
  done (took 2.7762778 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098780921 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099889851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12338017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085364534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099610098 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083587858 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106766289 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11503665 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084170909 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100131943 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109146562 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084017807 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099740009 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083618555 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099233587 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083609875 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100757149 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100740235 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093059088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108164526 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10870399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092901565 seconds)
  done (took 2.875674516 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100316197 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100359871 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.135414676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088471248 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0963331 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079374188 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106271365 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099193353 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092404671 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100582138 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08406852 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094851494 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108047261 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084867425 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108885077 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083551807 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099053983 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101128203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084525207 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095155057 seconds)
  done (took 2.661875127 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174169077 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097897358 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115346375 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128682512 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099595428 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114833365 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129233543 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115324561 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09965504 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130072961 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11498524 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099643555 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126668979 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123388292 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097615991 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127360794 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127632975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127398292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098758007 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115666306 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1298502 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114480042 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110223235 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115178371 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114741353 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099111648 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114155664 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122653022 seconds)
  done (took 4.002200346 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080331025 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095372043 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082082603 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096156352 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081172606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096612264 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081215912 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097090712 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080972469 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095976456 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080554106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095337944 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081331512 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096952852 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080390383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096773123 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080697574 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097421516 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082441474 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097211924 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080387046 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096060569 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080451224 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097091183 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080394426 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097234296 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081949951 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097194994 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080413492 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097392372 seconds)
  done (took 3.384358927 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093946595 seconds)
    (2/2) benchmarking "in"...
    done (took 0.123567013 seconds)
  done (took 0.939825585 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082964274 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116524051 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077408746 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103674402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108760889 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081918061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109086448 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091741938 seconds)
  done (took 1.497703361 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.149415733 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.148469659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088736296 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1112934 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.148913514 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.141442511 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166884902 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087933899 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103261346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094978994 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.144891263 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077297737 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105524694 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083310981 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105544312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11129122 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080491093 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109721486 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090534069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100090189 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103927286 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096599058 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106939078 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10980485 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08169593 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10832483 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092911181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113009386 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099667984 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091576317 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101783168 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078318492 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104454243 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104784678 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080502947 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.146439964 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114677416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083982777 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.105090749 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105140092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092778829 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097420697 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090009098 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102900492 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106770742 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087460899 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105508583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080119824 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095199865 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081418296 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097454038 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097511693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080140139 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105199457 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089250202 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115726781 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101068705 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083024148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098904935 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081766713 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101794564 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099543789 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090116507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102674977 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088999213 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10649224 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104162543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079869436 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09519907 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080665649 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105304798 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121197442 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09863843 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105334327 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087860567 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096994851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099867437 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089143438 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104702618 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107433084 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088394486 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107758762 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089775111 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100232608 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0992678 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090539551 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101961119 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085772294 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095716566 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117914393 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085017634 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096848528 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079965334 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106663646 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083634184 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102451022 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079304017 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105111245 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094909043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088833947 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10527438 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085614715 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109077212 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106244618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089482387 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105305338 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138936834 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084947625 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099447688 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078398623 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10679591 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097338093 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087726672 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095308522 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083699522 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101168149 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087956087 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107239622 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100606995 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089354932 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106196972 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107548464 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085638911 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094530015 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084370606 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104236418 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094436293 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108332396 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101504838 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080502912 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097034615 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088453255 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104145092 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10328492 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090096476 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10168082 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079937943 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097722091 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087175541 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10830177 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099351581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086137639 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106348192 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102983564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086070232 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106715927 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082252159 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097393132 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088205179 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10124304 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097467523 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09264822 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09985727 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085072832 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101241771 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108746882 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083846046 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10484323 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084462963 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104500548 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088379574 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096094317 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101062337 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085437746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110407491 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083513098 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097103048 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07883762 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106520744 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097175306 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087219579 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095573008 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083747605 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105839114 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080648092 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102827662 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08147643 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117100117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11300039 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088405608 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104173722 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10787627 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087215907 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102458876 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087245638 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106422535 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105183556 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089649972 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103949362 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08941779 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100595948 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080310045 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103314327 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107531086 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079374125 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097841707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079999893 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105000001 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093855733 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106239889 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10444904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084725446 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104066147 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093251787 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100312602 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104298256 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080102988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104043302 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094674976 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106920793 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090568822 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109184667 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101965177 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081041695 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110453211 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084961537 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104446453 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081141719 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097803451 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097192168 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089411651 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102881866 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083035296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097331878 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089840773 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108717135 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101742975 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079953401 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105392152 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09433688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099871151 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10462923 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085349662 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104749349 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116819004 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081067167 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10114305 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092586118 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106835644 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080956265 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104195089 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10271888 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083884952 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103419784 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086714215 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102976015 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090389086 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103556446 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078506282 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099992894 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102092833 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080173628 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099163169 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090784183 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102817023 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100803011 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094603443 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10702597 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088802296 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103733731 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104822517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08915486 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106999686 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085967849 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106982142 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08156638 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097703385 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101644082 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080007566 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099110267 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083551192 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106062353 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085391837 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104236891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103874197 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091009489 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101761538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08915027 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124375868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099265091 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097133619 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08726101 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104279528 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083858955 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101068384 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08202913 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108420429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105631526 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090998413 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101501281 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080591113 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106619643 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083200819 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10903904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106211092 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090498047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101055178 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087064727 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101819924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111190128 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080557283 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109715381 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087705038 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105208702 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101706003 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085260762 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100231404 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079651113 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102153718 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089032158 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10415741 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103756438 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087848242 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102915693 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083695827 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101884721 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106272632 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085824265 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108251723 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080465904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097413315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081676297 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106573678 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106191687 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09110513 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100954883 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08701724 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107965576 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086368122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097770888 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091607588 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109028542 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106475849 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094416087 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097721706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08460721 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113750896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0972828 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08719898 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100127637 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081024803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107800513 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10718378 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091947559 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103678133 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07991197 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097927708 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090159708 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103382149 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08088123 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099796529 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106086733 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083234004 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104072606 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089316607 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105245659 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089895115 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10735863 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104087434 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08623481 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107394783 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080026093 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09773099 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080107072 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102734971 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107586059 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08131533 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098469157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089238233 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102948376 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08487294 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105920071 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100866606 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09033169 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10513306 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085736416 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11144304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079984599 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104073685 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104243213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089015667 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097591327 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086042655 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104599651 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091691545 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108694877 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106199177 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088260352 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106180506 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082697562 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107117844 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08826489 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107031883 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09798487 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091119469 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110453176 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081436734 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10374601 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102421721 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082922522 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104400123 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089972644 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10434225 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109271708 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089268763 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103490654 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089263238 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107323893 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085721988 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108021869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101123999 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091260136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098147981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093325345 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104544428 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106814365 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084107244 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10046001 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088297555 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107719112 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087506978 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109099642 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108212898 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081098387 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098188837 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08297463 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103877067 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094268223 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110720891 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104112749 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087303135 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101368004 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081479868 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108806209 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081419539 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103603387 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105166834 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090678718 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103785838 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081943586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105562189 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10939223 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091497922 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106750228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082661383 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1065253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108455522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087105211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101113108 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084565174 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107876107 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10498985 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083783271 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09861979 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095708003 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110091889 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108309424 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084524815 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106349314 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085139775 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099910648 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090503347 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104648323 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107195394 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086462868 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106882517 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11458816 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079711081 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10142641 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097351835 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106151412 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090463423 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101804156 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102681499 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091382843 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109238044 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084240548 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100072748 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080924823 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103378756 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098161348 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082873649 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114724597 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091096152 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105150753 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105101065 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087498217 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099020052 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082207995 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09940644 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091254557 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102447626 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111908062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081215206 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098156786 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082798526 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10686394 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085846778 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105634451 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08135569 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100790495 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098988726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087022446 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112777046 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087785622 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108388091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10324378 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086802696 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100697572 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095259293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098983983 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086520511 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116063393 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107857003 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088276374 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107466998 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110352447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091873435 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101611097 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090944633 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104523904 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086492108 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110358248 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108193052 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103691763 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105292437 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097953666 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08969071 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103243345 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081756539 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113210611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091786786 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109770239 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105925799 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084424982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110337106 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092304282 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106333743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104927268 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086531055 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106290112 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085500271 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104836443 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101996017 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091852556 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108477807 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089449675 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11212332 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083452398 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116748272 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112552787 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091704404 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100767724 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081318233 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101210748 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083602893 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110169678 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100964096 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089850163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10467626 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088398382 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107455676 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089878466 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103990695 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109155413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089909896 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099123807 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090006511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104669785 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08860484 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100600015 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089713673 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10992126 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109405464 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094632227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108156574 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085779691 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103869973 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10670178 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082863078 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108220282 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087968535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102409247 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081219513 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108438112 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10953756 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088676275 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10966314 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091785821 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104255756 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.108685801 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092844646 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100243141 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082954718 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107893519 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083390857 seconds)
  done (took 58.946436086 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.161796161 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090722627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101844312 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082872454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132708793 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103539286 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082926459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102893884 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08376169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11814768 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101722619 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083323638 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125907431 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134621755 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130030236 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119024838 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0830364 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102844001 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082131513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104655 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127129445 seconds)
  done (took 3.028872555 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109251391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122245871 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121817894 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123589404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09560483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119539674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119961765 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120572046 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123700852 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097610592 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12309247 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120095535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115439598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.097717623 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116036893 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117342521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122816336 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095762846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121975316 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121837396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115931945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102316539 seconds)
  done (took 3.293562237 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096179189 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106810088 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091611033 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.103043162 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088551487 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104405117 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094390776 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103472504 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113284703 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087053402 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100608637 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.085900082 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110192772 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.085842363 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102650278 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084994189 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114312495 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108155702 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092452265 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.104301372 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128297033 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087115633 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105641874 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083309604 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117116499 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091463042 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.109151133 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089160056 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10209967 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108106873 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.08597475 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106575329 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089543993 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101901762 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082544326 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108349871 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088145377 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103964204 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085267637 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108972085 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.105660392 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090323857 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112279904 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.084803665 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105378627 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106290588 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089731256 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104659048 seconds)
  done (took 5.535487263 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127202768 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161200881 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095956549 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129978281 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127397806 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.1228453 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.110280127 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150597551 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093522642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110577524 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128786076 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12628129 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098910041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117324218 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115221474 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.094425106 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114270764 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091486554 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120999218 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110659627 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100326165 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114770282 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.128922768 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127651705 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113284068 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093516915 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.114011954 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.099656162 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128361997 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120814442 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115194414 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097835696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125731872 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113139695 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091353085 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.115501213 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127183631 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117268875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096384598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109727945 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094839161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116424508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116692359 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129389285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096134624 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114963595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111967105 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092225788 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126179236 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111058665 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.102341847 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129480049 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118655437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.115148233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099295319 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126394554 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113201485 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095581113 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116209944 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127739427 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093631642 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1182973 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127596458 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111390896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.101229118 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130050307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11457306 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098555871 seconds)
  done (took 8.689970113 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100681325 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13524685 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129403931 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129287353 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096473833 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115792682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114930547 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.097300794 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115064208 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122391199 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095385016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217548068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088989691 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122021312 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114948342 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11510725 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.096673374 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116142504 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115832892 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09623651 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115117871 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128639139 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096481214 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127729348 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130671305 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10786787 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097138539 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115860527 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128895054 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114228164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111566467 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116473058 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115167787 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128720308 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130543342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097580131 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104509043 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096216302 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117474194 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115686774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0880827 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127538494 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116038478 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10835147 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097375014 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116156649 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128412486 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130455929 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.103910648 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123192335 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115399746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127120232 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096396309 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115876021 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128744889 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137991617 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127800687 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12823381 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097572677 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127852422 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127371183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.1363153 seconds)
  done (took 8.024059662 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086657213 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104788305 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087194099 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104592002 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087266129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105041429 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087435846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105102183 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086372231 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105837669 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086697096 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104504463 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086809084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105279267 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086611432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105077054 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086504965 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10582591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086587782 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106091504 seconds)
  done (took 2.704463032 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098849049 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128296521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08961794 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119746884 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109605335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098014705 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110082672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110594077 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09144404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109177127 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120039078 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10202081 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109442453 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118067754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102160439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117832757 seconds)
  done (took 2.520216258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.113269763 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12193431 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.162998457 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113549539 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087496808 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11820072 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106327135 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086629983 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105023775 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09641974 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11439249 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097646307 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108080898 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103984171 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.091244848 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.113426205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085638905 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113443768 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086367285 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.183898171 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09564303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112717621 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087524891 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111293594 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111463657 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095871821 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.117516753 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10637785 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088619672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107196849 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.094261743 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118732583 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105559883 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.095946065 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10478072 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087393456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106844018 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087890428 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112886116 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106944892 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086020458 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112082135 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087040593 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107763485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085904772 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109080642 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103656443 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.098357547 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11195526 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092075077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107105205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116051381 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.095795402 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119175898 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11729351 seconds)
  done (took 6.603012842 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104675326 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111068387 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095221685 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105757695 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110076765 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099768829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110845325 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093463129 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112407447 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084150268 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113455271 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110745109 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093671163 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110292942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092504237 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11224803 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103825207 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092767819 seconds)
  done (took 2.645910369 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095760732 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109811511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095807961 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109750335 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089897988 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109842302 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084295148 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107135583 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105332666 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090419605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109902529 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090099328 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104082199 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089514006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109985128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089975998 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10977238 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104428061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091259346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10533603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090847397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105281227 seconds)
  done (took 2.994715074 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103314305 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.16480545 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120925709 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.175006847 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109515804 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086862465 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121380939 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10957687 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.106950379 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110747011 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106345909 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088562847 seconds)
  done (took 2.197336473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119690717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149482744 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107272409 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091678213 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122005742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114393837 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097316669 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116742125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126216506 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131854927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096155852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126855094 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126027399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128181137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121109797 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103612962 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116039174 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115905043 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09206733 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138315477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117390791 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126710742 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096628112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116204588 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115799319 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109261253 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127392373 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130910327 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116067615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126457399 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101930704 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117694809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125727947 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130739746 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090677324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127830798 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116377728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138812931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121794492 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110163121 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110996606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121994691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106009821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125163056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128784742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115281096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123703159 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098184268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115959154 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145009164 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121759692 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127718678 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103221888 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127808346 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127222452 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144889479 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13198681 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128298049 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103073879 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131648965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130629614 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121601199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128955551 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130432023 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101014087 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129963489 seconds)
  done (took 8.688327981 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136095885 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111223939 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117062151 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131743641 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110378142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118556943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115769234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095529275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118051891 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112514052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166727747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097119559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129565283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129290351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118728761 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096801429 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11820201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128895294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111860339 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144910838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09731282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129635478 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129693235 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128915914 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131819103 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122630695 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098019969 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117245726 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116665042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099602745 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124658727 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116467654 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109049096 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109435531 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128719343 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115824161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097897513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125268209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116074637 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10241725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129536101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138074189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115934938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116519389 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112223779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116884909 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116524439 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09230243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118000544 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112542713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112648646 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133248838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132827839 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129018322 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11659084 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096197059 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118318199 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118409462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096636264 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123672587 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128574062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117814766 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145220256 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096328214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118336567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128794079 seconds)
  done (took 8.612958578 seconds)
done (took 159.694334984 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150281163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.173138555 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146101458 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149145059 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103966762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118460962 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138703581 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14915333 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083280671 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10571418 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083271846 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110835295 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169698972 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084896978 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103623401 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.087624162 seconds)
  done (took 2.754648894 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203799276 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.298161617 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125315403 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087915834 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11461374 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107036934 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089567112 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110836045 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086595831 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119849242 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106245368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088320388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119862713 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106498344 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087066813 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108025694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099139096 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108723746 seconds)
  done (took 2.976228236 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111942554 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154967927 seconds)
  done (took 1.075199038 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123167569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190289369 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31291393 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165924621 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136398409 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130597734 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16580539 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10660869 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197218422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13025976 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130139835 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111544619 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137199147 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098025563 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123726168 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111768853 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120096099 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121490538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120029333 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094040931 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134947745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.112844923 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098876194 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.122492014 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188727014 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129647519 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112646662 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09458462 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114181573 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099641239 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120398328 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129945382 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128926395 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176603298 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119087306 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190846826 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10073951 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111606884 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120168975 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092026163 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116737783 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115029281 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109410537 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112514004 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112091128 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101075882 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114572709 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092417541 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122737956 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12193712 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12094728 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098831186 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191840573 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122577578 seconds)
  done (took 7.787858271 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.902376156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.134918499 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113547281 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.020132975 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145075249 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127099959 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.881339057 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136002774 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249739245 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.924054271 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111405929 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125045517 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252103212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265625978 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.214410166 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358967804 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.762888217 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110638918 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144911201 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159397679 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120484962 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140205457 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111266109 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441184629 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091924431 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11049007 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09608406 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12389541 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192135067 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089342915 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113129735 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195911523 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300488702 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221967181 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091235284 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109980319 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088273363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.200529284 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291616355 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.238492578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180580363 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084789803 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110610634 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123644148 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13311998 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085915353 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.197504327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186685155 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.205797904 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093454245 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122446797 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119636209 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101847422 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.194251622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085846643 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380777388 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366082074 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087905364 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12109795 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130328632 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.288784671 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089252321 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.268766218 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118763519 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.235309311 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109279773 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839737307 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180932556 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114148536 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119873134 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097453994 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116608706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121609185 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173770713 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383998908 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127209302 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093350777 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108580213 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241557901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088902095 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109242053 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17711048 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11260762 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09801215 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127900346 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12473145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.183027457 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.283542219 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124965044 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099376622 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117120379 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123857215 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091072311 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.244228522 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.241195114 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17052452 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.24562554 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12345875 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178597674 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17893102 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123422528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.204903211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098091003 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129959083 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125355017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.238261368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150241699 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110082649 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095276361 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119201818 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153066669 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113256329 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097912287 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.201676593 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458529066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199747914 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087737163 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113616015 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121639767 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176763866 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119568124 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28188629 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100531395 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.20192216 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098299919 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108066252 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119783137 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177986373 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127623491 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120292137 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102797623 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120801988 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.285269149 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241767839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105338911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256386861 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187848389 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120784869 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186828822 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121157777 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201593166 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101154522 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122748344 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112600312 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834729105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103876561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118903699 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116269664 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197070561 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088499152 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111050305 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088691726 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107419664 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832216197 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091283829 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108486332 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110441957 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099900428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119781422 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117398018 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095203147 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195558396 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257128032 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123728748 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096977873 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110533409 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174133692 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113269478 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.088593833 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110157156 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110108083 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102278459 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114903966 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090635459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207139431 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17156662 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.2423828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.555021497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110549337 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089354921 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273885565 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089506542 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333602197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1200595 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248819472 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17990634 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107965647 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361707691 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.204430475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198023405 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092878736 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205882558 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086414384 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119254192 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174688548 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110591878 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11902804 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172708886 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128192613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12546461 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198479028 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090015781 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261256313 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086942728 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.203864737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091641672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124449749 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331592678 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110352725 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13155598 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17528765 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115844511 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089829163 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.618801473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089381716 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124225763 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120541216 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.247880568 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.178548437 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121133115 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119357245 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123670914 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176671943 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.222521307 seconds)
  done (took 46.373928037 seconds)
done (took 61.77164703 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320037263 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275928317 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.332381574 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230113618 seconds)
  done (took 2.070811809 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222322954 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15988519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.187065706 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109314489 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.195973424 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110395864 seconds)
  done (took 1.817963124 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.530279439 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.430148881 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.342715131 seconds)
  done (took 2.137739903 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263047966 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290095619 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.360755389 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.484953688 seconds)
  done (took 2.343023008 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.249266667 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133159562 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128572631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.17868689 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215151819 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.219045461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150779309 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166295261 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.114830796 seconds)
  done (took 2.442148707 seconds)
done (took 11.649838564 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.354973034 seconds)
    (2/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.195840385 seconds)
    (3/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.333881922 seconds)
    (4/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.152433658 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.233883819 seconds)
    (6/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127057657 seconds)
    (7/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.174595608 seconds)
    (8/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.328213959 seconds)
    (9/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.224859614 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.16206332 seconds)
    (11/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.228548841 seconds)
    (12/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.293438554 seconds)
    (13/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11889196 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097135881 seconds)
    (15/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.218994755 seconds)
    (16/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.276126784 seconds)
    (17/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.142177745 seconds)
    (18/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.226643744 seconds)
    (19/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.331310002 seconds)
    (20/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.185256994 seconds)
    (21/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.160934849 seconds)
    (22/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.164323264 seconds)
    (23/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.154613196 seconds)
    (24/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.116083303 seconds)
    (25/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212771863 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160627982 seconds)
    (27/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079858729 seconds)
    (28/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.324167014 seconds)
    (29/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20501072 seconds)
    (30/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.149977455 seconds)
    (31/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.135108208 seconds)
    (32/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.212056031 seconds)
    (33/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118533195 seconds)
    (34/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08670653 seconds)
    (35/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129579846 seconds)
    (36/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.209375335 seconds)
    (37/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194731219 seconds)
    (38/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.14069983 seconds)
    (39/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.11804282 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.148781681 seconds)
    (41/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.219330114 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095725584 seconds)
    (43/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.283459551 seconds)
    (44/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.422251481 seconds)
    (45/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.101872838 seconds)
    (46/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.103410864 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.148641278 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.150169064 seconds)
    (49/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.162128268 seconds)
    (50/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.108455061 seconds)
    (51/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.248860241 seconds)
    (52/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12866548 seconds)
    (53/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116898041 seconds)
    (54/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.144971522 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120485473 seconds)
    (56/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128019853 seconds)
    (57/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.107423577 seconds)
    (58/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101912376 seconds)
    (59/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097106897 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134719751 seconds)
    (61/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.188997819 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148250648 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118301363 seconds)
    (64/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.274186885 seconds)
    (65/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120908495 seconds)
    (66/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127730837 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094445086 seconds)
    (68/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192962947 seconds)
    (69/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118846581 seconds)
    (70/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.093687295 seconds)
    (71/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118900884 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096158292 seconds)
    (73/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115426581 seconds)
    (74/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.131979054 seconds)
    (75/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.212106267 seconds)
    (76/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.230785325 seconds)
    (77/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188349309 seconds)
    (78/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168079251 seconds)
    (79/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.100588111 seconds)
    (80/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112461316 seconds)
    (81/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103245759 seconds)
    (82/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.175618711 seconds)
    (83/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.159271891 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109648144 seconds)
    (85/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120780228 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114246371 seconds)
    (87/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120145164 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082368559 seconds)
    (89/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190175048 seconds)
    (90/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102512256 seconds)
    (91/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13261401 seconds)
    (92/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198894893 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118301222 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.151738422 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096172767 seconds)
    (96/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190353796 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116580877 seconds)
    (98/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151392914 seconds)
    (99/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208737951 seconds)
    (100/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079799335 seconds)
    (101/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.203706593 seconds)
    (102/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079519959 seconds)
    (103/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.102399785 seconds)
    (104/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.14179807 seconds)
    (105/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207919781 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116499219 seconds)
    (107/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.105975705 seconds)
    (108/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102160719 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116843767 seconds)
    (110/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.119897457 seconds)
    (111/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101960187 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10416567 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134974392 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108480523 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097235591 seconds)
    (116/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116998406 seconds)
    (117/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081078612 seconds)
    (118/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118382357 seconds)
    (119/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.128647064 seconds)
    (120/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119445871 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126808488 seconds)
    (122/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080514028 seconds)
    (123/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118530835 seconds)
    (124/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191214553 seconds)
    (125/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.09701473 seconds)
    (126/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.157928416 seconds)
    (127/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087215946 seconds)
    (128/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131809424 seconds)
    (129/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.079533554 seconds)
    (130/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117738012 seconds)
    (131/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.079536508 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116442323 seconds)
    (133/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.135145342 seconds)
    (134/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160802471 seconds)
    (135/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191510953 seconds)
    (136/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.079472258 seconds)
    (137/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110127331 seconds)
    (138/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080276176 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118758697 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126171828 seconds)
    (141/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09840484 seconds)
    (142/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.125865301 seconds)
    (143/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098658977 seconds)
    (144/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.114018066 seconds)
    (145/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080947646 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118699747 seconds)
    (147/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.086058226 seconds)
    (148/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.174170745 seconds)
    (149/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080780898 seconds)
    (150/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.108609526 seconds)
    (151/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096757571 seconds)
    (152/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.10761587 seconds)
    (153/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081664425 seconds)
    (154/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1003754 seconds)
    (155/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081348346 seconds)
    (156/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080164361 seconds)
    (157/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102884472 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118003475 seconds)
    (159/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167989683 seconds)
    (160/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11503732 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132779479 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.110775715 seconds)
    (163/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115075339 seconds)
    (164/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147609757 seconds)
    (165/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.12912412 seconds)
    (166/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.078427556 seconds)
    (167/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10369273 seconds)
    (168/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080865865 seconds)
    (169/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.113398797 seconds)
    (170/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081141984 seconds)
    (171/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080736556 seconds)
    (172/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123169097 seconds)
    (173/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080569054 seconds)
    (174/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119647709 seconds)
    (175/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.171492403 seconds)
    (176/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096568131 seconds)
    (177/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103355699 seconds)
    (178/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101625001 seconds)
    (179/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.101875868 seconds)
    (180/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082721391 seconds)
    (181/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101692434 seconds)
    (182/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079809998 seconds)
    (183/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.078571986 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117605678 seconds)
    (185/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102629729 seconds)
    (186/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096556402 seconds)
    (187/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.119798415 seconds)
    (188/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.104570612 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118142649 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087752762 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118643269 seconds)
    (192/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080229112 seconds)
    (193/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119519799 seconds)
    (194/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081165917 seconds)
    (195/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103056126 seconds)
    (196/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08019494 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119427841 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132303761 seconds)
    (199/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088748062 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.131721052 seconds)
    (201/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087956133 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117178591 seconds)
    (203/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110633817 seconds)
    (204/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12288743 seconds)
    (205/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.08036232 seconds)
    (206/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110722163 seconds)
    (207/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121488461 seconds)
    (208/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082106813 seconds)
    (209/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080578839 seconds)
    (210/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102235333 seconds)
    (211/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081100382 seconds)
    (212/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102425522 seconds)
    (213/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.144696556 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.134195338 seconds)
    (215/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.129256272 seconds)
    (216/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080844074 seconds)
    (217/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110652092 seconds)
    (218/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088716508 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.127125348 seconds)
    (220/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080604887 seconds)
    (221/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.101258877 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095933876 seconds)
    (223/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104150564 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095808065 seconds)
  done (took 31.270625777 seconds)
done (took 32.118794744 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.489903408 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102753077 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124146328 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122326744 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.176516462 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101585824 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.131863925 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.127306378 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105565389 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119922157 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.112408412 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105065444 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122451894 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178476326 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.125344148 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093633262 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.113908144 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.104965457 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129142353 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132253441 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.177562126 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091528127 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12839204 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.09148407 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.201617017 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092479902 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122580761 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09987127 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128848936 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.12021583 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099627955 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115117935 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109214651 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130324749 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11265659 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09876577 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112169676 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089986469 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120177853 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.097653348 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128167788 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120666904 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103080412 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115213652 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097287327 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.120906047 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112725719 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10363972 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112992016 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100750967 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115947276 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130283519 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.09844313 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112448551 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090084754 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116115884 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126463487 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089945617 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128418821 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089665483 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11600511 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089428929 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122536706 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112393867 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096744278 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.114425804 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097450138 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123813067 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119343461 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093769831 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112542607 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09713286 seconds)
done (took 9.554556513 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096884416 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17309641 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176227278 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.182697152 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146819423 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.131791648 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.135073013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12179218 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.132307197 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13923145 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.152623368 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.120576765 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.207849442 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104312434 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.131669528 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.121733607 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.105230818 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.127604281 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.186379729 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13989215 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147947167 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105958514 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150601902 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138055556 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.098422818 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.143772558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122769143 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098714657 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122801256 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136716472 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116125053 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122140313 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121310757 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118048707 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13182951 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125970017 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108111649 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122309186 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119474197 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.096036899 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133482992 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137496124 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097088749 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13083023 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12225211 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105337236 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128695917 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127268704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099967314 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12416728 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099914933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149184349 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12787493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12776691 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104585544 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126009152 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104599588 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128713138 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122064781 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.103427143 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119729819 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121449442 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.101380267 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145900681 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122994173 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104891511 seconds)
  done (took 9.283010286 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117299211 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.154540797 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129916064 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130739579 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.104631404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.109994533 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088429556 seconds)
  done (took 1.7299244 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090083189 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181062873 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.17917696 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178898503 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.172208141 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.212706334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110921266 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.112984421 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.147918592 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.101534693 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.178713146 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235295981 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096125072 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131828015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183213459 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.114120991 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183809209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089178166 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126930564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.17978678 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130890565 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142762397 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.106191422 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114210725 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.174809064 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091796725 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259216946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129779954 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096677389 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124397852 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102724406 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.219757595 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.175271733 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.104620419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118527883 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.177104255 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.175048845 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125903134 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.191523933 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094880626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.173903918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.126744431 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126742846 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.103362254 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125754453 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.161533626 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130143143 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10502577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123548394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182003435 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126342788 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.175938872 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098489334 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.124994794 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.125528197 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104137586 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132486275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101883272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180858399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129834719 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.174335545 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.175688125 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.174494266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.174690896 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13756676 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.175025612 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.173524069 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124284657 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098023397 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127635798 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.176500806 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.126210733 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125325026 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.138130148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129583783 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.174442755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.175410347 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123368044 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102759223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119739858 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123939212 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090695121 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.164133025 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124859339 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099745639 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134577269 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127708154 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.103410603 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.118375044 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139064849 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.101781548 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12765247 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130970092 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100992137 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13219681 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.178101034 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127669155 seconds)
  done (took 14.473689987 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092944501 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114500398 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098579654 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117465299 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091228897 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115547551 seconds)
  done (took 1.538666304 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12372406 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12772033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.138095813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105160578 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183715423 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.181637575 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.208750458 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10188269 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143774136 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137679575 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.182723471 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.185905433 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.181733252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130409747 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.184988302 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105426733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.208368058 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101651571 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137039193 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099161398 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133399278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129928076 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099140036 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.173955429 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130842571 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129229284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101919562 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137862759 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134777272 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125226469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.106147123 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12726557 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098719581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125253966 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.183945811 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124000019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122704559 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108990071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130297298 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127451133 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.185021485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099563605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135822081 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132290121 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102254847 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123662063 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131650809 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100404727 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.208015281 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107549137 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132205149 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128253496 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105912709 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132735972 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122356843 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102252435 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132159676 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.184926217 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130322406 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099059838 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.129262965 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129300128 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101913222 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.131059852 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129395317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.107105685 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123686153 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127321217 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100704106 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.130006101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132790191 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.105244011 seconds)
  done (took 10.475008453 seconds)
done (took 38.392770553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.158093772 seconds)
  done (took 2.065592965 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.937585698 seconds)
  done (took 1.847051651 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.686413666 seconds)
  done (took 17.632827468 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.549298355 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.6446079 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.950812791 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166361568 seconds)
  done (took 3.22070385 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.96539411 seconds)
  done (took 1.898158461 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.329823201 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278106801 seconds)
  done (took 1.524892735 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.835489149 seconds)
  done (took 1.761514066 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.371595927 seconds)
  done (took 3.29581765 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.373093985 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190863047 seconds)
  done (took 1.498272369 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.651785624 seconds)
  done (took 1.581426079 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.813064708 seconds)
  done (took 36.744319175 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241873696 seconds)
  done (took 1.185393932 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305617568 seconds)
  done (took 1.237298455 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.507114642 seconds)
  done (took 4.440236272 seconds)
done (took 80.855663216 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100811194 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128700814 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104496223 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125742618 seconds)
  done (took 1.386593877 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111550785 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128925544 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106843395 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127440773 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.13704295 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103534125 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126581584 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.133820131 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.10337959 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129194636 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.102512667 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.128765038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12812423 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101218768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12535758 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128445292 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106235068 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128215031 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103772137 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129009286 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12588285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103645198 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130213271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103196531 seconds)
  done (took 3.789633043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102481072 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119520111 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097510934 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119533696 seconds)
  done (took 1.380828864 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111211248 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142970487 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.143155284 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.110634791 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14412104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.142953533 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09865601 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.123354601 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102564087 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135415075 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123982742 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121452865 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.143252526 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118962368 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112352155 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11677964 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095510068 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144141395 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134867838 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.112215944 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124211569 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.133258735 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108080798 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139632609 seconds)
  done (took 3.921509619 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.209056363 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.116558747 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.152141798 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178656365 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.153384674 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.098925928 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.153177585 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132600757 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.108652173 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.130908549 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.130793364 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.186306218 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.104533458 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130849904 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.129286434 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.109316224 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13314857 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129135133 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.1074808 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140083479 seconds)
  done (took 3.675416298 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102793353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119298745 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090854631 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120153483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102130708 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12347827 seconds)
  done (took 1.602611017 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091605068 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113493987 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09006901 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113492706 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094523973 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113042356 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088727739 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113821088 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09050846 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113626562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089110949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11271784 seconds)
  done (took 2.168562608 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.298725499 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09391907 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122705463 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.118490362 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.099315747 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117941175 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135346386 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093065473 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.250634646 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.093836753 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.137229004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193483447 seconds)
  done (took 2.696636839 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225112482 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102977878 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283691175 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385624911 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168250271 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177569566 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283901294 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177065986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201305235 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147805293 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233328624 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140534439 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164232881 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191515525 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150157759 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.197157004 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187959371 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216449776 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157367524 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244093625 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177139062 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17870549 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194095173 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161292344 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144965655 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169548232 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101277362 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137960247 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186193399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181091958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187800999 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158191315 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150515572 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215540502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260693801 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190773296 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.348815044 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118186415 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20355765 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.21887673 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258750518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150721041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210908268 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164893311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139802663 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193678135 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16612482 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.193635195 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14159776 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149342577 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201032524 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18842078 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.223846641 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122058131 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332172978 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15660403 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.131404251 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214262909 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206053606 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204709512 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178066844 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129299906 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194477172 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192895296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193664957 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156282976 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181930152 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134509205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187878638 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208347528 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218716478 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179162085 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.199246256 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141660663 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17497418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181875084 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163532846 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190722753 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170565863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100429496 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15926658 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147463582 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133691331 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196771683 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104185648 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218107534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142900785 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.197352673 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242245549 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169314823 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171387185 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174525344 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18083464 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155333393 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101260345 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15626165 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.173742647 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16757012 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139524094 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166097888 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127020833 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136136131 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160966454 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129754611 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167971295 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117839929 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179247418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174472808 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139607989 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175060984 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158423462 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171131144 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183816275 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197465617 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140660921 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112953221 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233276631 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166724721 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.120606031 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189319908 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228049183 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175433902 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119713124 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183292096 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237880884 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150731836 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203131227 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15213449 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115744075 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163889607 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170305813 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168747276 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164590118 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135716886 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163170506 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209692918 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134121732 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119028823 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186287695 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136979894 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134185899 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125059199 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145028811 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150855088 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.161919412 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149684102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164811549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168339629 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137547719 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171332049 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151072167 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239679324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113524764 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17213445 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157066185 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127507293 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196417373 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198739496 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138603286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198016475 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.182814374 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230926793 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173990286 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110855616 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195523815 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137183411 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128741896 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179015063 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171978459 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173754647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196227421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202206984 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180659269 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166183977 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158136862 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178164363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186805215 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168992016 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155731748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173761741 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180046574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130622528 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132612318 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110324474 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148266997 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138070739 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113843322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221666357 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176272978 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197594384 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171701122 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146872989 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19567872 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.135375287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17718747 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1861166 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146297485 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201307921 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193033477 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178341808 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152036645 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184442431 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10152174 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13391331 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14381698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181160568 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138949887 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116613463 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153310033 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195855687 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186280372 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157100237 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240609232 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180415706 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205110611 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130637817 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172230509 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182572167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166970065 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168680614 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138643229 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172455223 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190618721 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153251294 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207551268 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174583346 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179614866 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242657197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166264836 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110879066 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158510931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178614584 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149418565 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176762738 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154716709 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142692932 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16336847 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.120892943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136833217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192955835 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152960447 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193394388 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.168286814 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214597607 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10592313 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153544413 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172683291 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15330629 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.097749429 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181813539 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228999922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156449898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168780678 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188232921 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137246973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313632165 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205626816 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198459301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147633751 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152482654 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171795032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169779214 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175827649 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197116852 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152559613 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193621008 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168133427 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.124374577 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143406429 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157455997 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160958035 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164311325 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143556001 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.168112965 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124232914 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22482162 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126980348 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169776608 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175737299 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.156162622 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.166798547 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149236695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216439256 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168747242 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191236874 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165703676 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180446573 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199801736 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130615579 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106801925 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137114565 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194911567 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139648836 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169158922 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19051506 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206292491 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170009745 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206994302 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119726682 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133074878 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170684388 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155999847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208289083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151711679 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1476131 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20662146 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161278827 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110810751 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174685256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313687645 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128185161 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213412241 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.101907457 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282464049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133595608 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111575049 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170625087 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208949881 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13012872 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192389554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177785103 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15518559 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172264524 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145686702 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198024124 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218543689 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209561412 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188218338 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12439974 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169052647 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200337524 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189867428 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124350387 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157190123 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172729945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195741484 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.200493489 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14427758 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173443595 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173479159 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169661088 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188806977 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142526839 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199015287 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138818067 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179315029 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148898915 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10693314 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167937318 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21815559 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114751723 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213786366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141535767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139139862 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136701606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162246862 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166967214 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12575121 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138840494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19246645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135475845 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172779067 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19268787 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13528244 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139453302 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154547871 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140861841 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152990644 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153026774 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116428207 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177916864 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197521304 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.142138013 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189855625 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184769519 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176743028 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16877347 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15329582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.67312234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109406317 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22021777 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129243102 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232447445 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131165105 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177730685 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171473521 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158110514 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180107908 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158521359 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231937872 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17872672 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171168558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138712918 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154563388 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127023863 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142695248 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16233857 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173505588 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14924043 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.11834809 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171176868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156428296 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154688039 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147378764 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198585063 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159014371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198998783 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195615676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14904413 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178004177 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189252835 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13663664 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175499303 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185517637 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15216583 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163769284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113694473 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146763565 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19160714 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130727026 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1719264 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168433068 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145219058 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172554509 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146382299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170636871 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152890844 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171392283 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135440969 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166521743 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141031771 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141540581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136787808 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164445435 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170417258 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167336732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109533666 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180500553 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194107194 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102577503 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142624668 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290155513 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166028876 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233452813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13555446 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145079508 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152686754 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167813875 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165247347 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169757279 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11120375 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13991311 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141925973 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188756593 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167959438 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141230751 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217608581 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171229184 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203367801 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.125843498 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276356258 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148262108 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165545184 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138752106 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111422928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150333117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141442203 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153915334 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199418214 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19111715 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162522392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15215128 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110141382 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130959113 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113359406 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173187492 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165268668 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16793629 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15512477 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125468129 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125895253 seconds)
  done (took 82.556828665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152063272 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.145993573 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15221744 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201306398 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172296237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263085237 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212118139 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232504848 seconds)
  done (took 2.567080525 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129945551 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.115111887 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147579483 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128569193 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130907474 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.404884079 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143439772 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129372592 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.189859755 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141629519 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12478757 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.660829195 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125628856 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125811885 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.103736119 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126619107 seconds)
  done (took 3.95462975 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.347295042 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536939283 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.834704132 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.252805214 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236826569 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185162319 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.730682603 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.17325807 seconds)
  done (took 12.333489185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133727756 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147456392 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.341436859 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.215486321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.166922425 seconds)
  done (took 2.04717656 seconds)
done (took 125.009451681 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106822641 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.149625509 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106596808 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15040132 seconds)
  done (took 1.541415506 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.151492677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117944908 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091561123 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115983878 seconds)
  done (took 1.516996377 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.52316562 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088419072 seconds)
  done (took 1.681684374 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135191952 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151187473 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.151372566 seconds)
  done (took 1.483957756 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114985928 seconds)
  done (took 1.150980001 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10533039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127628343 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.181951952 seconds)
  done (took 1.459382165 seconds)
done (took 9.874013769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127683877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426885719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418451103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113224861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727401001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411274666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.015233594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160555122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170789336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121556218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11476218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701821192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028657262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343601589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015722721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33729623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706402886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122450648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10287371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123883507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992336935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121865815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122288289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098047962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702280995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400403493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122216094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385696131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094976724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127474226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38587027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122402504 seconds)
  done (took 16.998195502 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141476896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187597787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13168669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0961372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12775274 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096108714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135374987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136979737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18772776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094626408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14386177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121621415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100194336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122613119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11768913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120885777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09754161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124689315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130434841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096564296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142668388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093355776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124487272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123384717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09521433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136268359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095324391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137320297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120948955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101470088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128413354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095227919 seconds)
  done (took 4.949995405 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145366152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197082669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132465452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.157724768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173576289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098388966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212331974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162128811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188477553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121520555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116115732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122714471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161496002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096010084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14671117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095332889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125227413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097698304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131749677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124471093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115979157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122913655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096405607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126885892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121181564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110784068 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12349734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135283372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096810242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127261686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102348221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124273991 seconds)
  done (took 5.263202688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108651764 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136737553 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116994633 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146245878 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.130573452 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.108408445 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.135356091 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101716603 seconds)
  done (took 2.033872931 seconds)
done (took 30.286946257 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120735682 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142200048 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113210601 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136025919 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194670269 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097394717 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.141062687 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097107858 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137767181 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115292289 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123414158 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.127145224 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117258602 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131308088 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.177897928 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110467775 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.183484462 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.179371784 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130218474 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10802317 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12962806 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.185425115 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10531184 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.130432992 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.188569472 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098669633 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.175494176 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13465681 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13106459 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098636807 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.177489379 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133676919 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10120248 seconds)
  done (took 5.514652807 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.194889767 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.204914472 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.096942359 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127108579 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.20685652 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.096932427 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.193496519 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.125732671 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.096973663 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.126089847 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.096275182 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221671175 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.202014819 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.216955434 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.238112264 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.203539617 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.19201066 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.204508517 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188769551 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.206482598 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.195227974 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.09642626 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.202924798 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.207935625 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.124954194 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.095678771 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.25716927 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.200402165 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231745173 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.191644097 seconds)
  done (took 6.304149493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110486305 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.1407689 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121042859 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19555065 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166277793 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.138425021 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109998069 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14928621 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.121409559 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123448705 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10586167 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161034535 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142981016 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106057511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130432509 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143039459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122129716 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125706377 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101996355 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144980639 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142267287 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.114443017 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140641104 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.105692087 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.125301681 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133737399 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10209518 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139032731 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103067983 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133562416 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100264479 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130336257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127080471 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106223741 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128932922 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109659119 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15101791 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134899831 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10899538 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.160421267 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.133798355 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102018058 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146380261 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173531279 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098651927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136996297 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110211506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135250044 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09464141 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144361624 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136743882 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098527801 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147017948 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.095111038 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123749427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102749545 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125976272 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126233902 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105834434 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129187911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.122172974 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132249649 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130286682 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.10000822 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129063109 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096309735 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124213119 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103333503 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14917254 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128626732 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.129409693 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124941215 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.107345327 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133740983 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102252905 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133911041 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124617423 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104024473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132631532 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102402599 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133009686 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099753374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128537917 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142593364 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.118466338 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138044464 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.135684805 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.106859442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.128086356 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098322297 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138808471 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097483594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129372861 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.133407795 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097956629 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128334581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107523812 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13436289 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095236714 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143139521 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131454484 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096606166 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141663972 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097905881 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129695553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105792726 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.137160142 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124014586 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106497778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13594516 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09497241 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.130667969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100205589 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124681567 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141465849 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107452934 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129637467 seconds)
  done (took 15.577974289 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.294606031 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.304059519 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203533526 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.391566112 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.121189073 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.191803795 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300937154 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.223415074 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126405559 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170391525 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189160737 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.231637952 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127423321 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.156695855 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.275500923 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365534114 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.160033227 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171971879 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169269765 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.151731123 seconds)
  done (took 5.398688837 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119903351 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.168365781 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.158285428 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.158511876 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103941919 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139599389 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097320819 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150027897 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.133983459 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104156642 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124898584 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138821302 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108065828 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134804196 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116543891 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.173058584 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.13168888 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104393721 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148151506 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131024279 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.105217663 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15485503 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.138019287 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.153157559 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109349835 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.141387898 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095296437 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.132171464 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099798095 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131070082 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130911301 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.117917544 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133223552 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.102720461 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136143373 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.137533831 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.099742132 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12550264 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.098962405 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129629161 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.11467001 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.136991263 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100272534 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122176095 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.111608731 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129294529 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.109709683 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135951426 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137528706 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111911313 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137106674 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.134884898 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106168848 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.146980884 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.099069452 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141239028 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.140424203 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.110297775 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.133821895 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095942266 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125382955 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100141157 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130287998 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.138187389 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.1071372 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148675457 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.141747244 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096756465 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.135622122 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101404689 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131205283 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144352132 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.126748092 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.132321564 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100143229 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.148396043 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130528731 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090468015 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.138084951 seconds)
  done (took 11.023496412 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128915602 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132512549 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118727572 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.165029267 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.147036966 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102851244 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132987632 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.117069617 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.140050223 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.140250916 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110481158 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14200353 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.150894472 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.111933784 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130781644 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.112465953 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137775243 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172075564 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117033906 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160490755 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.144999151 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102239001 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.143059404 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.110146773 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162409193 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.139609222 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.130834535 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.136277126 seconds)
  done (took 4.823738624 seconds)
done (took 49.696313017 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.251786665 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.370616278 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.153166514 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.150414837 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.183231142 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.182321522 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.153259309 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.342256432 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.829271972 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.143172623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.150234488 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.148469152 seconds)
done (took 27.138203908 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.16622333 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.733677597 seconds)
    (2/2) benchmarking "String"...
    done (took 1.469566322 seconds)
  done (took 4.278200761 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.144019117 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.145721119 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.392393825 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.145146737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.161155276 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.162413316 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.145064111 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.149346546 seconds)
  done (took 15.374265229 seconds)
done (took 25.039347111 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.175797271 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.350265262 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.407242509 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.164711943 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.162429687 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.14595128 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.137320695 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.192385742 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.149029589 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.146087998 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.146148849 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.415683453 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.160292579 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.541673072 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.139046314 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.170877829 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.163201127 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.399379956 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.14956678 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.198885398 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.137470969 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.139964996 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.189946458 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.185616047 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.151912231 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.153634534 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.201812431 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.139295842 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.333937715 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.159412153 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.197587308 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.147180354 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.212305452 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.148993507 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.253749674 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.179024646 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.338915292 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.146293274 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.146465586 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.153282715 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.337150402 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.538379209 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.148533727 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.145744845 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.15393303 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.182567229 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.147015953 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.894397096 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.153131032 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.147552155 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.190017943 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.548344655 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.163858988 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.15769133 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.181888116 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.39370734 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.173546709 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.178042326 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.176523176 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.158471416 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.16869642 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.14844466 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.211614379 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.164688596 seconds)
  done (took 140.173261406 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.148693174 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.153601815 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.15204562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.213832108 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.152514393 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.154104698 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.151163489 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.148971785 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.156069877 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.180799195 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.154509599 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.149653931 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.153321124 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171266236 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.155421603 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.17140141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.154134649 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.163042105 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.156056493 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.150676073 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.150925345 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.154989865 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.167956836 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.150917105 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.190987244 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.241043191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.185870945 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.176174638 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.159431481 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.150064928 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.185475023 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.215543618 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.743244026 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.014880419 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.159856425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.165034215 seconds)
  done (took 78.482433607 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.151010239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.151882924 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.15120447 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.181148119 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.152177493 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.702031347 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697350111 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.875027291 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.346012447 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.450665876 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.425663649 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.155432417 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244963081 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.166104498 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.156783206 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.168167655 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.193603885 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.155649529 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.15213307 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.702215148 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.168585291 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.363210464 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.326085975 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.168949241 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183542633 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.55819971 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.152089408 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.183042408 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.481704065 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.201308717 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.154362171 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519061704 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.913399007 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268627187 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.154242252 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.184661557 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.153933257 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.432833578 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.153479122 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.154383495 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.154217326 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.15716726 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.81759258 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.158093477 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.707010189 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.158495454 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.113051037 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.157056685 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.153359031 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.154327028 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.121187495 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.81258346 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.173442726 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.154301018 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.15696566 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.154695746 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.154963672 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.184844165 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.162839294 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.265422389 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.172544313 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.158322416 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.185398068 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.154215004 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.154588842 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.20733776 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.171635893 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.217100635 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.227860466 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.271512033 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.705958497 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.158918428 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251748786 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273923821 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.156418157 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.155739832 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.156624288 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.156297307 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.265008437 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.15572385 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.562463595 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327939126 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.173411265 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.447915087 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.255524661 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.15638918 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518451428 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.15944217 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.155765355 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.155934988 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92080545 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254901884 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.156356511 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.155485962 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.156026738 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564184138 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.701881399 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.385421485 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.159695724 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.452527903 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.159762416 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.56995699 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.693160095 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.82364678 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.160626433 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270364289 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330446154 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.175108326 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.157387721 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.448966554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.160851315 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.21537573 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.160720812 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.556860868 seconds)
  done (took 360.474253891 seconds)
done (took 580.204708364 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.849544319 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.799024985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.931833843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.83490707 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.795962406 seconds)
  done (took 10.295961494 seconds)
done (took 11.380189135 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.345014091 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.346452655 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.220827946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.346613959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.190968424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.36458705 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.327136385 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.181507544 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.262245904 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.241060966 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.262315908 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215309001 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19753682 seconds)
  done (took 17.587913716 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.645374061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.165216601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.227027291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412325516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.203052739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432808836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456871333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.16477445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299931601 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.17712132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.177980077 seconds)
  done (took 17.449639537 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.650792855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.166192511 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.229633245 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405025338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.205095811 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431622851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466692438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.166345227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30640829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.177759897 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.176240321 seconds)
  done (took 17.468712841 seconds)
done (took 53.591965314 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.203837647 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.329647521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.190778234 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.178970546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.172893504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.175068552 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.179914702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.171480618 seconds)
  done (took 10.690695587 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.172034624 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.171840521 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.172501472 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.171913907 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.17213242 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.172244178 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.171875701 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.171866675 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.172203092 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.171968081 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.173506466 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.1719609 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.173635453 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.172872314 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.172104243 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.172271505 seconds)
  done (took 19.845978236 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.17557516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.173293907 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.172724763 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.174057606 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.173557154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.172839031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.175686084 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.173520995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.172544523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.175062405 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.175992491 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.173358492 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.17275935 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.173038921 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.174613218 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.174212981 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.173705706 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.173820209 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.178292276 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.174658535 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.17416011 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.173411282 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.172487674 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.174482536 seconds)
  done (took 29.269433548 seconds)
done (took 60.893791308 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.163162238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.187179212 seconds)
  done (took 5.440413727 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.235538049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.235204762 seconds)
  done (took 3.561953368 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.176117383 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.174367752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.174441151 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.173880661 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.174588765 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.176150427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.175899697 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.174566537 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.174280642 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.173992976 seconds)
  done (took 12.83849193 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.17597449 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.175462086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.175380582 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.17506239 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.175776697 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.174978473 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.175922701 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.174821732 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.175045698 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.175607027 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.176474403 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.175182172 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.175696202 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.176116768 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.176216619 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.175798563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.179528728 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.176565358 seconds)
  done (took 22.259637668 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.190294686 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.19678304 seconds)
  done (took 3.478485765 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.31652301 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218859201 seconds)
    (3/7) benchmarking "month"...
    done (took 1.292504444 seconds)
    (4/7) benchmarking "year"...
    done (took 1.282000972 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.21813156 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196715735 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217462535 seconds)
  done (took 9.83393188 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.1792545 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392351793 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497488007 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.71806721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.177838972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222933001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.040171299 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223361762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210913258 seconds)
  done (took 13.75695949 seconds)
done (took 72.259533043 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.165127602 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.22258216 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.19215882 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.187543652 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.516061604 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.170206372 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.16937649 seconds)
done (took 15.716217147 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.159002072 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.162088484 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.163896641 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199144203 seconds)
  done (took 9.777054058 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.172890411 seconds)
    (2/2) benchmarking "read"...
    done (took 1.522352896 seconds)
  done (took 4.787042903 seconds)
done (took 15.656732007 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178053186 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.180941759 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.178122434 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.178247374 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.179084038 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.177372349 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.178290122 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.178422914 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.177142244 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.179597691 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.178017157 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178660133 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178569104 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178120621 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.179196582 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178236413 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.179000243 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178475479 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.178841903 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.179345463 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179484858 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180192072 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.179823124 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.179476558 seconds)
  done (took 29.385350083 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.180684952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.179447271 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.178483103 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.178860325 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.179358435 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.179203433 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.178617916 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.178800045 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.17972341 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.17882772 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17851584 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.179578148 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.179813509 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.178982533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178978787 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.180571672 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.180839589 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18366365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180171571 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.179888761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.179670481 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179422943 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.180889225 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.181086503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.180705243 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180253148 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.181096797 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.180476164 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.181189548 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.181646823 seconds)
  done (took 36.495223596 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.184336374 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.188250191 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.181259567 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.182162197 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.181336397 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.179769101 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.180484679 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.181288734 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.180970687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.181518572 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.181319466 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.181434921 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.181082709 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.182636687 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.181259876 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.181191269 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.184495547 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.181640821 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.181209734 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.180475567 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.182233666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.180987724 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.18115764 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.181041313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.182529331 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.181412418 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.181557826 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.182009527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.182586072 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.182921006 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.182814124 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.182260047 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.182570899 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.182022772 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.182831611 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.182713934 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.186493949 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.189506122 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.181325046 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.182349887 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.182581926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.182088577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.182963336 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.182830469 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.183307727 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.183667252 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.185639814 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.18453747 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.182991649 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.18280401 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.183472632 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.18367109 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.183390818 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.18307456 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.182953966 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.18310391 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.184418818 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.182337906 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.183758446 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.18463085 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.183222843 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.184348103 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.183727668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.184022414 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.183908867 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.184264276 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.184680841 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.184197267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.185135645 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.184464062 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.18616126 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.183951029 seconds)
  done (took 86.272290456 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.18527034 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.184484484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.185426332 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.185368415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185307821 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.185407008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.18584555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185028182 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185994643 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.186656904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185362278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18689296 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186254134 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.185802447 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187290741 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.18543368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.187424536 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186546513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.186016341 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.18629865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184294973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.185299651 seconds)
  done (took 27.1878161 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.187180191 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.187869619 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.186166326 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.187221216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.188576271 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.188919577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.18611241 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.187361224 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187925388 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1871658 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186023086 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186862109 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.18851837 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186367284 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18743154 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.189139336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18650709 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.188226291 seconds)
  done (took 22.474430749 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.188548472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.187395255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.188367406 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189106498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.188123558 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.187236976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.1868653 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.188272677 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.18702119 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.187616374 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.188870479 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187488838 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.189695254 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188438854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188185643 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.188353841 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.188262484 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187952262 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188635881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18810777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.189282941 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188969772 seconds)
  done (took 27.24327085 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190260356 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.189839445 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.18849329 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.189422932 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.187925055 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.188729849 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.188276292 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.189936819 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.190672214 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.189046631 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189855113 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.188540726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.191373466 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.190526059 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.189422257 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18823483 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.189818016 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.189732594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190060662 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.188937394 seconds)
  done (took 24.891597954 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190700514 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19060953 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.190598915 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191043747 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191022433 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.192521483 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191233424 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.192611728 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191280471 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.192812579 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191980327 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.192491507 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192367637 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192788439 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192140484 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191515458 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192297294 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.1923289 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.191589312 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192736967 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193184173 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.192323578 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.192562187 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19277993 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192618039 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.192400874 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193147998 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.193241038 seconds)
  done (took 34.484376599 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192435754 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191330491 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.192164952 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.192015857 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.194219528 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.193217204 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.192124315 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.193500067 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.191552014 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.1928946 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.191908358 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.192836088 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.192555392 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.192016774 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.193000558 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.192851161 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192517281 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.193807749 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192468622 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193310266 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.193196572 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193356399 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.193256063 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.192909915 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193240288 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.194272366 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194179038 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.193794376 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193544416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.192970113 seconds)
  done (took 36.89506299 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241261533 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240261513 seconds)
  done (took 3.589527753 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.194730966 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193637381 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.193526599 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.194676742 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.194819483 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.193439459 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.195048584 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193730186 seconds)
  done (took 10.660730218 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.190186215 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.193287915 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.194714755 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.194210068 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.194801442 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.190583894 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1970486 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.211817001 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.190742357 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.192070166 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.197763826 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.197783913 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.192359612 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190424309 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.190360545 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193541616 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.195540902 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.195009923 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.196330889 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.197519593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.195635976 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193900227 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193525013 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.197058966 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.193883388 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.200842495 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.213771326 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.196750745 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191881356 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.19501739 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.192670405 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.197282909 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.195376559 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.196923321 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.197942634 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.198004875 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201793996 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211762459 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.196637997 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214878257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.198843718 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.197564859 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.193146012 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.193221051 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193579848 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.195796779 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.196752985 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.196650077 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.192000851 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.197159481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.205230469 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192496664 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.196991518 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19631967 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.194136425 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199475265 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.215973902 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.197201062 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.201712033 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.203193195 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.223426405 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.217710501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195233353 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.197936723 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202656164 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.212537999 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199981256 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.216259142 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.198482649 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.198843739 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.20131843 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223843702 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.21892944 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.198714238 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199418382 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.201399939 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.195304855 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.197772633 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.200601621 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.215167789 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.199160673 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199280963 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202944288 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21286016 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.194592346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.199974416 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.200785998 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.201067196 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.196373901 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.203982018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.219248677 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.201296759 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.195417061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.19596634 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.195326262 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.201168882 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.195428181 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.197312198 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.20174446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.200500142 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20172803 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199931913 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.20532545 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200544994 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200938764 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.202296074 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.220205318 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195817949 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.201857122 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.200816777 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200879237 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.200909376 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.201455588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.202056001 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200123814 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.204436646 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.201962093 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.198944082 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.202241038 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.202808785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206035264 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.218500325 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.203548899 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.202032553 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.201837249 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.212557027 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.203724224 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.200904099 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.206014315 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.201987329 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.202688477 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.199906642 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.203082068 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.198418039 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202438435 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199625252 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.202470463 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.202443964 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.203843056 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.199264565 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.200201946 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.199281849 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.200076876 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.201317686 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.20268803 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.200663239 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.204535169 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.216975333 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.199186562 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.198797786 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.203565031 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206065366 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.200456683 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.20397033 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.200352202 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203623523 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.199648713 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.203574806 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204234437 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.205267229 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203876862 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.200031009 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.204333997 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.204297522 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.203038153 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.19922821 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.204938435 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.204778437 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.205965253 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.200877999 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.205229263 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.199412606 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.202994074 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.213615635 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.205970967 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.20459965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.203679312 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2060297 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206403068 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.205492402 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.204754394 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.211312635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.205224361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.207088769 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.224788172 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206540244 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.206259218 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.202092508 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.200364658 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.206148425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.204777386 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.213779217 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.213456581 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.226323955 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.204625695 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.21068421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.204015295 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.210119302 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.20631666 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.207344938 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.207433381 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.20672988 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202127563 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.207554358 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.203285044 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.206745767 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.20309064 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.208317127 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.209601272 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206785301 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206823551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.204322777 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.204123816 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.207614084 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208394168 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.207216994 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.202510224 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.208222032 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.202408051 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.202374956 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.209209255 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.208786384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.208704542 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.207840624 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20399055 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205329684 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.20421253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.203881918 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.208405289 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205811128 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.203077242 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211004848 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.221236728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.204195521 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209652146 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.223664808 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.203358702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.208937773 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.210781324 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.208842057 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.206188082 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.216352628 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.209687118 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.208368789 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.21010357 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205521021 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.209747899 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.209736544 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.228326978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.204139036 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.211070632 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.208570221 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.21027016 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.205944451 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.205578549 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.20454703 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206776249 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210766199 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.21065978 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.205949527 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.210541518 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.210109568 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.210376922 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.209384 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.217899692 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.211821345 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.206034245 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.208198107 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.205962128 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.215055402 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.207760049 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.212743139 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.20544596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218471246 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.234698042 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21292671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.22690181 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.212313054 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.211976114 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.226422814 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.211259442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207250813 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208716822 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.208194142 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.207648887 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.213547845 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.207065479 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.212872502 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20856684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.209195345 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.215927558 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2140478 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.208271194 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.21282737 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.212642428 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.213993894 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.207568474 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.213217635 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.210107269 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208766023 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.207545334 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.208147495 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213724392 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226506491 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.208150964 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.208104115 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.209071961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.209636951 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.21040351 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.21330663 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.214477885 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.221054614 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.211988449 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.216188691 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.210184533 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217830653 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.214464688 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.212481467 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.220411966 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.213960218 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.208720114 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.209406281 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.213701883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.217437425 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.23380419 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.211578618 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.219631893 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215425782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.218346725 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.215943041 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.21546728 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21534113 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.21448297 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217340679 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.231069275 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.213634092 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.212732998 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.214521763 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.214373642 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.215265019 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.210478796 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213003373 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.2142046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.211272236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.210965724 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.211544856 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.215820259 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.216616697 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.216548024 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.21610874 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.215836815 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218320864 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.231470619 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219302757 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.215679296 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.217938814 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235624486 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218724996 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.235377321 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.214374051 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.216341948 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.217307958 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.213065393 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.212197679 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.214158147 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.217158364 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.214680765 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.222405552 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.216659848 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.215267126 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.212943983 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.217549084 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.21351427 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220507904 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237143243 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.214637023 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224072665 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.217284041 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.213167324 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.221043125 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.217307859 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.212804258 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.215892315 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221955518 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225986623 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.214212364 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.21816767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213576559 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.217190777 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.219153413 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.218981918 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.217704826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.221381381 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.214297864 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.218097785 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216487124 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.218396324 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.21474263 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214823754 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.214513357 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.222792372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238246487 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.21881033 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.21941233 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.220812053 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.214269838 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.214619608 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.219214779 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216000036 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.219960591 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.216211917 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221284321 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.221755127 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.216745585 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.21433376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.219179325 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.215328153 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.216501165 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21968152 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.220006839 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219459525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.21665345 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.220914556 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.216460457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.215930138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.22251995 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.215785733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220732006 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218289652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.221883671 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217111846 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.220983995 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.221384723 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21982838 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.21668229 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.216702638 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.222559769 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237985114 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.226722517 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.225232695 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.225070486 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.218436251 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.221647509 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.224855888 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.216277426 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.218428182 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.221751343 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.217780092 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.219018383 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.220740825 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.221669066 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.223610013 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.237018654 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.217885132 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225809737 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.239273494 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223653775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.218976118 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.222191306 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.21932794 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.223518084 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.223091008 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.21753969 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224055328 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.236889217 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223123962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219771805 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.21809884 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.219779305 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226359237 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223732799 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.219780374 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.222235437 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.218227653 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224127919 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224355544 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.222711209 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.220220023 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.219487047 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.222802907 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.225680184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.223857407 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221157791 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.21991641 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.219779883 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224188018 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224367258 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.226272875 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224284443 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.219539925 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224739619 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.220032203 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.22203495 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.220439964 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.220902937 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.229186338 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224163937 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222425316 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.230872676 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.231474139 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.225954872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.21960887 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.220958853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.222295134 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2243719 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.225434929 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221666775 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.221932462 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.225911272 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224840297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.225230528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.224370863 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236423323 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.247071819 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22220865 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.221892902 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224586847 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.226546461 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.226199105 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.226031338 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.222864698 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.223745194 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.233128542 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.226595934 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228490351 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241815933 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.223606857 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.230552314 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.225263728 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.229421081 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.225977305 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227142682 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.227195345 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.228791263 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.237756014 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228278563 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23106302 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249979072 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.243356051 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.226850225 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.227460777 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223146538 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.22736661 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.224583389 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.227665069 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.22817095 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228354448 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.227874638 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.224374619 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229850027 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.22520275 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.229273617 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.228038326 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.223414221 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.223749842 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.22810852 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.228365884 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.227789319 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.22652846 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.227585093 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.228466173 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.224552815 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235608509 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.250733512 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.229183945 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.228381039 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.229588643 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.227031765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.228252058 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236082086 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.237520098 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.230013524 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.229117047 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.226790906 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228103197 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.231849057 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.225442413 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.225422038 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22567216 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.229715511 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.236307037 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252953688 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.230571072 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.225618665 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230517873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.231228994 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.226798982 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230313149 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230398258 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.227449855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.227609106 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23470137 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.230211329 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.22992991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.227569578 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.237999456 seconds)
  done (took 724.301795462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23163844 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233663378 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.232192503 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231213297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232171419 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231777676 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231400757 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231944717 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.230218398 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232323945 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.231576999 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232235513 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232458159 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233146595 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23284037 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232272776 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232745759 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23243988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232432851 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232694783 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233860679 seconds)
  done (took 27.019617728 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.232313098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.233216089 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23394937 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232348027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232996297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232719855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232278815 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2323497 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233681454 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233339161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232726693 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233622535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.234142235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.236339001 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234272869 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233083119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233333093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233738211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.233716264 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234036863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233868504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234300521 seconds)
  done (took 28.280434738 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.234809421 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.234127765 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.229226977 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.235214764 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.234181558 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.235720959 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.234731629 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.234323833 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.234862713 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.230617697 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.228961331 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.231580372 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.237324755 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.242867145 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.232587088 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.235343597 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.235551701 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.235381123 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.235370235 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.235778201 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.234905011 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.255979888 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.235131526 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.230711989 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.23563318 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.236377064 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.236565812 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.236102079 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.232618595 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.239993366 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.237064691 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.23199151 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.233588847 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.231717304 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.232606139 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.240251435 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.23589568 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.236386888 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.236523686 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.239857381 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.257310162 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.23613313 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.237290419 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.259059571 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.237952267 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.234693819 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.243718037 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.237395482 seconds)
  done (took 60.508134934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.827591212 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.846776132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.85739953 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849194293 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.909134758 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.86833415 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.876411388 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844742366 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.867817663 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.866675016 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.878028744 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.844848883 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.845318481 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.860819457 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.84935838 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.888554364 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.920672288 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.945416753 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.855602783 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.884491501 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.905920021 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.944927293 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.904763209 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.884095345 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888740644 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.900862826 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8709153 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.851804649 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.881288605 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.865606199 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.888394366 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.881857333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.854289453 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.851627953 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880210523 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.862926582 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.885155703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.89464518 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.873016153 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.880312438 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.858869263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.85650973 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.874073995 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.898129504 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849899268 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853306584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850637451 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.857947527 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.876078031 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.868120057 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.849784833 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.853843203 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.864492666 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.856552711 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.876197885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.869689049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.893849599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.852970902 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.850000817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.873940125 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.857688229 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.873438109 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.878798385 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.911423698 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.928347555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.868282677 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.870267475 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.903442637 seconds)
  done (took 128.565069782 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.240338382 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.241219788 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241367768 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241548584 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241276445 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.241838888 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241771331 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.241972682 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24121488 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242815011 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241339795 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242739463 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.241937842 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.243174397 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.241228157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242452752 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242318492 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242649906 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242927835 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242881776 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.242245108 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242759352 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242740611 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.242261682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24431931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.24324623 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242068208 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.242663271 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24321393 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243361037 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24375136 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.243662725 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.243355726 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243749447 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.244160423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.242640495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242759996 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243893522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.242953497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243867227 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243174594 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244602344 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245524068 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245113263 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243129008 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.243596268 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.245091769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.244823385 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245166955 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24514201 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.244175359 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243692202 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244879357 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244084911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.244816918 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.24537271 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245491033 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246338885 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244724692 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.243697498 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244917107 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.24553907 seconds)
  done (took 78.240289014 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246238608 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244863178 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.246251067 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.245147718 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245780727 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24592773 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246463379 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.245868177 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246331993 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.245625601 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246094047 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245822494 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246789587 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246410219 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247874679 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249585396 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246245763 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246467552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245319408 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247318058 seconds)
  done (took 26.079858308 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.247155292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.245423712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.245699339 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245820899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.245688522 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247690829 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2462396 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247272569 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24744639 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24666964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246024851 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248087487 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246300967 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246293473 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.246838298 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.24836157 seconds)
  done (took 21.100384136 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.247472602 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.247305625 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.246478506 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.246307162 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.24815422 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.247925002 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.246469696 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.247042119 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.247516491 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.24723092 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.248206586 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.248307203 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.247476697 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.248014763 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.249221631 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.248379425 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.247803122 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.248306361 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.248419435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.248872637 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.248704639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.249095524 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.2483987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.248894182 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.24995153 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249306234 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.248207736 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.249271367 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.250249156 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248618636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.250412482 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.250406986 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.24964944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.249442213 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249488453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.249376094 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.249289248 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.249384101 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.249599641 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250193352 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.248602374 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.250318963 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.250232387 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.249203807 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.250919009 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.250142621 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.249918517 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.250929278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250630518 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.251509879 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.250113841 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.250820549 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.250924741 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.251059039 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.253687546 seconds)
  done (took 69.860390086 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251187395 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249659319 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249774385 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249948191 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.249674776 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.25000601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251775346 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.253696123 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251310387 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250164764 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25000931 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25173849 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251575689 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251757844 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251720462 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252350244 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25157003 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.251199638 seconds)
  done (took 23.677404935 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25214647 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253887892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.252302593 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251798333 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252150389 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253081334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251267856 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.252231885 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251782907 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253146059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251943585 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.252823438 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253012651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253254171 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252798789 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252574195 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.253811442 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252336625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251902362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251974231 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253752709 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252354089 seconds)
  done (took 28.716741638 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.248598209 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.247018669 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.247556132 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.263221396 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.267158428 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.248605954 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.248201225 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.249342335 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.265854511 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.306391681 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.304517841 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.268450801 seconds)
  done (took 16.32403524 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253865467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2535561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255025706 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255520666 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253450993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254935511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254149764 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254033419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253269536 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254081782 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254711598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253740204 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254350214 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254842902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255311333 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25360203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254695741 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254179688 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254812575 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254268983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254190514 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254764729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256064973 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255089695 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255396786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255333054 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255632467 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255157239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255146754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255720045 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2548391 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255602032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256367657 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256070841 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255702995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255530288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255272031 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255029267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257063076 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260302114 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255860466 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255810912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256112654 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25571995 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256708207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256784137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255552021 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256148199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256514375 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256040648 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257786581 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25710088 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256764302 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258079542 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257204296 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256822739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257496825 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256555605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257545253 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258024695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257396972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259834739 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256828387 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257308062 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25953826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257860333 seconds)
  done (took 84.049447853 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257943169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257213647 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257460129 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258565449 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259179815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257202648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256704341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257012424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257786692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256874586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257904967 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259012663 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258151638 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258762704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257604673 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25847108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257113285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259152388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258606604 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259297981 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26013389 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258778735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259234895 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259313679 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259474736 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258653509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258925885 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259896747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258756579 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259748308 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259700392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260201929 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260473869 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259371319 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259758318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259757146 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259930088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26014967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258949586 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258859547 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259436226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258931772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261938684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260825318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259435705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261752823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259894585 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258999176 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262592375 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259945749 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262025711 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262255263 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261318393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260878752 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259675 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260467979 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25987626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260607312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261744362 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260565057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262017455 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262092533 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262075841 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260855232 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260225628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260089416 seconds)
  done (took 84.300356336 seconds)
done (took 1741.69690216 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.421371453 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.376453513 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.255039061 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.268975071 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.255996107 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.281056181 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.267821784 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.256616427 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.256878489 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.256335579 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.256669778 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.446712976 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.251635756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.257719771 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.257590062 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.353980519 seconds)
  done (took 25.889916337 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.286577647 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.265531438 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.379351245 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.284360127 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287418618 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.45409995 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.322548682 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.263790877 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.437980349 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.284053106 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.253429382 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.286351077 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.264531411 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.256536903 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.281246956 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.455837956 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.519209538 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.255543613 seconds)
  done (took 28.007474433 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.728447442 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.291375401 seconds)
  done (took 5.191827191 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.282522354 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262678073 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.264206003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.261193262 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.259097872 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.254194601 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.262206408 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.262870618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.257912771 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.395619425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.264699519 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.275236825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.283163426 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.26427448 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.267596455 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.307467916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.406449938 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.266732331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.266370985 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.269038357 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.263541797 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.351799728 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.305624945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2682478 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39169338 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.259067779 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.269731569 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.270661293 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440977332 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.268148109 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.262440723 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.263077392 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.265594249 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.270021036 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.718966635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.276083139 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.273048955 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291584002 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.267612105 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.416091858 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.266343323 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.270744804 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.257987891 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.723234892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.399881583 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.388653789 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.283364602 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.267378603 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.266293684 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.333514511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.265570145 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.266510592 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.323603067 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.07129796 seconds)
  done (took 81.587161482 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.264106933 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.260828336 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440357355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.282496369 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.25826525 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258792547 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.258825343 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.555461598 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.282426605 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.259947284 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59690367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854272197 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.279309321 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.334816054 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.151424051 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.34820568 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.259230935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.275935728 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.259688075 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.260437733 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822156341 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260241353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.278365618 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.33037455 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.300039866 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784941388 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.25978217 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.259522545 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.281991075 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.261040742 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806662521 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289014666 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.331242588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.263138724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.538991963 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647046736 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.610852226 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.266963674 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.260553848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.262113834 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.277275836 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770285171 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62755797 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.2622876 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.263060752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784228576 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.263572809 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.268576472 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.26197725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514708159 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.261061586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.262258885 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280728225 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.261081818 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.26088335 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.370098793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.357605022 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79369156 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.263870517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26273044 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.308213779 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.265190105 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.269226808 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.264247019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283817769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633841884 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.47967902 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.271255494 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640227864 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803182497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.280334375 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863530555 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.284579088 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282199553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.455365023 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264014638 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.264282854 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807120919 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.27053743 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264158777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619785793 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.267296283 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.597003547 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.28162929 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265890462 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838677719 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.266851242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.279648636 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.263255249 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.264675422 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.283036221 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.265900551 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.564796737 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.310505481 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.265689112 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.264997644 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.307209619 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264810746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.265010715 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.265683376 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866771537 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.297862015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.266379946 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.266691775 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265306412 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.265013927 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.265645907 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.267769989 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535499604 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.280080981 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.272824077 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.2662838 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.264862129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.271187742 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.338561899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.269063646 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.588340814 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.268561288 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280004 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.272319416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26656772 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316804506 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266052222 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.266574338 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.142292831 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.526715438 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286944504 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.266401433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267587257 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299752607 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.26794356 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26642911 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.340510144 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.270985607 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071384409 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301324013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.29926623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266533505 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.266996987 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267094254 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.274942843 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268671177 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564677347 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544879024 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.474623093 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.271309187 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281172863 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.056566257 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.321796392 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449428614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.29066878 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269799637 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518178769 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.489818765 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.268370749 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.26777062 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.268285593 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528662383 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.268495385 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59587268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839398037 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28546541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269958033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08520684 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.999641786 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.269813549 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.274664692 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606390019 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.286631696 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.269410585 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.267858248 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.268603606 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287280883 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288568791 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.278237915 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.270105385 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.269855115 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.281791456 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460708873 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289418013 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.277209536 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791204184 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302340893 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.271404999 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.277493054 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.273948354 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270694017 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.351750996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.275454112 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.30011159 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.273995283 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.271697191 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808428994 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.269984613 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.270420613 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461928918 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990579423 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.288677003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.269343531 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.289067398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.210092048 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.818844569 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312602938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.592021515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.280982759 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.311503035 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.270220493 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314600535 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817071609 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275249514 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.290966645 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957609756 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.290191561 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.670878505 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.270756682 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.271943014 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910836433 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.287468704 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.271358838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.271849543 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272311488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575225113 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.27535873 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.292406446 seconds)
  done (took 484.289157873 seconds)
done (took 626.133503495 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271353561 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.271068632 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.266980308 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.275963545 seconds)
  done (took 10.272906978 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.287063705 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278429063 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.283291948 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.278208158 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.285109696 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.27891797 seconds)
  done (took 8.878972317 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271702927 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.276989464 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276341208 seconds)
  done (took 8.012981823 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.487557349 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.299408689 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.611484581 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303881284 seconds)
  done (took 8.891205222 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.283359879 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.283249663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.284494323 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.28520338 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.288058268 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.28759846 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.285598054 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.284169192 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.286759104 seconds)
  done (took 12.755843726 seconds)
done (took 49.997806267 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.263298842 seconds)
    (2/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.321232233 seconds)
    (3/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.268530355 seconds)
    (4/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.375367561 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.382362244 seconds)
    (6/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.272610109 seconds)
    (7/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339160447 seconds)
    (8/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.385249398 seconds)
    (9/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.42255052 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.352188019 seconds)
    (11/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.018200549 seconds)
    (12/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.533987178 seconds)
    (13/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.309323899 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304293438 seconds)
    (15/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.422305764 seconds)
    (16/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.028805338 seconds)
    (17/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342905407 seconds)
    (18/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.927700237 seconds)
    (19/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.481207053 seconds)
    (20/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.191299095 seconds)
    (21/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.48116069 seconds)
    (22/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.444194143 seconds)
    (23/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.280838308 seconds)
    (24/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.487165195 seconds)
    (25/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.265165375 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.39503152 seconds)
    (27/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.480107609 seconds)
    (28/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.446028247 seconds)
    (29/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.432882064 seconds)
    (30/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.275052127 seconds)
    (31/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.361159318 seconds)
    (32/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.057763427 seconds)
    (33/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.395398327 seconds)
    (34/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.384981159 seconds)
    (35/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.340642383 seconds)
    (36/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.432360971 seconds)
    (37/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.988786352 seconds)
    (38/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.438467951 seconds)
    (39/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.967094284 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.281439708 seconds)
    (41/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.265975305 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.399297332 seconds)
    (43/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.27194126 seconds)
    (44/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.337463413 seconds)
    (45/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.42272478 seconds)
    (46/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.507135439 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.388612595 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.421490045 seconds)
    (49/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.337779698 seconds)
    (50/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.351172628 seconds)
    (51/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.384853191 seconds)
    (52/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.294990222 seconds)
    (53/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.345047044 seconds)
    (54/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.337261999 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.312368722 seconds)
    (56/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.288261423 seconds)
    (57/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.389204876 seconds)
    (58/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.434960415 seconds)
    (59/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305698502 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.290085782 seconds)
    (61/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.036247695 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.507756873 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.277906226 seconds)
    (64/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.653200335 seconds)
    (65/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.32724101 seconds)
    (66/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.310736276 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.419869914 seconds)
    (68/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.491398908 seconds)
    (69/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.312511286 seconds)
    (70/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.414070993 seconds)
    (71/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.301158372 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.299608226 seconds)
    (73/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.276251218 seconds)
    (74/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.293884657 seconds)
    (75/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.46291287 seconds)
    (76/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.300343127 seconds)
    (77/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.412585033 seconds)
    (78/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.451718185 seconds)
    (79/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.319400575 seconds)
    (80/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.58950628 seconds)
    (81/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.930413912 seconds)
    (82/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.357299304 seconds)
    (83/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.332653636 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.370183404 seconds)
    (85/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.461371636 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.291434761 seconds)
    (87/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.311774732 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.203142884 seconds)
    (89/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.015737083 seconds)
    (90/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.468764133 seconds)
    (91/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.39072436 seconds)
    (92/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.267352187 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.506955441 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.352422921 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.279765553 seconds)
    (96/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.095436615 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.383536288 seconds)
    (98/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.351603362 seconds)
    (99/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.962885778 seconds)
    (100/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.417516204 seconds)
    (101/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.355406023 seconds)
    (102/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.048247652 seconds)
    (103/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.184394724 seconds)
    (104/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.45822757 seconds)
    (105/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.934437634 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.33727524 seconds)
    (107/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.317603126 seconds)
    (108/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.438467535 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.510835279 seconds)
    (110/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.395161036 seconds)
    (111/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.073381096 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.395493523 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.296169865 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.388758342 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.311300262 seconds)
    (116/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.307419063 seconds)
    (117/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.281307234 seconds)
    (118/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310848627 seconds)
    (119/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.324777387 seconds)
    (120/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316530332 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.315527103 seconds)
    (122/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.023898951 seconds)
    (123/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319888641 seconds)
    (124/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.408425145 seconds)
    (125/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.427995913 seconds)
    (126/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343742764 seconds)
    (127/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.317885767 seconds)
    (128/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.331164336 seconds)
    (129/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.315123113 seconds)
    (130/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.399586639 seconds)
    (131/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.320768998 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.408783727 seconds)
    (133/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.312935376 seconds)
    (134/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.343554839 seconds)
    (135/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.378504293 seconds)
    (136/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.332427566 seconds)
    (137/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.347311358 seconds)
    (138/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.269001756 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.396963487 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.414536135 seconds)
    (141/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.317605264 seconds)
    (142/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.48609022 seconds)
    (143/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324689545 seconds)
    (144/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.386610985 seconds)
    (145/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.07779432 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338766783 seconds)
    (147/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.433747984 seconds)
    (148/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.486885368 seconds)
    (149/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.393853992 seconds)
    (150/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.392174545 seconds)
    (151/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310386029 seconds)
    (152/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.337298101 seconds)
    (153/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.060582986 seconds)
    (154/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.397604512 seconds)
    (155/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.281749643 seconds)
    (156/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.391924225 seconds)
    (157/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.494019102 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316257993 seconds)
    (159/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.447414078 seconds)
    (160/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.345400943 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.411292202 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.358327223 seconds)
    (163/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.484962202 seconds)
    (164/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.55260918 seconds)
    (165/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.316915432 seconds)
    (166/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.366512641 seconds)
    (167/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.043608403 seconds)
    (168/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.507120338 seconds)
    (169/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.286209084 seconds)
    (170/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.648139647 seconds)
    (171/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.941130523 seconds)
    (172/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.486328432 seconds)
    (173/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.361962459 seconds)
    (174/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333988654 seconds)
    (175/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.276406348 seconds)
    (176/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.321250057 seconds)
    (177/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.407950023 seconds)
    (178/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.423557964 seconds)
    (179/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.3942207 seconds)
    (180/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.286171015 seconds)
    (181/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.393566622 seconds)
    (182/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.428744131 seconds)
    (183/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.320249862 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.44566899 seconds)
    (185/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.271688437 seconds)
    (186/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.327696434 seconds)
    (187/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.323501421 seconds)
    (188/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.424985819 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.448519581 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.333135681 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.378188446 seconds)
    (192/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.272272543 seconds)
    (193/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.323266341 seconds)
    (194/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.272218844 seconds)
    (195/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.273972584 seconds)
    (196/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.972108115 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.336739488 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.386010561 seconds)
    (199/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.378220183 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.323033198 seconds)
    (201/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.46712182 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.390396792 seconds)
    (203/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.300333547 seconds)
    (204/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.486442513 seconds)
    (205/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.115092402 seconds)
    (206/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.364527716 seconds)
    (207/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.364018462 seconds)
    (208/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.420539888 seconds)
    (209/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.217103485 seconds)
    (210/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.294609119 seconds)
    (211/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.419163303 seconds)
    (212/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.452698151 seconds)
    (213/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.339734572 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.508554548 seconds)
    (215/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.615102823 seconds)
    (216/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.525584929 seconds)
    (217/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.449133596 seconds)
    (218/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.396052907 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.495362589 seconds)
    (220/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.429027495 seconds)
    (221/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.371277829 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.441338888 seconds)
    (223/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.972234907 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.373104673 seconds)
  done (took 360.872576482 seconds)
done (took 362.060261418 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339553734 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.472655216 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.291276988 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289891306 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335806224 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.282790947 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334745903 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.300683094 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.302189908 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.301499204 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.283329028 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.302185274 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.304708043 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331430332 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.405043299 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301192475 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.291538402 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.29709253 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340301877 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.358027562 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337649298 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337980834 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.311690659 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.29230629 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339481877 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340505139 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.298285943 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.298379145 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.300071251 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339807136 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.284463171 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.299331068 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.349592464 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349511576 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337253734 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30034537 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337567454 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.474547024 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.334823313 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.332715212 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.303083806 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.350391173 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.304701305 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.303955679 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.348351278 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.312034953 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341530962 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.417574363 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285956478 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.296924841 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342260309 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360885794 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.305645813 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.296089789 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297280429 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.417132836 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.301924907 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342684536 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.301319639 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338982316 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408494651 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342903337 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360389423 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341716175 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.301346407 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.30702659 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.300975117 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361634936 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.301158418 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339556185 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33793802 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.306142446 seconds)
done (took 104.841527538 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.412163648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.294564744 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.439374609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.298663964 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.457248781 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.44085749 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.300192059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.299656108 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.299246221 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.091212309 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.300717804 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.29853177 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.292921512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.299091179 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.420289307 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.301260426 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.299582161 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.996929113 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.301796218 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432663011 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.29539139 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.300571441 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.298772117 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.090149014 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.293841625 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.292905785 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.434467355 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.301130778 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.990813847 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.296156937 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.294602816 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.989234138 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.435781228 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.319948195 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.31089684 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.311026995 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.45874793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.319578855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.415407672 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.414122812 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441267492 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.339440922 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.295605334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.298210359 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.302820111 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.301107845 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301932826 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.328955115 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.295112448 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.30256015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.996695681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.313031041 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.30140821 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.302002231 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.301889217 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.3311496 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.302179922 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304362301 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435120003 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.303781542 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.422449753 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.09287245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.095629719 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.302733182 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.296579949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.303093022 seconds)
  done (took 105.955923691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.364986109 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.373749961 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.411885849 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.316281142 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.351002369 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.41487115 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.349305602 seconds)
  done (took 10.785251193 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.307635994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304759808 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.349342386 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347892808 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302370975 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.474282157 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.303927455 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.311524457 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.303017552 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.352133772 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.304102921 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.304442143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.312478373 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.299626355 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347296375 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.311425415 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.414621083 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.300310229 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.304197383 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457340361 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304267119 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.314638222 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.35120036 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.31167769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.305569077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.305064847 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.074531814 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308597133 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304402637 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.305331637 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304919672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.354320503 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.304997633 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.29242606 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305349145 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41606978 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.304763664 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303997451 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.305516593 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.301018885 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.305740584 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.304108492 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.304706141 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.305419497 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.307075936 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.32528785 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.305757888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.305248905 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.306232954 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.30591708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.351570141 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306536852 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.305714694 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.306054254 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.356393206 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316547874 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.305778875 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.307544924 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.307352047 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306770053 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.459116729 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350722821 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307260124 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.352136134 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307314273 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.306981804 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.307051815 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.30665648 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3939777 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.308224179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350272319 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.308128114 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.484358165 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.327749584 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309606202 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.306055146 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.306876689 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306766104 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.304640827 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.309838146 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.307748183 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.30600001 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.308791864 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308863594 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307414991 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468501343 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412721929 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.307523114 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.316522826 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.310486505 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.309041458 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.357245299 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.309561641 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.308618432 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356499335 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.420214187 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.35825296 seconds)
  done (took 134.735055301 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.316469672 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.315937201 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.309578875 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330853495 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.306831677 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.305397339 seconds)
  done (took 9.095381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.307990836 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.313832693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.309852146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.309061032 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.308427955 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.310999079 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.31213338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305666648 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.312520844 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.310025992 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31023646 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312285107 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.311533511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.310256964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.310694183 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.31228157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.311337552 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310443279 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.309524758 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309801864 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.301080742 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.309523909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.310119772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.308021147 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.313979726 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.311253135 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.326910248 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.310267616 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.311345204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.313600907 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.332599351 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.312934569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.30968079 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.313690788 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316226635 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.309417285 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315377098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.314313023 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312397474 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.312380703 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.313682859 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313217963 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.312673107 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.316952471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.3099455 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.312805822 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.318968899 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328850797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.312012352 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.315441096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.315194147 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3130601 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.313285889 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.315825451 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.311316456 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331422624 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.318323551 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.313948062 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.312945563 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.309694226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.318498386 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.312512384 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.310638133 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.317554938 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.313892181 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.315346383 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.312894854 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316317536 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315632604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.314120899 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.316500371 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.315113509 seconds)
  done (took 96.777439876 seconds)
done (took 358.548874942 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.223865055 seconds)
  done (took 4.437622406 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.413832357 seconds)
  done (took 3.630333071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.779537113 seconds)
  done (took 23.004282894 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.3040968 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.357196454 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.352967169 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.304638969 seconds)
  done (took 10.536162921 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.617405232 seconds)
  done (took 3.834135733 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.312067349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.310094277 seconds)
  done (took 5.840954677 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.567321124 seconds)
  done (took 3.786186005 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.853166958 seconds)
  done (took 4.078612129 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.330892532 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.323179955 seconds)
  done (took 5.879002431 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.298399713 seconds)
  done (took 3.516117658 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.224774654 seconds)
  done (took 38.443977831 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.315045408 seconds)
  done (took 3.535491799 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.332709831 seconds)
  done (took 3.550030946 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.998909997 seconds)
  done (took 6.216524435 seconds)
done (took 121.504173322 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.306234397 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.307972333 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.306793345 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.305876818 seconds)
  done (took 10.445305227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.370749074 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370459042 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.370025584 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.37062766 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.373696183 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370939337 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345221358 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.344385851 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3703242 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.371017699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.371344461 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.369943941 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.371251019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.345956865 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.370700528 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.373023459 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.372463684 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.372450771 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.34685051 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.373805801 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321138598 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.370444444 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.371681986 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.319684466 seconds)
  done (took 33.927312875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.809692861 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.38756923 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470641161 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.368442916 seconds)
  done (took 7.256847425 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.399104443 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.397513314 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.411894765 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449656094 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.462943103 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.410718925 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.345131554 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.342360881 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.32901662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.396377143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.449845842 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.389408717 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47661476 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.320996267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.527341765 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.32077953 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.320596202 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.398732157 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.45076635 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.462754887 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321676128 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.398458397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399563884 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.388593921 seconds)
  done (took 34.793478519 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.330593315 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.337336965 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.321625112 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.337751417 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.323227455 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.322084688 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.324086077 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.332620742 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.322363511 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.322175938 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.323604243 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.338098603 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.325582417 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.321798444 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.331127059 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325324742 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.329835057 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.327566702 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.322721366 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.329657433 seconds)
  done (took 27.770608402 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.310889104 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.309915425 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.662022576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.567762309 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.313426677 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.316077491 seconds)
  done (took 13.701618775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390884788 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.54829349 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.31834617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682533049 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.764995804 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.31930179 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.3195515 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.573183255 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.898306234 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.880170701 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.379014252 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.391753456 seconds)
  done (took 19.689198681 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.32285854 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.317452311 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.321542208 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.334172682 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.374213484 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.340404037 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.325291976 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.312291521 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380818492 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396068968 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.342042612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.376559398 seconds)
  done (took 21.368419734 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443630889 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317533234 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318257791 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376554995 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321864076 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167717359 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385370921 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062993204 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.348832348 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596691399 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329837583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451833215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574572512 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323399315 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319988838 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305452464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5717145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824070328 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321219117 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319390659 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358251914 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331004719 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31991008 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543011101 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344946602 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321122158 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.583879145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321645289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614956453 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338148027 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330790537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320561307 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597777047 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991781631 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444402427 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5385949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34114712 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326174817 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.341994885 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.325774577 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341910686 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331044647 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332112097 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322954448 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321339478 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331348812 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076931559 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.354298547 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.322534361 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323258863 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5930048 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422584709 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.327665378 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322233161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332698803 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326632284 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.328862151 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455781441 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937312258 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324407156 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338377686 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.322815158 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320702269 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326347865 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959160144 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.352093639 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.330084701 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329629346 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322171526 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32397224 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348644342 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323729749 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.350653745 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324204045 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052654745 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346143673 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35049479 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891528219 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332015868 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.32659096 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557644168 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325382052 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32495977 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.325719123 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324666062 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070129517 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338287043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.311490562 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395676568 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092398626 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568898266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371214929 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357926466 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.550001662 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.313264941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326169988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.338739604 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333642162 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348986627 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077461867 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348924219 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.332038992 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585651743 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.540527295 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336239892 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.313792948 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82883378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35296985 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.344019978 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335375153 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545686512 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.948890473 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367629184 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331002833 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351251872 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327730308 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116465328 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335337041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.431710766 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342610831 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618144792 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.164930239 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33373384 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397033215 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333165292 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32817588 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332848594 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335401833 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332056698 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.538563189 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365819396 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340890067 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.332145469 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330122648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.331702316 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348756371 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.335553735 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554859643 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333816612 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607653581 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330891554 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328851821 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333194882 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.553407369 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.33017617 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.673286614 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594377251 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34227987 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341755307 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34297309 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34906936 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433995496 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353042574 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.343496922 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586183981 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.335231192 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.338016171 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33473323 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3375013 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336577061 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.341457927 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346136616 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934589452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329788651 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338553214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220591334 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.350543821 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399731428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341162935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551562704 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.366892401 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333068001 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.344407499 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.331852653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565051517 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342985888 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.339141703 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419348126 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.828841421 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952666252 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372101773 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.334679818 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.335634622 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.334232974 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335318306 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334784359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33493675 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552884316 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373176602 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351018104 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938790867 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359330924 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336891307 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.836023768 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348243919 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.343697299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33422214 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.335132978 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363334761 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355708739 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34645967 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478553284 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.351621524 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335421801 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855014115 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34413815 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335715735 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336059969 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371973636 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339265992 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232207107 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624093751 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352280777 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612736401 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341789607 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.360409173 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.335858521 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336041261 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353257769 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.35240354 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343281378 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.348160077 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337377905 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342437339 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915921958 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083691758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890480597 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35994794 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.351595084 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336435567 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09547304 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360837133 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336298702 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580880422 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106663522 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360340847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834527552 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.369222027 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129707817 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611136033 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572452939 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336374264 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.365051399 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614657226 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553281105 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370895073 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343262885 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342004855 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.323179276 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89827562 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356040247 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422435406 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092629004 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376923285 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344765811 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.35221608 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355102417 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757974413 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362284763 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338899645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345176306 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346897686 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154486603 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364129098 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338900568 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985153016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362728005 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.855120676 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362769395 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.558014885 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372107272 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.344342187 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.339078977 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.361897553 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614708084 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608634039 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341529308 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337901769 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894072716 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.233086155 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.348190934 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33933889 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105573346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345666781 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641223874 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.343429638 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.34638068 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367925024 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34218727 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340542466 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.341999138 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345964846 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316299179 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851742205 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.355481974 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342424834 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342503979 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347586857 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598301538 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.357661128 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944959233 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589910285 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337587101 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364031764 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.352184836 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345807849 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.3353876 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342671956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342260208 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409455048 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569129817 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341365398 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.332992493 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372141675 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557587789 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344076997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341680244 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60118249 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.367233357 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.366268182 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085525911 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397118459 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354700491 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350097024 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357546377 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387958985 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433671656 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564795508 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.379779261 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.354066169 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762313039 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369837782 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352144192 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.363110167 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441135535 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357892367 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.351317052 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.142927269 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949244492 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105348595 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952511564 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636420991 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349196333 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35531675 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344882978 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506811123 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345330204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622644587 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346344845 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.356672372 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367989735 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34586767 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354745029 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563188479 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623085708 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346222878 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348982334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350723306 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.346956139 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358406497 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.558541935 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85861023 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920550335 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348424999 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347392319 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109169248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648001487 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347348514 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348234806 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34813039 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.347398307 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363003368 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.36045472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356594018 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496745368 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617431886 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024917092 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382792294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.384114162 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.868516394 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348734107 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603316014 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348957984 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569699398 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977579214 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092652684 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618787726 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418553014 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56864409 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.3718844 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511810484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.351159784 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350258155 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349094742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350471056 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.352017039 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.359491747 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956741914 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638531182 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.388572984 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.350455244 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381375024 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.357714401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573290266 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090880661 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57352006 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360411384 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355768147 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349008298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960964908 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643888707 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35078358 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.356366836 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598457716 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375477547 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37588632 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.87265283 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.352712131 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921099789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.322374232 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371400791 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364214528 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082748129 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966361543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.37312296 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880470478 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352084723 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353055042 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632386594 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.360005824 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352018051 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635285274 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.357120056 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351944457 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598191247 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.978615411 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173192227 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.362529025 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359997635 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.357476547 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352236545 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427088377 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354308955 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354302575 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.784367209 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377408269 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353972777 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367076598 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.357583943 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367380284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.356490014 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352557687 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.36102323 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.362545798 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.347197746 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359868117 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503459751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921071813 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376950734 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.033272238 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.678737923 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607983861 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352550117 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.363109822 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.360543286 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35523737 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353626565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35517554 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349316018 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924574523 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.370763784 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.368704147 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360773137 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.353818345 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565792814 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35461776 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583478608 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394636552 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377578023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.342063305 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354870782 seconds)
  done (took 962.563880803 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349354449 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.407547523 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.377400677 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.425193019 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370615806 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.476170386 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.380442768 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.380610722 seconds)
  done (took 20.424895817 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.354597226 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.360104729 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.365552816 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.360413549 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.359373097 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.84675257 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.382190756 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.359909176 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.376635986 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.355638523 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.354851764 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.3421607 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.38649982 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.364639265 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.3542902 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.366001209 seconds)
  done (took 32.556381664 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.408931914 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.530263222 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.409811028 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.42687398 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.39346504 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.35270225 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.633606725 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.376252481 seconds)
  done (took 26.79036424 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.362338624 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.362965867 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.362999334 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363903739 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362705817 seconds)
  done (took 8.073016906 seconds)
done (took 1220.580885378 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.363976871 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.363259208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.362300601 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363336922 seconds)
  done (took 6.711767702 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.344759004 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.344892881 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.345935763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.362676943 seconds)
  done (took 9.657556712 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09612147 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.017584438 seconds)
  done (took 5.374188697 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.853994929 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.861569804 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.865992739 seconds)
  done (took 6.842933672 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.640793716 seconds)
  done (took 2.901711393 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.253085577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.359087179 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.045663944 seconds)
  done (took 7.918609584 seconds)
done (took 40.665506481 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.354329699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.624020263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.513039533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354387474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516133613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509101353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.093833738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.35609196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355163257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354581355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.354720718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51424296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.076329273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.605842307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.076392276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.605236836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.515797115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362176875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.355571562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.388088278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.095793229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.359012133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.355078434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362846142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514139514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.500549341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.356988882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.60451315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.354415838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360612936 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.500229914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35572818 seconds)
  done (took 81.870095593 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356425326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.356891926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.378989572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.375832524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.37474074 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.374595781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.375407039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359611826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.371937249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364252252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.356099516 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.356221414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.373047459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.357819879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.359385382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.357383442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.357721404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361787388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.357138153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.363590463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.358441608 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356825314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.366659563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360694464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.357887253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.357115836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.391401843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.371484733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.357388431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.357643866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378840834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37871186 seconds)
  done (took 76.947016045 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.35735625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358920903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.359290909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361775824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.369344783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.359280869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.360525839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.358454749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358515612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.358889005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.378961456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36764391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362083595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.358993662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.377391724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.358832968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.360176703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365118658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.359120781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379683276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36089477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.359237343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378022128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.359186162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.377040402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.360981992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.359520413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.376990139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360100652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361017944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.379015365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.36067869 seconds)
  done (took 76.929187003 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.645297661 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.371260983 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.37291136 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36656601 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.374872906 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.372308407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365401376 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.650850802 seconds)
  done (took 14.788869705 seconds)
done (took 251.796586464 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.369367185 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.89370989 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.411063976 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.366172463 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388813375 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.392606641 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.592414908 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409745467 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.596102567 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.383009741 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404967013 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.365399492 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.205184631 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.520802054 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.227947793 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.343603487 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.271359358 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.363458699 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.969812659 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.655968422 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394200626 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.368419402 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.220127131 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.308250251 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.354652052 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.468507931 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.469395202 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.593484923 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.529387586 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.450382136 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.908138001 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.376909594 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.367811041 seconds)
  done (took 64.209448088 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.368328613 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.497170464 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.373412302 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.374711599 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.499210691 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.394008262 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.369779007 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.374122425 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.374239844 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.3731239 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.374869916 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.375102772 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.374759624 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.424434728 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.504327571 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.390159537 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.369590873 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.497627776 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.368503375 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.367901888 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.421410905 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.375339542 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.377592317 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.42354386 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.37493433 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.375665633 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.497975949 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.396529086 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.376199659 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.499297462 seconds)
  done (took 43.433590536 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375679213 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008669021 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.158134656 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382714569 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373239782 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.376695221 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.66754035 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.380390973 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.37604333 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.375111017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.893486607 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.398062511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408827988 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.185085593 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.376487616 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.378354763 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377897718 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.373445863 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.017743877 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381953239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.691831535 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.378745658 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.670651615 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.383870621 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397460514 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375385868 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.378533622 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.239967454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.396083452 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.892501864 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.20448185 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.672225882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.161119472 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.187246933 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.190361215 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384753516 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378709845 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896391874 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.393855092 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.374744857 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.670334026 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.375993804 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.163054847 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.090652142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.393437021 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.378161914 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.247999 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.914860599 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.644388664 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382136062 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.190339493 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.378343421 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380868079 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.377193129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.628248243 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.377765575 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.375297762 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.289077969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.405344064 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.672487162 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.381255914 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376304031 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.012913427 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.377089215 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.012083087 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.37809443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.384288906 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398120667 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.167796056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380734337 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.109380291 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.394768072 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.382190498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.899541811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.029544939 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.326773397 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37903695 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.017007796 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.196248389 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.692832842 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381061517 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.219451189 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.696672754 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380409735 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383878871 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.384109997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382333237 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46100438 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.673320054 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.044321708 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.101759128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.311279901 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.697816362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385309996 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.378854312 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.289969373 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407390442 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.382416536 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.168742442 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.103800031 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397830702 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.387092985 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.119409718 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400961876 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.678068627 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.382717577 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.177917007 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380829533 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462397163 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383447341 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386913134 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.403616793 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.677507909 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382621994 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.384742538 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095379739 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.931337092 seconds)
  done (took 195.089584706 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.373483081 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.373614574 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.373679044 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.373290149 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.372716962 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.382254567 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.372790281 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.373882166 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.379857127 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.373864276 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.37709364 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.384231141 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.381184708 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.373294465 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.374512299 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.393956362 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.376238701 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.377740051 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.395500213 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.375541676 seconds)
  done (took 44.836698288 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.385835693 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959933418 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949992429 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.385644859 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385842415 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.380838572 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.439078763 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.404567717 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384893331 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.691148716 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.56468605 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407258749 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.386275705 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.385996188 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.934616447 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.377634597 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.692245192 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.96249603 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388069638 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.96062377 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377290916 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38604571 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.381252317 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.96092106 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717330209 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.681292355 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.441299797 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.981439852 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.406327455 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.387334884 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.962135437 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.388268821 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.383165433 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.963961258 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.405241388 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.403721454 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.387904996 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.443134864 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.462094181 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.712658275 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.042216283 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.705567793 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.400250105 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.566360349 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.38922518 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.379656036 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.974681545 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.40702688 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.378019755 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389551504 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.394397911 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.9498325 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.403266202 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.949929115 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.407193458 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.390532953 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.967962528 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.951785173 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.960602692 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.562958968 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.40211662 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.682211376 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.391418924 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975886247 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.40674857 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389393498 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.389327537 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.56580086 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985525409 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.684257023 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.697680802 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69696426 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.391720961 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.452779748 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.410285959 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.768874171 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449111117 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805641386 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.702264505 seconds)
  done (took 126.762214195 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.666560179 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.501570414 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.801572164 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.007449702 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.38613545 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525676717 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500913243 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.648853384 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.394976843 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.467238704 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.048738071 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.508137603 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.164750365 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.475000214 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512582276 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.535285088 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.814164353 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.38081605 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089368521 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.03060259 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.385609774 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.51447656 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.960259697 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.612610196 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.396900983 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.989934891 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.387726788 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.08847714 seconds)
  done (took 54.081260756 seconds)
done (took 529.678708803 seconds)
SAVING RESULT...
DONE!
