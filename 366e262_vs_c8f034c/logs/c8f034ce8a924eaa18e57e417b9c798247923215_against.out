cset: moving following pidspec: 16570
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.046769577 seconds)
loading group "string"... done (took 0.607563204 seconds)
loading group "linalg"... done (took 9.65247896 seconds)
loading group "parallel"... done (took 0.183206935 seconds)
loading group "find"... done (took 1.530419455 seconds)
loading group "tuple"... done (took 2.175885795 seconds)
loading group "dates"... done (took 1.511651155 seconds)
loading group "micro"... done (took 0.235803432 seconds)
loading group "io"... done (took 0.584917531 seconds)
loading group "scalar"... done (took 46.659901007 seconds)
loading group "sparse"... done (took 14.324756243 seconds)
loading group "broadcast"... done (took 1.267830418 seconds)
loading group "union"... done (took 12.998771793 seconds)
loading group "simd"... done (took 2.725757755 seconds)
loading group "random"... done (took 11.039796595 seconds)
loading group "problem"... done (took 1833.171296298 seconds)
loading group "array"... done (took 27.793563049 seconds)
loading group "misc"... done (took 1.21239114 seconds)
loading group "sort"... done (took 4.017363017 seconds)
loading group "collection"... done (took 20.28429486 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.759908957 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143390048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216459804 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.377924104 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243325424 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166367492 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174282129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.586852866 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025879031 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.286681375 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154003664 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.602375317 seconds)
done (took 6.454922713 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30022332 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.392596231 seconds)
    (2/2) benchmarking "String"...
    done (took 0.179630031 seconds)
  done (took 1.23338281 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074181779 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186007583 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114148186 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113182564 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098124295 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113139329 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.112733989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114560498 seconds)
  done (took 1.515428195 seconds)
done (took 3.793667807 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.564483552 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.872597793 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.568208819 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.171548912 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.20366991 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.180041178 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321775896 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158199711 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.115286799 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109060908 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.224017063 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.354064165 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.504187128 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.023343619 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090322584 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126368963 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096631188 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685693899 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080055963 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140543978 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.602114947 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117509689 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11507785 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125259979 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208497616 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133148123 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168282861 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093076316 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691035217 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103210444 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233405189 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082896561 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181852058 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257638711 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.07885445 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108441496 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676802609 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183222309 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11736154 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100188155 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679822474 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082032494 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245907339 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106460265 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110266998 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186928157 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103736727 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099850383 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101380605 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084674862 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174258621 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.488495087 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104966359 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171312686 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107549535 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698070315 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097308081 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156274919 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138666068 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10830367 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082362092 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109766677 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157581703 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113652236 seconds)
  done (took 20.243175134 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.160988936 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16829798 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092390549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140490612 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146520877 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095249035 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098106828 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076854869 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12947101 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237406503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141811139 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.187403339 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074857074 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101647993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144114639 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253498016 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107755107 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122416168 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09935692 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090956026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142950708 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112679829 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108559246 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095680164 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.185670592 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204672385 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108936833 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122507028 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101494095 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117532736 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140650966 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149629654 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090735516 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082531729 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.203915747 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10517775 seconds)
  done (took 5.424633045 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.229220378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117613823 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.240981116 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180584865 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148756438 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183398859 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143782855 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306050047 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.32313016 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184847806 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132236633 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111466011 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076533655 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095714013 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092299675 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720622138 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180800344 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150681168 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15064493 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104744455 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096213265 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380998831 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084679873 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096939766 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084593013 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094052117 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223043892 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08447773 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.392374052 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097183398 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110084531 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131086804 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204196568 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119898547 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141210322 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103288975 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079274868 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.23777906 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108857021 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.191908352 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099437066 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07482823 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130239649 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134586502 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133180333 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098778469 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110941736 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231150049 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099515249 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121175565 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.143653185 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198463141 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.13953295 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07834748 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.387982211 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096169548 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105180245 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098068494 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.317467368 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139414611 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080785069 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094280528 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08413779 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093964527 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.490061332 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090203773 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.946737762 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094721713 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165780337 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099197853 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104161494 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101257693 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08403537 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117266038 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095026041 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077898305 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096251843 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077174565 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101428508 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118605507 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083474308 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09378587 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157421162 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101795637 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115568925 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123893842 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099432416 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079391321 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127952808 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095380369 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082742557 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188335101 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086387598 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120814999 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098649805 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142859677 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083702404 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094894586 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.218303034 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094756997 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12163454 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098622522 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112222354 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121292763 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096192376 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098686457 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081916554 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092505909 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078561361 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161800215 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079807415 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094770422 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098686967 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093831908 seconds)
  done (took 24.627796348 seconds)
done (took 50.956362212 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.524760984 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.122882768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121861406 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122577917 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120236591 seconds)
  done (took 1.756149485 seconds)
done (took 2.472294497 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.389144281 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189236845 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122128043 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187558522 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106671625 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211417566 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178438998 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118179496 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208177471 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101379042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184790227 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101060755 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106055999 seconds)
  done (took 2.949356319 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098236955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124202084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083300625 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114734063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077291249 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114902787 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11227865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119829407 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11349818 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104781316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078730501 seconds)
  done (took 1.853927643 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093745445 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118320942 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083036922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11100014 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077449005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111697285 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109250814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10395307 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112262101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089742535 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09572955 seconds)
  done (took 1.822088531 seconds)
done (took 7.334150858 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249638908 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.930617887 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.152360501 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203925793 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.403332343 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.254338967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654950448 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.168914234 seconds)
  done (took 13.947654978 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.179081726 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102237379 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085345007 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102406957 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084492953 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101134127 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083874112 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099129556 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09979425 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08495033 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100793349 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085590484 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09972768 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08421793 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100246781 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100258124 seconds)
  done (took 2.379967115 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139577909 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138922808 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09163175 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112924595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105957961 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090319846 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108121466 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10678227 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088949821 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105552076 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111338013 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097078369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109866945 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102668002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0930834 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113194228 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104018781 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.093353068 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109998834 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107843644 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096677 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106328847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109559324 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096195765 seconds)
  done (took 3.351091289 seconds)
done (took 20.394937679 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.183301399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100712932 seconds)
  done (took 1.005425576 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150382436 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154027224 seconds)
  done (took 1.031438858 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113809107 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098246827 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145772601 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120037674 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099771816 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083693869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136612318 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100041296 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083452118 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099735559 seconds)
  done (took 1.812422892 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088732948 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104335709 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110947492 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.148339587 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.09659555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105302488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104947961 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088247095 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105581514 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100378525 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09342266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123483524 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107443584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.247792181 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088755717 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10954787 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1141382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107409896 seconds)
  done (took 2.77611856 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084080164 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100521577 seconds)
  done (took 0.913369589 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089438022 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100402038 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089045241 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105400472 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100110376 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083408083 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099986714 seconds)
  done (took 1.396896699 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.550491924 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277221774 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.379168873 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123847371 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144303925 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.403052267 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146325178 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116642728 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117415879 seconds)
  done (took 3.031013273 seconds)
done (took 12.69571642 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090897436 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.235743753 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.600619496 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.12367045 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083311635 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157627255 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331604997 seconds)
done (took 2.356902032 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.363190852 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.156994838 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092712187 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097298744 seconds)
  done (took 1.442085717 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077321588 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107373489 seconds)
  done (took 0.92124743 seconds)
done (took 3.107854262 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081003103 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132740585 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079915425 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098080771 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.097556078 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081274559 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.097480676 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080368736 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096242565 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081088752 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095173436 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080416802 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095237075 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08045577 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095431705 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079912786 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096101297 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080422575 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09615869 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07988847 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09565407 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095505081 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080858497 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094505816 seconds)
  done (took 2.945499282 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107113006 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10113177 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106512215 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088488922 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105970124 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103905243 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087206395 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101192961 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104182344 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084817792 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105325074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10538332 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083696122 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105341371 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099191103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089543235 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104824294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101191172 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084650557 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10571626 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103477741 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085940079 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105271901 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103314941 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090211191 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105492001 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084660468 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100905144 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10440499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089916788 seconds)
  done (took 3.686969413 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08958585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093106891 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082104092 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107140422 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077360336 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098520093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077348642 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094552032 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098323447 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08121182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10054762 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082477184 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093865138 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083659172 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098868641 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086333856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115638135 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0953451 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078923112 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099080765 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085376376 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095019437 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082137189 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09780203 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081291695 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094288388 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082813655 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096738966 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083277859 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097545898 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099326584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08550943 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097504275 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093790245 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102479483 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.081222481 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10404187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093286887 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083820347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094498344 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079058594 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098674962 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078516027 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107304676 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082927111 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09986035 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07936476 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101338758 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099283501 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086899684 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094599007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079121983 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.10164233 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084305555 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100520958 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078078647 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098623858 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079361474 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099997484 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.098253301 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079028017 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094400518 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086976797 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098462241 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104732256 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107328748 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094764904 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085901065 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100318861 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087061187 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101416873 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115477422 seconds)
  done (took 7.395354462 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097224476 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110937111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083170082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101787651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09870491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082812308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108322607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082799788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100163208 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10832023 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083306561 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099403973 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084902322 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10084663 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083176198 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100663734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109102687 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083018572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098654436 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0846166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099550523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107688307 seconds)
  done (took 2.856170256 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.265015438 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08974486 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.152014339 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118033148 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122796876 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118306406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087522574 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106364716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102209479 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095147319 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110774043 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104749368 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121947618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095076781 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110554049 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113626142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087872464 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113002516 seconds)
  done (took 2.862404893 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10203425 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104165192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126476179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08535593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103131965 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086046615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111742676 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119242925 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101190975 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086409361 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113673626 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10151825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085879016 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102383204 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085641547 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10149586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10121673 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086765819 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113072346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110570413 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095004646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113689649 seconds)
  done (took 2.988472955 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103000338 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103065314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140048971 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090234202 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102611566 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100026921 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092439169 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103811686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094396124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101706803 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102288227 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083797997 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111136416 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101767228 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092813379 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104143851 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08518712 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103749444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102032261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084967775 seconds)
  done (took 2.756437257 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180179543 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101494663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117870937 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130639375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117406316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101037925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130610223 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117464538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09985229 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134144329 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117752555 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116196665 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132725719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109612915 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117210517 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133405484 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132326865 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130636326 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100450284 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116711887 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134972026 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10025253 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131174398 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116648848 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116699128 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101119841 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117241268 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126606393 seconds)
  done (took 4.140024167 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082814875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098680636 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082793548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097423517 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082848299 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098888695 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082193016 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.0978518 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083209014 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099883978 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081515752 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098699837 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083012836 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09852209 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081886462 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097606667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082685641 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099205494 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097291697 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082542838 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098990305 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082732048 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099093336 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081863544 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09856759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082445736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098925413 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083790445 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098523132 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083579555 seconds)
  done (took 3.475424877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098255553 seconds)
    (2/2) benchmarking "in"...
    done (took 0.126823805 seconds)
  done (took 0.985550859 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092377406 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121022191 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081894354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100847581 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111460441 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084490153 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112637755 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112440263 seconds)
  done (took 1.577576372 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.152198191 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.152493642 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090141334 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11417056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.15140528 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.1447963 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169855076 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107432875 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087250892 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098437447 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148718086 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079085535 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107138948 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103300372 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088813932 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113231166 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101854971 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094594274 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108769297 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086025541 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106684747 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115708974 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092879998 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111327336 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099124787 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09205291 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112545829 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114691215 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085588533 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111356297 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.103326646 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.083821022 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105664547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089070749 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101739039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150939171 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117196569 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08499147 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107724856 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089642962 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110573316 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.101968389 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092435535 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103753105 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109809422 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.090014443 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107577754 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083850025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098456445 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084296018 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101479273 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100084065 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08362381 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107859049 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090233352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102426418 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103283887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084690205 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10376283 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100672497 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088617017 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102348114 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108743037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096127067 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108212697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090202555 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105796786 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.102527645 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087229372 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102286338 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091906168 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125663128 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111214751 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089509818 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107717844 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103208069 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086800544 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10929094 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088170456 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109734202 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107619161 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092721406 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109141225 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101995432 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083988978 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110029302 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085565975 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105426756 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098076493 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102531063 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103049081 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084523535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099146681 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10955385 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085249582 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105265844 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081240656 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107823148 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099299826 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090368252 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109242443 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087724438 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111644783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107652648 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091425874 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108479353 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.146508749 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103424197 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084637698 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104940979 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091585807 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104873787 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092798349 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100448457 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103915247 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085242048 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108411195 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109965124 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087169868 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.107797863 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091536006 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111040916 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103428197 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082821831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102728913 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088505677 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112814593 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111631363 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086403105 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103238162 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086433453 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108558376 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105510675 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086896343 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10879914 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085937347 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.102302367 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102514853 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08920754 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111112705 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083784127 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10559448 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109674198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087379613 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104526628 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10869461 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084526658 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099631885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090746912 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103512893 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102400375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094816903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103939266 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086178318 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103433803 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113373154 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085596684 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108849709 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08745433 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108407645 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109195638 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079888175 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103659812 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086387749 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112433272 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102591231 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084996547 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102700285 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091537914 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100605875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105948584 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081430097 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104289825 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091376022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104541327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08905512 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102241911 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122058285 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098767902 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109306864 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107259083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092861512 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10651968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106097482 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088900797 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109578906 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090349063 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109495183 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10566456 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09013145 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103456158 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089892995 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105931608 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110064216 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081611867 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103479003 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08056381 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108052082 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11119464 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089918339 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108573042 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086493713 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107560792 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114045338 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086113852 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.107817306 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081860145 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108113271 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095761445 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111236535 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110634332 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093976275 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105681104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.104847964 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096468014 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105632606 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090723902 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.105040861 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081997751 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100391138 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109922826 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087568484 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101452924 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082984129 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108896889 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110538135 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087343443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099142917 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090004319 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11411869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101809159 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08975165 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104276834 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106697775 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101465849 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099875147 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086363269 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112880332 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108483382 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084064542 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107138057 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10559217 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090923305 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105706097 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086877451 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105969005 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092412001 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105322368 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10120519 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085424005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104881566 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081485237 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105161346 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091898355 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105069409 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104776312 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097020308 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110499346 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109797962 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088120456 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107726233 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09162578 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.111010066 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106452258 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091859617 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103739716 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08159403 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10552649 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099499993 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087319921 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103744343 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090055508 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105648647 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105980924 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088052412 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111599382 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105673576 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090954117 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127693658 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100875359 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081325562 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105910498 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08775136 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103153996 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103785098 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087015301 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110527105 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089452233 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112041391 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103663555 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083807202 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109621534 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08538847 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10914709 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.111361934 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091839394 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103150727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090118925 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104345916 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114947794 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081613583 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113028454 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107354169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089305295 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104578383 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08801148 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102814218 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100736522 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086809967 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110083058 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087407143 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108387039 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10842366 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086707046 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104706966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084522083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110066418 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105759691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092446522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.104464072 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081553915 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101083983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091532343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110384258 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110246906 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085022855 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107108132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091704363 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107196817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102407274 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09508045 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112346796 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092768726 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116577187 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100865911 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087568255 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118615002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102791626 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087813904 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104103664 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083214549 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111840486 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091713445 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111484676 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105795693 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081361543 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104150973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091454458 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106450566 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106970738 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087469566 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108215011 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084019214 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106939225 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090428121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.1067322 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111330574 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091447311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107186181 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105381962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.091737216 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104703345 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082257248 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101542583 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086492532 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.110817395 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101570963 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089444554 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10945398 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087827239 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105386195 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08985182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105509496 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111016052 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0900683 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106010883 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116187026 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085639744 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10608526 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089355675 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110075018 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082571397 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106099627 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108106755 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094179076 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110878582 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109805823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089524397 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11074943 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087109741 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109292924 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091487306 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111463947 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101840397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.093014606 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11261461 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087372909 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106603721 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106796715 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083687652 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107440453 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091340915 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107694087 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114729291 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091655232 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106963392 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111271249 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092371333 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108288772 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092965622 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10507686 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111495903 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083038069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114215284 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088064111 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.111418083 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105406802 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084364628 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110459624 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090501629 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107389094 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113012933 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093152634 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101453884 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083114781 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106340777 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105283491 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099990948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115299652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087447813 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109488015 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106742688 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086502523 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112364187 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083906972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105199843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108153827 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092720229 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106294098 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084380312 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107112021 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111703696 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092721381 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109255193 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101597642 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090771321 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111462767 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08689013 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104341773 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093727694 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108988211 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086339227 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102629759 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117297566 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093362984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11219321 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103849094 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09062995 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105932846 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087594031 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112625365 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105480863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091016692 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107696164 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089969191 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119626753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101207718 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085988549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119110776 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090158509 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112435245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.107506273 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08842375 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112522992 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112510264 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088572397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101137594 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083433046 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106591178 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082651252 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106059314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118280537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093164733 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107409164 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10778479 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090236754 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.106286619 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.088493778 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102674572 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093054865 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105878999 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116055679 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083488969 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102184705 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088054205 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11007927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088163421 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110101733 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104995122 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08894196 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102815985 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08842527 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114454385 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106969894 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091464156 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108434466 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087422819 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107428207 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116546281 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086836926 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109502885 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119203131 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091984705 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109257921 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091437612 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114181513 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112787728 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.089406908 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113792453 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107756887 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08868077 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11296458 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.09413856 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125771821 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109886162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083002101 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.109549317 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087931351 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102976191 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115426156 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093665578 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112563422 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109953162 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086057876 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11597237 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095586716 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110792311 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107895003 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088080253 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108978071 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087321889 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108060062 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104722922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.093379185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11249557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091022722 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113794937 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102401183 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099197172 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114769655 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113456535 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085709648 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102233499 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084467772 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107298395 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093417479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.111851032 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08953577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10757678 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108245166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09112977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109494046 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088547558 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113195433 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109753895 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086507884 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112196576 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089116416 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109779084 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104797982 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092047689 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113222984 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092833381 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118645674 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112352611 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089402201 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106374775 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109978954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088890048 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110369857 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089269565 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106803237 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084162725 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111268646 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11229498 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089520301 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112949946 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095553842 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107016008 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112399538 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094717574 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110979008 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086492747 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111753492 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108659557 seconds)
  done (took 60.974429674 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167062893 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095370396 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108009054 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087672377 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137148881 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110368472 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108424611 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091248889 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109789501 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101473787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107415948 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108019267 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131805683 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141754288 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13611673 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103935904 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107216786 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110238728 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088168016 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110007171 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132356011 seconds)
  done (took 3.198903866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112571276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127329816 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125776288 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130555855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117590153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10595269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.126130317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124773341 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130060871 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120911531 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130807158 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124926722 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102832858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.121070811 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120491466 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120579798 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109579665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120274882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126604152 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126520462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120687965 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106282142 seconds)
  done (took 3.456144363 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096498259 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110317596 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092627552 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.106944577 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090123816 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106097999 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116923933 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.086829263 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115945863 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088611617 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104825238 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088405308 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112670975 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107562694 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08587297 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.107317026 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.097688889 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.11090049 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092990836 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.107347527 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132234879 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106805049 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088418626 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104061374 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103105725 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111762078 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.090736647 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109821155 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104004734 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092251546 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106374954 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089889623 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112280081 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084920524 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104622373 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109859685 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092510958 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107259029 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087408044 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111534754 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088564771 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112658558 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115876689 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088496203 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10756136 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089750443 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111306757 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107629529 seconds)
  done (took 5.709394845 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153440609 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16903509 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.118532584 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158120721 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135490945 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105615779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115056256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161284266 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.116843416 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094955878 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135322219 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133982899 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1214105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123424394 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098282426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116254189 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117946994 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097164682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125636855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114701484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124346772 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105330896 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.133777019 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131111747 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119270975 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096273779 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120712726 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125899448 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131788053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.104123971 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.120331526 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123107624 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133440267 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.121101376 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094958787 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121647693 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137323688 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117665445 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09759582 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11300773 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101210597 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12440293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116746035 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135736697 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117065889 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102110146 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117003598 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112462653 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115903787 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121966722 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128083917 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134490783 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119222607 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.095882109 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125368088 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138236384 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116328209 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095492459 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117355991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.134721889 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094473776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118805551 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.136123507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122325502 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107192025 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133109718 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119118388 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118771047 seconds)
  done (took 9.144378295 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12527502 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119515806 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134797404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134972113 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118284014 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.098850186 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119937294 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120108903 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098752038 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128865857 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119135769 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.207961291 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.116196528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127515247 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09866121 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119324192 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119682359 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118618584 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099978263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119678903 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118852266 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133155367 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099918476 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133414831 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136800185 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114225629 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098145283 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119947118 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134403234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120488577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137640164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.099289822 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120460792 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134218665 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136033427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119888713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091883433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119639975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121271265 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098989532 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116014734 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135299334 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120207446 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096211931 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1200179 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120219896 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134719967 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13752541 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107133236 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12882119 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120757925 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135248928 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119393346 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099392813 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135038156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146074995 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134556419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133154154 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120670556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133919381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134735593 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144568288 seconds)
  done (took 8.427045326 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089177644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109059775 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08978426 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.108830006 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087909475 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108692609 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087917383 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108147128 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091392465 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109022809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088185598 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108515795 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088389473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108145299 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088415268 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108229851 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088483873 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109447257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10716807 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088236456 seconds)
  done (took 2.79153802 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100179825 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133300357 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.113078505 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102818712 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113372668 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122090259 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090862247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113289056 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112830497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093800516 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12529229 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126362163 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09326505 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121212762 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125767355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121599772 seconds)
  done (took 2.632210982 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116324977 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.134085661 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168919868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.116652546 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114563441 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10045804 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113543529 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094482854 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111268207 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121283992 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.095830863 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116780902 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091996255 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113083868 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.111880915 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09762205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111620236 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0970448 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112066106 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.168576802 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119102224 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.095135312 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116310088 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118087876 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.094908446 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.120573129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121139462 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.092794803 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.116451058 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114478176 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097232522 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12300757 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.111370301 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.097894123 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113074138 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093596346 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112384787 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113015321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097515628 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.113048587 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.093602634 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116600703 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.112723664 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.095949574 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.110831675 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0926945 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.111084617 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.119989593 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095813677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.115780989 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092618439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.119408062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.117734849 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103415643 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.123452136 seconds)
  done (took 6.933100674 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106183261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115238657 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.127943683 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090175824 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113639745 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096539872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115433515 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115652579 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096337206 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108914142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09517096 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115417088 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11673442 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094944477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114967204 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094904007 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10994633 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114301675 seconds)
  done (took 2.770837764 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098991668 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112630241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097976039 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113354427 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091035421 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113768057 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110032561 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090248111 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110360428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093041498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113843121 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091634826 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11173459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112595411 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092489099 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112501539 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.091667791 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111714964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112955401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091073066 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112488367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091383575 seconds)
  done (took 3.103986396 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105739416 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.170473454 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123408286 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180290414 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112565857 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.11100645 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103032076 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112860635 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131272222 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.089949479 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110687439 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.089830534 seconds)
  done (took 2.272550087 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120368002 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155449775 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114601202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092170586 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128270705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119472974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120501052 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100193632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131938815 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138087398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119621391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1327936 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112640459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135258922 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127573425 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127357999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121598856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100056595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113784191 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145307835 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119655421 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133563806 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099319785 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119927064 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120162061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134579299 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110933582 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136872374 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12069049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133427234 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127890018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099757612 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134423706 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138536388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113441347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134311611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099968697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165877548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107933719 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134345413 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11351497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127422108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111303653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130599035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134137366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119685472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130702175 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10006685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119870748 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15554259 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127824182 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13500282 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127406915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133028736 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133112471 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153385007 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138357826 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135803793 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106935479 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137700812 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134568938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128411637 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135355075 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137963897 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128862046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136868454 seconds)
  done (took 9.153750202 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163345289 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094700474 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120548798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140306721 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136121402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099784514 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121286075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120270049 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099738807 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11644441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173746322 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120693263 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133919072 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136223337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120178032 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100588363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119844267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134459945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094665324 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173420373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099910678 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135804272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135025909 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135813682 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13746826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128488923 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098550917 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121629818 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121858922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121236534 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108798866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121969472 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13564447 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116432525 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135891202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100549744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121331232 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131153339 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099248911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128371461 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135071991 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145015808 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122084716 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122246001 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137971629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100569241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121449273 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116373073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101179174 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115309829 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138940367 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138612935 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137667769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136202868 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10031665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121797238 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120873867 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100991241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121301004 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127436068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136586439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10017217 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175583563 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100443314 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121414448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136526216 seconds)
  done (took 9.024552668 seconds)
done (took 165.999983889 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154957634 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177596396 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153441989 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151158821 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108347243 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121269885 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142399767 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152876562 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107809031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087630869 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107795531 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090817922 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175727767 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086956792 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10763709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111272079 seconds)
  done (took 2.872092766 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.209830094 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30385461 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129790954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113471819 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096158142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113167865 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091417072 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114823684 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10977816 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102091483 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110313616 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090773344 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124284375 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111081944 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088797939 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110701401 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123314782 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090227648 seconds)
  done (took 3.073724211 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114373597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163755326 seconds)
  done (took 1.123562121 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126941546 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216643347 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29707352 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171691683 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140055255 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135634625 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.171416446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129213491 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205173727 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133171452 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.134531162 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094724472 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142038647 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121972596 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.104683239 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115337859 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144710296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.102556732 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.362344833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116699428 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137983443 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.095740316 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122223708 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125869343 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193471427 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132660845 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096367102 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116863278 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117025509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103285696 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122150845 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135549519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134157902 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184121929 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123070909 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.201559535 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104190587 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116197069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.123979077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093917933 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121105841 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121002549 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111494415 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116692361 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117519167 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103935787 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117303903 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116528831 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10398075 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126240935 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125075424 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121653047 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179460392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126298284 seconds)
  done (took 8.29722914 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.901526408 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157388741 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093403059 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.03071582 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147535458 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131338808 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.907810896 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116170965 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279776611 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.89935035 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131486323 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105605903 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.287147648 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.272993987 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190634856 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.397006115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.74833034 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129047879 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144415786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167063855 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122506525 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146326391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113931384 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.475210291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094811356 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113828707 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121402965 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106171105 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.201186824 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091791635 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118806134 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.225762096 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2864932 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233195174 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115543478 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091504444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112700949 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19385408 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323649349 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.250519392 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186516997 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088575142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113087157 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128738424 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114514758 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111369947 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207121678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195915768 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.215415698 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096820489 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129337232 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124011978 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12641237 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183189511 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110756935 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380766147 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379854133 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112554366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101649595 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135817617 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295606461 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113343523 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260036054 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144111359 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245718561 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11149132 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819819735 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18783692 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112698002 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102509722 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123236082 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121453537 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126807463 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179839075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395207777 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131701527 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096765318 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113105071 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.279214332 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091489155 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113310938 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183263108 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116494361 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124204436 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131756195 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108274639 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213964253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271930047 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131182664 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123958747 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120044419 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107217131 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116792935 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235646028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273607851 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179455295 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.256077468 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10705182 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.209098419 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186442028 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128451471 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.214213111 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099686329 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134796423 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12927165 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.249405541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155199394 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114563932 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097558717 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124964088 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159498217 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117057921 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123121497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190822994 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.517423951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18657966 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113454012 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095058812 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125144438 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202958657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100954787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.293842795 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126101718 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.209539419 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101248517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109876385 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101877439 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.208129893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130409032 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124632791 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107554944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124767251 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.292133492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25494869 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130786911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245574598 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.217918288 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104167135 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217039958 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124497746 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191531215 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126350421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105904405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11805904 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813477973 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13113521 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122383944 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098049672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.233603692 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092996805 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114422384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09221991 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110375267 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842586975 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094732022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110955359 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092611682 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125175825 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12482091 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121954919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099355264 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206192507 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271317343 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12954988 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10105076 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114778186 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18020037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118331491 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114559643 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092903583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115063793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124217408 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098599307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115854844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1929765 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20358405 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.256936546 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584835011 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092325738 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114712819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266731784 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114285576 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341645178 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124875538 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263330354 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189265686 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111453824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372304066 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211695658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.214073135 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095835092 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216573457 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089153028 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122992194 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.202939974 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093266907 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122752454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178930659 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134002737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131794942 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.19664929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113757476 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248642063 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111315529 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192625576 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117159433 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129647995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345082904 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0919723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137661471 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.204753237 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096751208 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116155072 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.745709943 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092330881 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127790507 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124782735 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260971591 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208961783 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10262844 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125371148 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128313131 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184746214 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.253936502 seconds)
  done (took 48.099379773 seconds)
done (took 64.304860604 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330270726 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.286212856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.340250341 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236856369 seconds)
  done (took 2.145480178 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238245768 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163449057 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.21802987 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090670736 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.227887246 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090220146 seconds)
  done (took 1.898174478 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.546829957 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.450230778 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.380969033 seconds)
  done (took 2.25383834 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269841595 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276396518 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367958084 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.502177021 seconds)
  done (took 2.421878645 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.288581272 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11463581 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131635105 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185267032 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256516969 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.284792574 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.159173829 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.207839155 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118887836 seconds)
  done (took 2.671805648 seconds)
done (took 12.264607165 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.257724547 seconds)
    (2/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.346433822 seconds)
    (3/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.231921727 seconds)
    (4/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.228417764 seconds)
    (5/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.204885781 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.276510342 seconds)
    (7/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.326954398 seconds)
    (8/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.236867743 seconds)
    (9/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.229194733 seconds)
    (10/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.181278004 seconds)
    (11/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.276005429 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.121154786 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.199904353 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12310005 seconds)
    (15/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.219932874 seconds)
    (16/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.308941539 seconds)
    (17/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.307247168 seconds)
    (18/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.210492072 seconds)
    (19/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.221912533 seconds)
    (20/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128507705 seconds)
    (21/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082551744 seconds)
    (22/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.212220301 seconds)
    (23/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.206010969 seconds)
    (24/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.104857571 seconds)
    (25/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.220969894 seconds)
    (26/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.166769353 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100753653 seconds)
    (28/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.164459204 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131861381 seconds)
    (30/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.081338623 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.152838015 seconds)
    (32/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.220876631 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195472762 seconds)
    (34/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099843086 seconds)
    (35/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.119031633 seconds)
    (36/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089864853 seconds)
    (37/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.29233075 seconds)
    (38/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083251913 seconds)
    (39/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140045647 seconds)
    (40/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.2404462 seconds)
    (41/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082813771 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121197002 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158961585 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.1536658 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.123616916 seconds)
    (46/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190097679 seconds)
    (47/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133531114 seconds)
    (48/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.219182232 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120224338 seconds)
    (50/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175035327 seconds)
    (51/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136936462 seconds)
    (52/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.133088106 seconds)
    (53/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.194380159 seconds)
    (54/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131605683 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10200875 seconds)
    (56/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.147446131 seconds)
    (57/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133101908 seconds)
    (58/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.206738944 seconds)
    (59/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205603718 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121538557 seconds)
    (61/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15516156 seconds)
    (62/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.231480914 seconds)
    (63/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100108413 seconds)
    (64/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.196590676 seconds)
    (65/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227346337 seconds)
    (66/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.172047242 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.155089198 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.155900582 seconds)
    (69/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100823449 seconds)
    (70/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121344824 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133256853 seconds)
    (72/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099140206 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120323589 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09819528 seconds)
    (75/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106668566 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098729412 seconds)
    (77/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.170278894 seconds)
    (78/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.171074535 seconds)
    (79/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.213509311 seconds)
    (80/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.152084656 seconds)
    (81/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123166352 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132766636 seconds)
    (83/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097748217 seconds)
    (84/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123920651 seconds)
    (85/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.196806191 seconds)
    (86/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113800769 seconds)
    (87/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106283691 seconds)
    (88/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.20547476 seconds)
    (89/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083308627 seconds)
    (90/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.105742368 seconds)
    (91/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095423707 seconds)
    (92/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.167223988 seconds)
    (93/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095112174 seconds)
    (94/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105693112 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097747017 seconds)
    (96/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.130359515 seconds)
    (97/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135958895 seconds)
    (98/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.088641899 seconds)
    (99/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122778463 seconds)
    (100/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083020429 seconds)
    (101/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.104758245 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097937633 seconds)
    (103/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.122460153 seconds)
    (104/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.215604266 seconds)
    (105/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114816035 seconds)
    (106/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.154258492 seconds)
    (107/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.106106484 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098178335 seconds)
    (109/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13574131 seconds)
    (110/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099190558 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.105768867 seconds)
    (112/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.14568152 seconds)
    (113/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.21548627 seconds)
    (114/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.146284585 seconds)
    (115/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125390416 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090023275 seconds)
    (117/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.155109708 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124676379 seconds)
    (119/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083996512 seconds)
    (120/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.160278985 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215866238 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109267724 seconds)
    (123/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10707064 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098426879 seconds)
    (125/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134317788 seconds)
    (126/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.159543413 seconds)
    (127/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083058022 seconds)
    (128/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.122106508 seconds)
    (129/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182934126 seconds)
    (130/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11474869 seconds)
    (131/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082878953 seconds)
    (132/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.081293286 seconds)
    (133/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10896555 seconds)
    (134/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100465445 seconds)
    (135/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.158053976 seconds)
    (136/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.178094334 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12233306 seconds)
    (138/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.082432279 seconds)
    (139/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.106431723 seconds)
    (140/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171896969 seconds)
    (141/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.124355017 seconds)
    (142/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114757134 seconds)
    (143/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084846502 seconds)
    (144/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.215125175 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122298953 seconds)
    (146/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099152939 seconds)
    (147/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107241083 seconds)
    (148/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.089320093 seconds)
    (149/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123638451 seconds)
    (150/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109412202 seconds)
    (151/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198494784 seconds)
    (152/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.119090717 seconds)
    (153/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.095257664 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.146313502 seconds)
    (155/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198105465 seconds)
    (156/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084054166 seconds)
    (157/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115021188 seconds)
    (158/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08382153 seconds)
    (159/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105645489 seconds)
    (160/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108004662 seconds)
    (161/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.197830925 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124027967 seconds)
    (163/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.082921591 seconds)
    (164/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106805447 seconds)
    (165/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.082080355 seconds)
    (166/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.13277541 seconds)
    (167/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.101479655 seconds)
    (168/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137796949 seconds)
    (169/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136591322 seconds)
    (170/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084669679 seconds)
    (171/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.122264265 seconds)
    (172/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096883695 seconds)
    (173/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124949892 seconds)
    (174/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124762266 seconds)
    (175/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.129001115 seconds)
    (176/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.123426262 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098176435 seconds)
    (178/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.109254471 seconds)
    (179/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103195817 seconds)
    (180/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12616385 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121315508 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083652109 seconds)
    (183/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112443801 seconds)
    (184/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.126512204 seconds)
    (185/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10774038 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.108226816 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.132465214 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122094997 seconds)
    (189/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.127940131 seconds)
    (190/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11326884 seconds)
    (191/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091959557 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114394337 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123762826 seconds)
    (194/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083548641 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083353888 seconds)
    (196/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.107493898 seconds)
    (197/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084428057 seconds)
    (198/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154802565 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.13838341 seconds)
    (200/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.222790995 seconds)
    (201/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089544754 seconds)
    (202/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.107508352 seconds)
    (203/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.089615823 seconds)
    (204/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.082523925 seconds)
    (205/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.106418891 seconds)
    (206/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.084014346 seconds)
    (207/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113498061 seconds)
    (208/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082503418 seconds)
    (209/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106686143 seconds)
    (210/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10920845 seconds)
    (211/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.107296711 seconds)
    (212/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.188127158 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.113812541 seconds)
    (214/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.106556649 seconds)
    (215/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.104485901 seconds)
    (216/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107472211 seconds)
    (217/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.09060915 seconds)
    (218/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.106390439 seconds)
    (219/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083897859 seconds)
    (220/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083710814 seconds)
    (221/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114311142 seconds)
    (222/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083564667 seconds)
    (223/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.128332503 seconds)
    (224/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115488534 seconds)
  done (took 32.170136829 seconds)
done (took 33.055467546 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.509253148 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133133855 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103196629 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127422799 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185048221 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130844942 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111880314 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.131572776 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.131760367 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100365133 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117327963 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.108273743 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12728639 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185713473 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131179928 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096213581 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121006857 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.13322653 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110615262 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136887566 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183579122 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120453063 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108928877 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119633034 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185284125 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121445106 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103700071 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127265338 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132201583 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10173052 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126837995 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094454971 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138360337 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136869157 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093236038 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124517003 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093364806 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116413458 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.12505253 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.101495797 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.13262457 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102721501 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13003237 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120987906 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.101526597 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124294142 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092044997 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13217624 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116083689 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103036838 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120531794 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.136472423 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100054419 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11626821 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093602853 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119738058 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.131647411 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093320763 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132712077 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092460671 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120449915 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11803391 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103313518 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11756758 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.100219108 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119377904 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.12369876 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103761694 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123730652 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095468559 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11638897 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.100096155 seconds)
done (took 9.942761707 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100246304 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180667718 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.186466399 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.191689063 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154779345 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138664635 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141261335 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152453059 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113184403 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146581116 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157127699 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.148303271 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.19233553 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.132872047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112809415 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126288702 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13218972 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107394004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193977223 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146852428 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156681618 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.133320836 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157659773 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117226527 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126290954 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156798849 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.126745891 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102429555 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126281001 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132716103 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121306082 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126193713 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126724541 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121944446 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136915869 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132616164 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113308203 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126823439 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12505626 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099606009 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140682013 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143069705 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099532486 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138502908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126149251 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107738093 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134193767 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.133404661 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103613795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128640351 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128285781 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131686221 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.134247074 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.132526912 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133360483 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10677128 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132900391 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.106919917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128601638 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.132911758 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100203069 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12669989 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128058834 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154088371 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102985999 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133363565 seconds)
  done (took 9.716117457 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120887115 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158805858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135563218 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.135931579 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107305927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.114469168 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090784862 seconds)
  done (took 1.796147756 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093009704 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187111907 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187648991 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211353726 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179945109 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196196414 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139957615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093113215 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.156531488 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12930476 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188077572 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219457931 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1284808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111539925 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215556247 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092249066 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190476716 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118383342 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131049013 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188685739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110706194 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.149757605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132940877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093533642 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207072475 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095355307 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268713022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110318053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124573448 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103404337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132063416 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203020194 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182794816 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136853637 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122585676 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18533482 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183081099 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132190949 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199080641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098523759 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.18076782 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130711515 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131447566 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106476512 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130664991 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168010605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137348917 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106367845 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129782005 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18820775 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.131751309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182617245 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.100729003 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.133178977 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130476361 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108733279 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138091684 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.130723798 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189072689 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133917287 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183269778 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183039183 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183370832 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.182482032 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141222094 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184064475 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180406082 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103789 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127217877 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.131573937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184088394 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104359359 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.132300454 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.167756306 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134387376 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185205514 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184427764 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128652004 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108802153 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123266072 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.104161475 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120644703 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171145389 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133637762 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102727992 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138494862 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13338705 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107029148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.124485426 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146182506 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.104870342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131585214 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.135154213 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105890449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138669214 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184516062 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131467336 seconds)
  done (took 15.126354714 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095804693 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118402269 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101034124 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120892263 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094716367 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.12451848 seconds)
  done (took 1.604155372 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129560575 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.133388751 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.143413712 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.10902929 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.190220227 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21965414 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.194787528 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131929228 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.125215024 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.143668742 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191226091 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194852752 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215794725 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.110269135 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194494519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135090133 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.193855394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131989665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141746779 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103203952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140192054 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.135343711 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104395131 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182574425 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137592035 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.133884483 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132555453 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117223011 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14051433 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13129969 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.111155575 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135782158 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129483578 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130602359 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196613096 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.104380191 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130062585 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141083718 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109573091 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.136913617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195561061 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12959785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142210797 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139189774 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107081616 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128624978 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.139972233 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106479779 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221718798 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.113757699 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140369815 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134562106 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.136531976 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.114903984 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128544799 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13148286 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114259013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221313094 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.110539559 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128790037 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134721961 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11106411 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132048963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138358035 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138971455 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11344595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.131753595 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136699578 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10350801 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.134232418 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139872273 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109144236 seconds)
  done (took 11.075885657 seconds)
done (took 40.251694464 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.12398426 seconds)
  done (took 2.071423249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.977276768 seconds)
  done (took 1.926512834 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.574928945 seconds)
  done (took 18.560600188 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.573398765 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.651347935 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992635303 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151929356 seconds)
  done (took 3.316932667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.999373515 seconds)
  done (took 1.972527751 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.327953366 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285458532 seconds)
  done (took 1.570240815 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.867340243 seconds)
  done (took 1.83232789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.461304744 seconds)
  done (took 3.42331459 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.385037652 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200480977 seconds)
  done (took 1.559364462 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.674313366 seconds)
  done (took 1.643824967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.742076944 seconds)
  done (took 36.713709562 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247921025 seconds)
  done (took 1.227326089 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31583853 seconds)
  done (took 1.284689484 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.644798927 seconds)
  done (took 4.617857462 seconds)
done (took 82.679684909 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105181572 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133852305 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107822481 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130190979 seconds)
  done (took 1.441440042 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115367334 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.132927986 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.135488166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106328679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.141583968 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106190552 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132090648 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.138312244 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106511074 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133967384 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131486605 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107395055 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133955195 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130314427 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105376594 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.134312652 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110063782 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.135610213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132599409 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.107021374 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132386289 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.132722923 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.109915369 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.132895898 seconds)
  done (took 3.959480901 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105800692 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124024787 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101925188 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123986083 seconds)
  done (took 1.429460919 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115086086 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14877829 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148049304 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.113437688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.148918924 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147757278 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102724203 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127170084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.103501485 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.140945839 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128977279 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151661142 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122855594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133046731 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.14006259 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100152625 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.133582855 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.122460375 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.140063741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140975446 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101984342 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139897451 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129096451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119469177 seconds)
  done (took 4.07515185 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.216181303 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11883504 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.156801863 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.184022665 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.157828931 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.102688496 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160630778 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137823971 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.13856716 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109013232 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.134619255 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.193137862 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133044791 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111111985 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.133058218 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139530801 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111678837 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135874375 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138037692 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117928875 seconds)
  done (took 3.812131436 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107990646 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123719329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093752603 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124264671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131028913 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102105734 seconds)
  done (took 1.669304995 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094858494 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116931621 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09359304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11789965 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097838415 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118049837 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091223085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117495096 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091817916 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118336583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091682407 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117360609 seconds)
  done (took 2.252068655 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.306602676 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096609222 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127903879 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122165017 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102496332 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.123974751 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139158654 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096432257 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.260850821 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124115655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11367764 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199931251 seconds)
  done (took 2.796200724 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231051347 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10660199 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292195525 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396974822 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175271839 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183315479 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289651188 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180685535 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234420082 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126038112 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242837321 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171309984 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167757769 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198063518 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126499206 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.202730032 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219114167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221886045 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161588639 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228620286 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181857178 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183663388 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199641328 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168197472 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151553784 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175220223 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131868316 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113856873 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217193725 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189411992 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194241496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1632417 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154280605 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22236712 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267208514 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198657004 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.332812554 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145897591 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209353804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201362874 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283489261 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153625385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217016654 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169709149 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143097716 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200444304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171428909 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.226837044 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121671857 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155884611 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205291145 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220135198 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206340055 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151619124 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318374358 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161717463 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163376915 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194222664 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210547138 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237320567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184457178 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.106286229 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227143998 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202649067 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201032685 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16258819 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189598735 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140063025 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19481218 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215847535 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200254814 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212184966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.20421226 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14719385 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180937024 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186864043 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168145339 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196428496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176445763 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.132000874 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138010038 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150301392 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13881596 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199884228 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106631264 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254305031 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147498239 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.205398792 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22478505 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175078819 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178213741 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180563474 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183744284 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161101161 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131946582 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159720254 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176805784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173333361 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117315423 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171397079 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159281422 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142257857 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168836432 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106808389 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174572968 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.147948328 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183128062 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178725743 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144162047 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180232393 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164213678 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174562408 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189657282 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206296123 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143640928 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116626529 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239613339 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171710556 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.124252261 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219233565 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209109502 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181964087 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150192433 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189286164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216084153 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156293784 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2082647 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156864187 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145827665 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167965446 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174182669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172072281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142424101 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142133648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169877707 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212951689 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.141045412 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149256115 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191062096 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13951009 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111769654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157545892 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149218795 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154926709 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.165717885 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128339803 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169617469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174659161 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16787362 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176202496 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156531475 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244595017 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117153996 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176724025 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161177896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131437704 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204034698 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20350265 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141293749 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204238694 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190460567 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239336785 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180815905 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141848517 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199735303 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113920225 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.135659307 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183895065 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179433789 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178273738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.20452603 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236629029 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188967232 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170130217 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162300478 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185229887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194013177 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17314519 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.159588951 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177972175 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185678703 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133672238 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109329011 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.141131516 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154474697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142439203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11792579 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227675537 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181871691 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204146768 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176361063 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152706599 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201499873 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.140308746 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183570123 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.193166476 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15132019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207592484 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200374202 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182991151 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15573524 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190367265 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133975539 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134980352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122591139 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185490321 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145987883 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147000804 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159215044 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202827749 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193502809 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165033396 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245932317 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189065548 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213544117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.134166461 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152442627 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213637308 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14553785 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.202229865 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143599123 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.177629661 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196975489 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158375633 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21381152 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180440367 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183883342 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251531434 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.171549188 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142704806 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138517746 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212636794 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126012802 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180381025 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160306989 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148735426 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168874184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152144768 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113262468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231475679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156289921 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201620889 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.172472956 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192682723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137044188 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157077504 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175893687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159148234 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102822458 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187388676 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236186219 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159543604 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173455448 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193437554 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114346748 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329778156 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236641161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204335232 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151591362 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15635627 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177103301 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175091138 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182073821 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202752719 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15895332 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19974344 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175026548 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156338275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119807413 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160676806 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165021455 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170193092 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150079183 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174221778 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155189436 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205832612 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1578406 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174280708 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180522936 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.160375436 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143228896 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15526233 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222071716 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175026458 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224066772 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170444963 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187344003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207766251 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107439381 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141405885 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.140881911 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202718486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143646185 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146490366 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.22670806 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214899863 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172726966 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188581503 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151004525 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.137911099 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176904333 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163331915 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213941396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155113347 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152819405 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21133346 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165967436 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142712545 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179836555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296537038 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159185009 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19245713 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104397112 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314474442 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111985812 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14327961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178524181 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189701445 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164224023 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196206059 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182283124 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130856516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177069067 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151538216 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232283036 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226846268 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189543919 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193391523 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159001242 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175426715 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179098282 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193624638 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156530568 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162104276 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178108762 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20282459 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209479099 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148273764 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179928853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180486114 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177991005 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222787973 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119665824 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205894307 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143993353 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185988596 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154572887 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138988067 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173374284 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197042799 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145007998 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194558816 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174458852 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142959827 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115463227 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167268823 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175786054 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158245284 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141545352 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202038962 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138214633 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151384948 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198804572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145059632 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173924667 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161238545 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146928601 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128657003 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159360735 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149519834 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.184027847 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203280212 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147169472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196109138 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191534246 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182065671 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175757557 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158303779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679120887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.113614002 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230519561 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133370311 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240306815 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164446048 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184549935 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178349292 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135656959 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215257685 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163399763 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209803662 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211963103 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177552664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116967914 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159110301 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159453135 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145263257 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165730505 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178876118 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124794889 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153781718 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176162429 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160655606 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160341294 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150170962 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203418413 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132490676 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235948889 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203412131 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154614921 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184690674 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196692496 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141871044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182547349 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190217516 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155856071 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168929741 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118111341 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151100382 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197568718 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135051983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177882384 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176605171 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176857895 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180042724 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.123443183 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178497713 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157441172 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175689729 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141250777 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175487735 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173993411 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145123986 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114774836 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171541651 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175172632 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.174716931 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142295891 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160149606 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225122677 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107232638 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147209015 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299340887 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173817127 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212501384 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.171913077 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148328674 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157274698 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173536762 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.171787274 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175974749 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115287205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144169587 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146804008 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196937928 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172247896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170606148 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198618614 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17871962 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208506129 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159394342 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283022497 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124904713 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171726783 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144086178 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.143860774 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126433054 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149378959 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162317384 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206652773 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197928726 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167316 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.159418178 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142915004 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106590919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146030949 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178267935 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17141816 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176005104 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16118651 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102917294 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15991536 seconds)
  done (took 85.637686086 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180289182 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15294317 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155609279 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2081135 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178621042 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266595504 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.216481669 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238176925 seconds)
  done (took 2.659411654 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133658814 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.11930773 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.15296643 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132942134 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134608559 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.444532699 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143597792 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105925151 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195749868 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.170890669 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.10362455 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.674360052 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129982727 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132869622 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124021756 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.1326661 seconds)
  done (took 4.088831742 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.433314423 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.554074079 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.941267686 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.26126538 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.243987958 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.191209782 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75466329 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203498361 seconds)
  done (took 12.641754482 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136855955 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15129403 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.353289478 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.222529335 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.170221293 seconds)
  done (took 2.103257924 seconds)
done (took 129.533259718 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109420778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.153124332 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109950562 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155129363 seconds)
  done (took 1.585888359 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156424401 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.12221705 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095765359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119550527 seconds)
  done (took 1.564277088 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.539492061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091023659 seconds)
  done (took 1.729865837 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134442161 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.156507099 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154373851 seconds)
  done (took 1.524620535 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116304447 seconds)
  done (took 1.185158263 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.108275831 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139135245 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.191865815 seconds)
  done (took 1.512686055 seconds)
done (took 10.172026185 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131745161 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.43521253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422146141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11615871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731781393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412620053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046511318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165099726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147242923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126023172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146117294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67734072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041252854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373794949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991456963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373688724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679765014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128215676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132310386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100761796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023634677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096804039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127235588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127284653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678411031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430751503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098808487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388229813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123694691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103639253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415323726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096910386 seconds)
  done (took 17.153155436 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143869964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192237451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135823574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098826696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132706504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12620864 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109681955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142384659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191367396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124880137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119070313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125773442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103285318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127285751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147952643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097645213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129498514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099339466 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134907373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127931054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118634437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125533029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099424031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129027545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124558898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112630966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126733108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138762924 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10026067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1315403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104490476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126342836 seconds)
  done (took 5.128310188 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149481604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200953668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135694985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161049728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181356801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099930052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216862488 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16770392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194239438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126196081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146747478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09820348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167204384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098727498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15097888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125621451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101510961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128969014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133968278 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101291868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146580573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096464286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128082765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128101836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098409997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141353194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099131755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141703847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125882034 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103699878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132697065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097937645 seconds)
  done (took 5.403934016 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110993368 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.140181075 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119940014 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150968941 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136340022 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110382633 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.13997745 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1043017 seconds)
  done (took 2.095722484 seconds)
done (took 30.855031256 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124913291 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14601264 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118328159 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.140921621 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.201149762 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100865402 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144257825 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.130260274 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.113108192 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147857888 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097666718 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.132918945 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118961709 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.136223248 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.18596024 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139592213 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.189618091 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184083949 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103426475 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.140176522 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10435782 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.191280473 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139185784 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10408765 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195176232 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13170261 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.181754526 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13624474 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108168381 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129057488 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1844537 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.108900243 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133365395 seconds)
  done (took 5.714344774 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201030898 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.213918395 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103594718 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.133814968 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.212819187 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102112118 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.229779571 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.105343775 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132201177 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103897821 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.130524659 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203095477 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.210940804 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.222152292 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.242889135 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.210059484 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.199933684 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.210030691 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.196116263 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.214463688 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.200330509 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132618922 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.213145741 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.214286166 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.10213878 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133243534 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.23597323 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.207766012 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.237177134 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.198127246 seconds)
  done (took 6.53904261 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11218894 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144775666 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12482175 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200675631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171384798 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140772733 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111496012 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151724245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153055112 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099443726 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.138058926 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137779605 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146424407 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138004184 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105222804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147288092 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153716753 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102267873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135340185 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11992702 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.147176604 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.146750567 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11469788 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139341108 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09978084 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140197771 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132377867 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113322113 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136600002 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106996323 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132724262 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.131849601 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102536427 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138123677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104771399 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1413908 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15508264 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108110154 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141944583 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.164930402 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108098219 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134551066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14990287 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.146235972 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.130756069 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139159126 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113292618 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137799429 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098638923 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149128616 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142154974 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101388242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.151026693 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098810462 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128908706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135930127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101960852 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.130694521 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10833257 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133236651 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155669601 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107941646 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135330165 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101581142 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134786697 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09912928 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129816718 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.135652031 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123603553 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134075787 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160118142 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.1006108 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139217473 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108067625 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135236895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136335175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100064337 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135213813 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108024021 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.13559942 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109148515 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133012975 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132559641 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119425974 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151868112 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.14150513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110365897 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139307127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.131217385 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101976676 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142177679 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101517325 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134826766 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110554687 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.13089929 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.131119479 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.112023325 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138609928 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098730138 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147861978 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.13551477 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100220579 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145847036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101226977 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133537284 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.112019734 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.142582854 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128815516 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109074664 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.14175985 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098966517 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.135103969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133191731 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.10046953 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148138259 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110210972 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133472645 seconds)
  done (took 16.119999241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.302565707 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.313166089 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209158161 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.403784491 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124861538 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.230032527 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.277782841 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.229212637 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130377925 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17392199 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190443044 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269397225 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100710772 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163309877 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309423597 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.376658462 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.162107235 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174990419 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174120343 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124510792 seconds)
  done (took 5.541793846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123881941 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172460733 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162304312 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163174122 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107807819 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144552071 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128863561 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.126714075 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.138897742 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135925293 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100179604 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.144329726 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.107766168 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139290439 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148323491 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148948871 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135376355 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.135301248 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.12425025 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.136467154 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140222842 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159074133 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113200026 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159403114 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.145100774 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114925924 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129359205 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135339223 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103149923 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134174121 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106657857 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152073222 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136511254 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106591599 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13870325 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111345746 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.131795978 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129398292 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102107554 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131773497 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118088137 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.139696365 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104418274 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125602634 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.113520739 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.132015694 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.140630888 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.11129403 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142619643 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.115712853 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142007769 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.142224467 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10895552 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149918594 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102759271 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.147049815 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144319834 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140026194 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108831169 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130143715 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099506229 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133861938 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105353419 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.142236604 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138289357 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125328899 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.146961419 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132134328 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10811182 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134824577 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10384891 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149635439 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158349343 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.13474337 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104123568 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.151732082 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104993689 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122131792 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.11163885 seconds)
  done (took 11.392158838 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132056329 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.136177418 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122151928 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168465682 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.150966069 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106691651 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136648834 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119756583 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.143251056 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.144568743 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.112617099 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145594268 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155983946 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113712915 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135274097 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144907417 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110929594 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.174643835 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150549723 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134873581 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.148936833 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134401134 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115291398 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143686806 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.165016204 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113593356 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16457442 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.139775874 seconds)
  done (took 4.984319869 seconds)
done (took 51.374300826 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.222765338 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411038896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.187053554 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.185773461 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.188680769 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.21743227 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.188125464 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.378365383 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.923941148 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.186612155 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.190842442 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.184375562 seconds)
done (took 27.572646124 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.244879947 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.778919215 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501815953 seconds)
  done (took 4.388416904 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.179862851 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.181478391 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.424138934 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.192464906 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.180668944 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.197772093 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.180468199 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.18854069 seconds)
  done (took 15.652953538 seconds)
done (took 25.576142284 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.238295408 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.383339853 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.450596839 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.198769588 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.184174719 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.181905143 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.175763419 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.217445943 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.188176121 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.180752361 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.198446107 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.454088896 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.184881229 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.581164711 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.18090645 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.197564672 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.199257811 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.426755156 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.195662592 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.229778028 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.183216317 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.174475853 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.206969195 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.210318649 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.197263986 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.194656352 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.187901357 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.176850679 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.39764163 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.203336264 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.234756247 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.186608721 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.198491497 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.187097518 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292407011 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.20753369 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.374414234 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.188291965 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.177968291 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.188770891 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.378619494 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.580373071 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.196000608 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19111819 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.190590116 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.257098727 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.181241227 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.910466977 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.193883867 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.17877251 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.200246999 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.608680305 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.18906044 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.198886068 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.20842088 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.42810833 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.219429954 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.2168514 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.215897525 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.188396605 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.185039921 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.211312253 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.205261685 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.193371722 seconds)
  done (took 142.454211204 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.184966689 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.190942937 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.184897133 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.246257232 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.189846417 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.191265952 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.18381122 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.185390446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.191243808 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.187115107 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.191757838 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.186324248 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.19119755 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167527016 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.191126093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.210153695 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.194118954 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.185330663 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210304602 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.184725371 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.187357154 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.190742422 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.205313767 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.188141097 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.231426768 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.280914196 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.231498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.223632177 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.197576076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.188379935 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.226221433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.255791169 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.796797859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044963001 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.202092059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.20846389 seconds)
  done (took 79.820110484 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186799189 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18684248 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186282833 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218501658 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19132315 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.743554788 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.750787021 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.923493537 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.303208531 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.477913409 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480728449 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193512929 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279312111 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.198641731 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187635607 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201980572 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229384471 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19319891 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186869229 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.73729942 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203857297 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.393744233 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.356049068 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.199513511 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219247937 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592865932 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186755124 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218160748 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521872113 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236300306 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186874817 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.560256897 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.659927307 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304080184 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187495236 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215927854 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189668703 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466341043 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190250042 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.185035044 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189737153 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187434908 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188832221 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.851251478 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190330354 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.73450594 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191606546 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151256157 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.18964432 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186830422 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.523849834 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.852958584 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20547058 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189716213 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194776753 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190273057 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1897 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220035642 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.404498454 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299979406 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207638092 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194745566 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222724953 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190961784 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.264282558 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191649304 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.211033908 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.245981779 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.39889492 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.725544477 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192977601 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286998359 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305984996 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188225234 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190409793 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192500015 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.192796276 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296958371 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187008498 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.593348105 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.355446335 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20278966 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.424255856 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.289207636 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189124487 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54969876 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.192137511 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19494383 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940319213 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289515807 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187729369 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190442007 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188726265 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.596374901 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188279186 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.39538673 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726366098 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194017854 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.559787471 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193143721 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.593270094 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.702748863 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.84538159 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193947191 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30352289 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.355234838 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20073091 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193268779 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.192127486 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.415033477 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194405031 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252434557 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.187805317 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591353355 seconds)
  done (took 363.529441094 seconds)
done (took 586.911898055 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.937021447 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882791265 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.009772057 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.903770964 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.871612092 seconds)
  done (took 10.717488628 seconds)
done (took 11.830541486 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377414327 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.373792128 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250922958 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.375256465 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223571915 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394210065 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356190707 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.212957422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.29178423 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26698087 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.293122663 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242209234 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22659053 seconds)
  done (took 17.997759088 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.455310981 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19348558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275464948 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.439976248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229860184 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463384626 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48443512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19592926 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342047698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207635392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205260972 seconds)
  done (took 17.605907305 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478215352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195364574 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279630364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445859685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23487231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471350632 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.486617791 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197138484 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333432129 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209824249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208986492 seconds)
  done (took 17.65660004 seconds)
done (took 54.373606081 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236586915 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.358336085 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220736551 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215266738 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206681024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206402326 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214460168 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207633031 seconds)
  done (took 10.981531246 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206636997 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204113131 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203978287 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205256518 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204489426 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205283113 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204078206 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20351648 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203533128 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20454916 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202803676 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207750774 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204467813 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202491957 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204885106 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203528484 seconds)
  done (took 20.388403822 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20984884 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205210374 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208323974 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204604954 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206735811 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203168636 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.204434389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204156584 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205575407 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205351276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20496399 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205635918 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203090525 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.204001144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.204987517 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.20643077 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203883036 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205098994 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208584458 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204696081 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204776155 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20380588 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203398769 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203426798 seconds)
  done (took 30.043131028 seconds)
done (took 62.527074291 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.212690291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.201063244 seconds)
  done (took 5.529873542 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.267368652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.262940751 seconds)
  done (took 3.650309925 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208308856 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203893255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.204826791 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205737137 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.203985374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204633447 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206239724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205542735 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204366095 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.205693469 seconds)
  done (took 13.171398737 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207878233 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20618203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207378888 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205875183 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205999717 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207541922 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205495495 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.205259483 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206064418 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206662834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205435195 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206334762 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206007193 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206289394 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206573212 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205781197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207160556 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.207697436 seconds)
  done (took 22.834914964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223788213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.229147105 seconds)
  done (took 3.570891654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.351779082 seconds)
    (2/7) benchmarking "second"...
    done (took 1.248390139 seconds)
    (3/7) benchmarking "month"...
    done (took 1.326295352 seconds)
    (4/7) benchmarking "year"...
    done (took 1.313922223 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.249388427 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226437912 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248471036 seconds)
  done (took 10.082761584 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.210035217 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396485309 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506315478 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.77310898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20889377 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.25196456 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.082116955 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.253474876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242038576 seconds)
  done (took 14.043073092 seconds)
done (took 73.999651399 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.198266425 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.244335948 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.213829551 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234951106 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.548302746 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.241407489 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.200546451 seconds)
done (took 16.001930447 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.192240893 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.193272456 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.196189512 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.204476678 seconds)
  done (took 9.905722032 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.158679976 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570004522 seconds)
  done (took 4.848729554 seconds)
done (took 15.873127903 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209909538 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208776671 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207679697 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.207460206 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.208522494 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209375251 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.207956213 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208152144 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208336908 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208432919 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.209005333 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.20866951 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207935935 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208780212 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208626754 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207924371 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208085603 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209643317 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20789062 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207783997 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208859799 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211324255 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210431764 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211703132 seconds)
  done (took 30.132172121 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212032922 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209540397 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209444374 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209679636 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209816267 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.209228448 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210190208 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208756071 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210962704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209692276 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21093879 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211118947 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208303163 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21087467 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210518877 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209661265 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210487329 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2113515 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212104577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21114119 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211057021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212127864 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210828786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210658275 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210703409 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210862312 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210443405 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.209778602 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212216212 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210978341 seconds)
  done (took 37.438449633 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218602766 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219835209 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.210273201 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210291091 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209489503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209867881 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213064673 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.211261475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209671004 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21241853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21336471 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210235299 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212439734 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21155208 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212207724 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212111316 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212092626 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211434624 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212323552 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212694562 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214108389 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213812789 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.210875697 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212886031 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21140322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212077617 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.212041229 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212245651 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211158679 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211695138 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210982957 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21239571 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.211920731 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212567348 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213067018 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211867953 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218461998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22049242 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212630696 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21196563 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214287136 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213145432 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213114344 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215369015 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212536178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212511366 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2129832 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214174059 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212915954 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214591138 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213329933 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213745626 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213633802 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213882089 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.211897515 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213573359 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21361747 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214683387 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213985252 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212348206 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215354782 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215386504 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.2127794 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214822812 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214913711 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215241533 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21272937 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215469488 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215903278 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213743902 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215466645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214495413 seconds)
  done (took 88.475848733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217433029 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216228436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216451795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217466498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215516342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214864453 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214731219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215196044 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214190657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215587203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216230072 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216087814 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216897144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216639369 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21618068 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216318878 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217529774 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216790292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215260292 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217861834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215734727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217932548 seconds)
  done (took 27.88355521 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217974142 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217345207 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217216509 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218350919 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219233749 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218571019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21792359 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216675347 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218428825 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21933013 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218109224 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219028246 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220693545 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217970246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21789465 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219535997 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219819032 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220133743 seconds)
  done (took 23.06106712 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220617976 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216675832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217808006 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219620629 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218515445 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218468525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218340072 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218878838 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218747269 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219095757 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218024384 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219437038 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219556432 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218431752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217652115 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220444346 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217537409 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219292018 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219549318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216673297 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220085312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218772553 seconds)
  done (took 27.939875088 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222589064 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220190061 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2191572 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218839482 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221639465 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219426312 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218273753 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219970639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21921028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220115408 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22114943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219519123 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221929997 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219855427 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220100771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220301859 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22066909 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219950749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219639702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220880888 seconds)
  done (took 25.532519058 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224032196 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225007315 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222338236 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222318773 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223061692 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222352045 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225873667 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223284239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222354019 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224665208 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224222571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222943421 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223493548 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22307601 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223800096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225151247 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224869245 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224199704 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223971984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224495808 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223588123 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223260246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225232021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224354157 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223797496 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225514963 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227229048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22611691 seconds)
  done (took 35.407838498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226498725 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224086385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222784149 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222861832 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224172491 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222864132 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223938428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22343454 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223805522 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224522283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225145238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224890745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222910342 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224554888 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223026968 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22482925 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223292435 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224185165 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222736198 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224192004 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225535648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225059665 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.224799678 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223895069 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223119207 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224456944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223966552 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225480405 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224036293 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223759952 seconds)
  done (took 37.857808558 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273851333 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268324631 seconds)
  done (took 3.675667521 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22655267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225553035 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225112016 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225486291 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224060877 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225711338 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225596861 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226513112 seconds)
  done (took 10.938604662 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223710073 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227345211 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224547544 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225591597 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22475881 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224884384 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22997758 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243841262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220748605 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224241981 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232356434 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231639848 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.225240107 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223390655 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222570963 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226026398 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228687165 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225150993 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229396369 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228066579 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226217467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227169838 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226897364 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.228776292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22455303 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235872885 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244392481 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229755651 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224219852 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.227361445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223394719 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228696709 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227556665 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231448823 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23126355 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227885149 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234736849 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24270856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231452877 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245098345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229612218 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.227426626 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224136327 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.226722743 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22786876 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229012927 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232199787 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228483344 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2221862 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226814142 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238444729 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226652245 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230812814 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22808296 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.228062176 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234277048 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248519733 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231462882 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237986327 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.237374731 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255010359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248371144 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230694083 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230763573 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239261119 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251851336 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234327244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249365432 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.231275853 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230062579 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233547373 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257976822 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249602294 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229731649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234100141 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23325088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22828584 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232296928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233510272 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247228303 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232536682 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234947569 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237947802 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249557721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227627302 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230517884 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.233567148 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234836219 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232440536 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239936179 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250340041 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234028371 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.226138573 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229193811 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.230429938 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.23281844 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.22979213 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228067896 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23305221 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233276847 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233339355 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233847821 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.23862956 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234785363 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236667362 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.237365221 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249738011 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228884897 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234899832 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236146107 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231707129 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234353378 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236286499 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.235264477 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233085173 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238113529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.23590036 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234122696 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234489173 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237566466 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237976321 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256181106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235174804 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234643465 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233885687 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249377905 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239033448 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235171021 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235482878 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236825019 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234761577 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231278542 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237046438 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23278392 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235693967 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234981374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.236880884 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234760823 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234342481 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234978339 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.232511949 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230976195 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233658498 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.234392745 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.236045758 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233659033 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237200807 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249826121 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232051005 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23374152 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235422376 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234975699 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232233371 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234489778 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233332857 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237002903 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235254456 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236123037 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238447627 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236410985 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236306506 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.233252883 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23751021 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.235440165 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.237769377 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234197118 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236366136 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236218016 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237223072 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234179904 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237036448 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23406326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236584972 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247686963 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239769122 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235718024 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238405699 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239719263 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240559428 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240383249 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237631172 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244953735 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238088767 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242441085 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.255576717 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239467115 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24171311 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236122131 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235443973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238832129 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240987084 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251041689 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246002585 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257529255 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236253359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242353699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235541059 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.244838855 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241924181 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240778898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241702619 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238417886 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23887778 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241098495 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236580064 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235654034 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.23528298 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237891358 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237061781 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237087112 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239845232 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.233073942 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234834932 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.237421352 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237160751 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237578114 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235504901 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.237492109 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.233703416 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235309706 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23837556 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237311777 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.243133826 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238872132 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235521025 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237968056 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238132586 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.234572345 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238869532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236706159 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234684114 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241093554 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.253380689 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236205358 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241780651 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.254723516 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.23427181 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236847347 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241008311 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238771427 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.236782192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250434487 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241437366 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23743627 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240535963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237277357 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241461169 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.24168293 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257460385 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234296445 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240396773 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.238180578 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239671233 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236741581 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236562833 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239642536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239311152 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242227966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24183979 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237016007 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240738173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244475369 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239569881 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242915102 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250658049 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245933784 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.238165436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24133408 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.23845675 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248397468 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239280441 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243055093 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24200807 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249702717 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265990734 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246877172 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256553634 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24491361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242440872 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25714289 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.244000174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238892942 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240503922 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242581791 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239989791 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244792696 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23869946 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.243637467 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238790846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.240010004 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247117479 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242138361 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239612784 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.24357362 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.243155272 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244192471 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.239514102 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245812703 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240400048 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242602551 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240137683 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.702060978 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247744479 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259398545 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.24216236 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240678642 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.23981347 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.24013665 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242671288 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245424967 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246038695 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.255482863 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.246314708 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252559039 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242602031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250365745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243947086 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244112683 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255257149 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24718168 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239111431 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24153267 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.247673959 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248718575 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.262918455 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.243882732 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251229792 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243341436 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245723294 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245386191 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243065029 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246988938 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.244262778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250178756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.258035775 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245019125 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243364775 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246159244 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245306124 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247799806 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.239577213 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244080958 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247975275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.244579645 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242207103 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.242390342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244721659 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.245336877 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248103446 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248124811 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24466724 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25067002 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.261691653 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251968476 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248076407 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249709865 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264530973 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250947201 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264170945 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244244998 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246773399 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247127076 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.244041696 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243743833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244775268 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247950609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244423698 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252618816 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246207472 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244705144 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244166744 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249457221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.246741018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250955897 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271115796 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245680235 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252387831 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.247478276 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.244363045 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.252424218 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.24737021 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244301213 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247237921 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254670965 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257248818 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244700002 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248293287 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246585176 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248941789 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251138583 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.249296275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247803037 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249358005 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246633556 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248231839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248477269 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249451366 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245326858 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246604663 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24660012 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255290439 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.265453891 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.245668491 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249066944 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251483451 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244237698 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246288448 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.248772467 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244455355 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250798215 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.246848393 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252911599 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256521109 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249170032 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.245638881 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.250147745 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247777407 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247034419 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249937624 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.249650585 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251580738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.249684854 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.250429845 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247246676 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246149947 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.250253708 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246212178 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253286636 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249112133 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.25864215 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249438471 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251785655 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250320268 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251146536 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246196584 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246911633 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.254478449 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267168459 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.258629802 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258001401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256276218 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.250112368 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252106573 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257745886 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247824456 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248386361 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.252714066 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24994073 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.248207679 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251757765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252440637 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.256171248 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.265831083 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248862533 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256383059 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267389152 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25311547 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.251350567 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252883407 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249283961 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255136521 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252280479 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.248204352 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258431527 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267239422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253110359 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252860048 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.248783901 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25192867 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26010875 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254840178 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25085199 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255492319 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250491052 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253771435 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256775384 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254620394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.248464609 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.249557056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251180034 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257645237 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.253368823 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252450688 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.250812452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25194872 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253609531 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25414281 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.253709663 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252884997 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.249379053 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2539649 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249430349 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253848786 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250109522 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.250682555 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259791766 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253666552 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254908474 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264985294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265317154 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253452371 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.251119551 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252214895 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.255659502 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256372258 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256064045 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251584297 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255340667 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.255584341 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255233322 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25699101 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256205904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269017366 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.275780287 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253432988 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252991522 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256745019 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255604366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.254632392 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255833237 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.254151275 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.2551175 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265903202 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25822755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26205029 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270804294 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256003544 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.260225079 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25599974 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263060861 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2557203 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256524237 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260123884 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.25869048 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270338171 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260220706 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263086073 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284405438 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271454874 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.255913406 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258286604 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254134095 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260046281 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256553877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259155975 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.259892649 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259048555 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.260482095 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.254932722 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260815589 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256850322 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.25941534 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.258413985 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.253928244 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259291677 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.25898101 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257949815 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.259973537 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.259601528 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259851901 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258768299 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256720415 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268273831 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281307469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.261912539 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25927149 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.258896532 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260415901 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.258915705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269026362 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26945693 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260923313 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.261772836 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259585592 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262785335 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262474979 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257410189 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257687685 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257249045 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261211612 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269198184 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284124094 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.260779633 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257411414 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262193089 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262560305 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257562135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263422532 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260614527 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.258769713 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.261100797 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26590804 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.262946772 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.261406613 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.260754061 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270843233 seconds)
  done (took 743.766820277 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26305743 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261718704 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262141486 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262265531 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261542002 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261203892 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262763026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262671126 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261504826 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263263741 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263678978 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263677671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263265526 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263711192 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262677855 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262983767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262096518 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262984311 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263031217 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26315245 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260877049 seconds)
  done (took 27.6810834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.264088183 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26403715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26464769 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263786049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26205162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263341976 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264924859 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263599721 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263636739 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263341425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263499278 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263816264 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.262734982 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263716115 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263301417 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26311256 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264905467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264307451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264273788 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263839424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264893264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264410598 seconds)
  done (took 28.973974743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26740567 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269669717 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267166407 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.269450319 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268831992 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270180466 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269154656 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.270257195 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.269397185 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.267690648 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.265106466 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.266545134 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.268657108 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.275199414 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.262568329 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.266250415 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.266192693 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.268243427 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.266718877 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.265970032 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267212686 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.285961311 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.265664141 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.261713165 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268395723 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267305299 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.265608505 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.266573801 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.264957386 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.270961349 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.267859494 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262794391 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267701086 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.263739562 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.264662397 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272754253 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.266735909 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.270182366 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.266390097 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.272567843 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.293117568 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266330434 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269934886 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.285680224 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.268895748 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266511671 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277643272 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.268851722 seconds)
  done (took 62.089949931 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.852191429 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.863708132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.86991995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.864140193 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.862273378 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.913159805 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.872500636 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.87479774 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.865035313 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.861845912 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.863559107 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.878284698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.866643668 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.865490745 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.863090639 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.868001822 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.863874916 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.865436701 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.876941079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88303117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.868623454 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.861783896 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.863033098 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.862656434 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.875454449 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.865741756 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.865519203 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.864748818 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.87180304 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.868674438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.872431832 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.865128277 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.880103943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.86932666 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.867990229 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.863109959 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88106737 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.867038944 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.863856265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.864034019 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.873392583 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863788276 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.86804789 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.877435107 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.88568535 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.875932347 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.872799967 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.868986097 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.873720566 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.887435904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.871439169 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.87644535 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869723433 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.873194247 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.870246034 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.87051843 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.872184833 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.886590732 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.874080575 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.876224299 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.878610591 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884370459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.879198977 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.88180126 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.871697521 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.875809799 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.881576256 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.871893522 seconds)
  done (took 128.445416251 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276735013 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276057383 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274817835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274266604 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273990923 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275068335 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274850291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274691397 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275883211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276116086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277288479 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274186053 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.273292518 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277130695 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274355061 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276936685 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276369831 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278385642 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278681297 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278257965 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276670776 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276004843 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27678183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277392603 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275592994 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277152626 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279162971 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275647457 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276719797 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27705273 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276713081 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275644509 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276716301 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278723623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276337684 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276499157 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276148682 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27579059 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277581997 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277783549 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277466886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280623732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278150974 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277710915 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280236555 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278099829 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278889332 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278126867 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278051926 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276282291 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278817604 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279221496 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277503847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278433907 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280362659 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278959403 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277195897 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278112363 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278371546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280324366 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280253759 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277449167 seconds)
  done (took 80.362181881 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27797246 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278136621 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276994079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278971926 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277908457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278753892 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277081037 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.277501726 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277641605 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276393359 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277377913 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276869372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277772495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277377543 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277319688 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279529161 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277048952 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27745025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279286027 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277894309 seconds)
  done (took 26.734151885 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277596064 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278448252 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277389119 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27801316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279326582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278006899 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277721848 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277178312 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278225036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278305681 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278777114 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278472315 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27899202 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278478051 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278986016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27854228 seconds)
  done (took 21.632037739 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280570558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277904198 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.278495437 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279446229 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281604531 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281461444 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280115871 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279199753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279892698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284302459 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281051559 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.279717171 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27960012 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281009561 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279754802 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281404134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278695699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279870595 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279989497 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280794692 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282597474 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280030344 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281032714 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282273757 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279125089 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280436824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280436247 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279453092 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279772303 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281058988 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281099067 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282206755 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282255203 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280657432 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279375803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.280742382 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279876253 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281128162 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280864606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28102864 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279483061 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280155349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281704406 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.28163604 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281606978 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282092812 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280085539 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280276458 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282987386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282503653 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281209983 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281029568 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284163704 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282311143 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282089016 seconds)
  done (took 71.62775584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281579404 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281648899 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282374304 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283716774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28186401 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283542335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284271717 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282955932 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282106293 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283766938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282218516 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283107937 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282814212 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283273753 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282055642 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282481255 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281210454 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281928954 seconds)
  done (took 24.270916463 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284792833 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283111405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282553345 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283877013 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283776957 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283670501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282062291 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282183697 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28341968 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283831188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283925145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283563486 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283769667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285173292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285167699 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284507198 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28348436 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285566841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283748555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283045245 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284439934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284831893 seconds)
  done (took 29.430392582 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.280084788 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.281843917 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.279748913 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.295846982 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.305080521 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.280599633 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.280988458 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.280912046 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.304425362 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.347770604 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.342358875 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.302827133 seconds)
  done (took 16.766331955 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284936141 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286344201 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284401629 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284266627 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284437397 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286380257 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287031563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285361893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286254662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286759411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286609072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284635267 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286664151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287604583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287088897 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286501194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2865843 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286695294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285638485 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284465211 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286272489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285182262 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286191871 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28646475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283578691 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286570447 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287160297 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287111946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28606086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287430145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286007821 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286308887 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28674313 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287292544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286070214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285187765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286689157 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286691213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287624965 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286385114 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285324316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288704151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285732793 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287053751 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288784633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288573761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287031459 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287828372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286352523 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28886005 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28678155 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289860187 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287927323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289306273 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287772876 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289506316 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288911639 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287278923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287033816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289831042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290310155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28919022 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288080674 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288804791 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289154582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290358962 seconds)
  done (took 86.130776017 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291461481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290477619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289551563 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290485746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29130909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288758093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289690625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289646548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291954563 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290623129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2893829 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289377636 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291148769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288824412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289428767 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291391383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291084377 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290635192 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291224509 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291977638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291780666 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291861373 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2916718 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291158899 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291048792 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290310379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292162143 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293431527 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289977731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292413759 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291849997 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290929701 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291466646 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290451642 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290733632 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29136793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29164739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292425614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292954777 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292381179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291218333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292508359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292825278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293494485 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292810011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291993104 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292262801 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292812335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290819574 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293519494 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292524172 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292656041 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295002644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294063935 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292331294 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292178765 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294241201 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291764543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293658476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294538565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29303258 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294434663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293947152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295436301 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295440654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293919393 seconds)
  done (took 86.457432343 seconds)
done (took 1783.83157535 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455542432 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.409255506 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289983381 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.301623433 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284997124 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.31449677 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.300465334 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.286682481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289533477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.287711348 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.287322747 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478744601 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.288422613 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285705069 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289515843 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386725738 seconds)
  done (took 26.431411843 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318269665 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298749383 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.405010255 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31035015 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.318900797 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.477514086 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.347857306 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294941657 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460847971 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.313426387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.288673243 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317831596 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.296108668 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.285306866 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328664283 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.480257694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.542355321 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.291039858 seconds)
  done (took 28.570672422 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.730579325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.318414055 seconds)
  done (took 5.243836888 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314832235 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295752801 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.298516464 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295354925 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.287950142 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.288213066 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294999581 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.293743013 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.295675252 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415773938 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300000533 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308130868 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31242191 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29716386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303207392 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340126768 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445779968 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30085333 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300199043 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300218359 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.296625764 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396687549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338953084 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301220587 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.414603982 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.299543883 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301247784 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304205395 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421627521 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303166127 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.29578117 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.29732331 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.296116371 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.290690013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.78395638 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.309052195 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.317484207 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322969806 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29991613 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458409822 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297568407 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30402966 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.291766211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.7668451 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436128495 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.420587352 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.307358189 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.298693019 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.301426319 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.365440322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.299640816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.300354157 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357876419 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.107527535 seconds)
  done (took 83.40254288 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.299206021 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.289156977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470229275 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.31659965 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288234028 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291779258 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.307177023 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.568991102 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.317761267 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290645274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584245421 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.858012022 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316220886 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.349020381 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.155065701 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.364018308 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294034083 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.308294262 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292926205 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.290804163 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834338803 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297343185 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.292404804 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453415086 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.327000649 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806465512 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.304799469 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.293994742 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.316268776 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.290224278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81285706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.31407681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364543044 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.290238199 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.560164444 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667050818 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629578585 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.298680662 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319726284 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.291933226 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.299190958 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789465171 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64843708 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.294624678 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.292571012 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797450113 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.293390212 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.293908797 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.297922092 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53900749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291640474 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.292756534 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321222996 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293464892 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.292709468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.379915321 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.388458098 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806134483 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294827787 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.294351617 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313689692 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294059573 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298564827 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292954768 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.307771622 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648892764 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.448808932 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298785361 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650749634 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810320047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310050076 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868062236 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.30963963 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.300521793 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.506812712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294120106 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.311500938 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816631651 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.339386376 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.289881789 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631150348 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.298777203 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.580874763 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.313482521 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292806925 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851470211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.298945967 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.312064971 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.294756552 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30654173 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.296255473 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31138457 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.568842277 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.32664585 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295888855 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.295700916 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.298598761 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294220931 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298598615 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301599429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863138576 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.312010847 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.295736741 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299351597 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.298335069 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312756156 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.295156075 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298847681 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562546103 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.296475139 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.321458804 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296292819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29248038 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.32019158 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.470166838 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.303937319 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599371941 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.300747367 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296129215 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298582847 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29688956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302586406 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292333079 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304458064 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.208954484 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.561081483 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316990696 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.312179901 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298483346 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318444453 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299283593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299472576 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.344489353 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300965436 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075480666 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327356183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.333135801 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298398389 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303580382 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299748333 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.303677246 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29762782 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593811676 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572801653 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.448732809 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.307065805 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298674427 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068259042 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.369089385 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476766547 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318831391 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295420349 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546626679 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.531331376 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.298375419 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.295680655 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.300694681 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.555657429 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.301374887 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620704593 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845447595 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314355776 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312146286 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08977218 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.99047504 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.301380412 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.303136318 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.582732104 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.316008478 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.302026788 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.302141058 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301880591 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.316668763 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316180716 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304634269 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.301826643 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.301482136 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344009833 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492812749 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.321259724 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.302234374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809310219 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32360554 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29894277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.306175497 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.303856267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299823392 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.376577638 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.302310295 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.348377458 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.305196623 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306660868 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8275853 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.303717516 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.30462116 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492895399 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991051895 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.318245216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.303661782 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321020087 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.202932182 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830518328 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344729702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.60510676 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.306862757 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.339254619 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302860578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.403262251 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831038083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304208123 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322055397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959267369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.319981884 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.831303974 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.301322094 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303144114 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90848205 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321162521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.306405491 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.300145896 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306183552 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601446825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.306347161 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.30787008 seconds)
  done (took 490.516172737 seconds)
done (took 635.357824806 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304996943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.30087029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.296143991 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.305517995 seconds)
  done (took 10.419130056 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320176306 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309243163 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316484124 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311189602 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316576111 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3107517 seconds)
  done (took 9.097046936 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306010389 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303422216 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308270664 seconds)
  done (took 8.129643305 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.507986975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.332843344 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61789915 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330792375 seconds)
  done (took 9.002783657 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318283823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318804087 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317631456 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31989581 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320324799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321654972 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318850635 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.31780502 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319944769 seconds)
  done (took 13.086564786 seconds)
done (took 50.945183814 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.362601526 seconds)
    (2/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.196030206 seconds)
    (3/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.363171038 seconds)
    (4/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.461437261 seconds)
    (5/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.431824572 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.405422692 seconds)
    (7/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.318543935 seconds)
    (8/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.093428991 seconds)
    (9/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.384678873 seconds)
    (10/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.311654756 seconds)
    (11/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.013714424 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.371808909 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.450150415 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340415136 seconds)
    (15/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.605302153 seconds)
    (16/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.305336254 seconds)
    (17/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.489409214 seconds)
    (18/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.30227827 seconds)
    (19/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.476540879 seconds)
    (20/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.310583214 seconds)
    (21/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.523120282 seconds)
    (22/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.479622687 seconds)
    (23/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.395954795 seconds)
    (24/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.336462121 seconds)
    (25/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.349387854 seconds)
    (26/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.389530451 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348400346 seconds)
    (28/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.364434709 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.349592077 seconds)
    (30/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.346444592 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.459068153 seconds)
    (32/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.463225649 seconds)
    (33/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.457046162 seconds)
    (34/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.363577123 seconds)
    (35/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.509405462 seconds)
    (36/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.305667281 seconds)
    (37/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.451140397 seconds)
    (38/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.305630688 seconds)
    (39/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.528057745 seconds)
    (40/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.435642227 seconds)
    (41/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.466278581 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.454240963 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.389473012 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.411339896 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.454143148 seconds)
    (46/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.321786028 seconds)
    (47/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.39477467 seconds)
    (48/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.97129467 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.400205385 seconds)
    (50/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.127754132 seconds)
    (51/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.361223464 seconds)
    (52/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.351058133 seconds)
    (53/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.423665172 seconds)
    (54/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.495116046 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352192203 seconds)
    (56/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.635712626 seconds)
    (57/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.347310879 seconds)
    (58/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.371188539 seconds)
    (59/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.321378305 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.445668015 seconds)
    (61/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.315068136 seconds)
    (62/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.094797157 seconds)
    (63/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362029478 seconds)
    (64/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.459282181 seconds)
    (65/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.679401364 seconds)
    (66/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.453482689 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.531864233 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.313702424 seconds)
    (69/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.393968682 seconds)
    (70/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.404944854 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.341073075 seconds)
    (72/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.473682848 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.457174018 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.524714646 seconds)
    (75/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.669073058 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.540113862 seconds)
    (77/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.464742824 seconds)
    (78/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.467619632 seconds)
    (79/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.42639612 seconds)
    (80/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.355409056 seconds)
    (81/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363403453 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.396821778 seconds)
    (83/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.414686577 seconds)
    (84/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.370172523 seconds)
    (85/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029576112 seconds)
    (86/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.334476564 seconds)
    (87/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.319247951 seconds)
    (88/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.309020187 seconds)
    (89/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.322987813 seconds)
    (90/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.102053007 seconds)
    (91/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.334028119 seconds)
    (92/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.470459583 seconds)
    (93/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.308605505 seconds)
    (94/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.320348618 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.472901776 seconds)
    (96/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.520901661 seconds)
    (97/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.393892934 seconds)
    (98/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.375329647 seconds)
    (99/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354971355 seconds)
    (100/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.514290019 seconds)
    (101/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.353538459 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.44084563 seconds)
    (103/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35515586 seconds)
    (104/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.9773674 seconds)
    (105/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337258145 seconds)
    (106/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.398457205 seconds)
    (107/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.549375334 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.415228502 seconds)
    (109/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.395412677 seconds)
    (110/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35485064 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.447207053 seconds)
    (112/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.423828342 seconds)
    (113/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.480262571 seconds)
    (114/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.428633361 seconds)
    (115/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.363155008 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.423646306 seconds)
    (117/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.365870602 seconds)
    (118/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347829096 seconds)
    (119/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.428659441 seconds)
    (120/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.413723365 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.007865919 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.370967287 seconds)
    (123/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.427720528 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.412932535 seconds)
    (125/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.318174619 seconds)
    (126/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.373615482 seconds)
    (127/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.005244075 seconds)
    (128/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.336092053 seconds)
    (129/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.399832454 seconds)
    (130/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.480560441 seconds)
    (131/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.48014618 seconds)
    (132/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.373563641 seconds)
    (133/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.520218809 seconds)
    (134/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.371432875 seconds)
    (135/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.318806205 seconds)
    (136/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.325449426 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.410270414 seconds)
    (138/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.40356369 seconds)
    (139/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456253228 seconds)
    (140/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.974291152 seconds)
    (141/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358046514 seconds)
    (142/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.41130399 seconds)
    (143/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.098883728 seconds)
    (144/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.988287993 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.320454346 seconds)
    (146/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.337504133 seconds)
    (147/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.336264454 seconds)
    (148/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.442485912 seconds)
    (149/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.347661728 seconds)
    (150/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33722378 seconds)
    (151/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.397612066 seconds)
    (152/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.524388624 seconds)
    (153/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.429579659 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.528934382 seconds)
    (155/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.156361217 seconds)
    (156/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.063647465 seconds)
    (157/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.419537236 seconds)
    (158/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.313915374 seconds)
    (159/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.435997498 seconds)
    (160/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.518647777 seconds)
    (161/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.076097384 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.337643439 seconds)
    (163/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.425660794 seconds)
    (164/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.079949964 seconds)
    (165/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.326468963 seconds)
    (166/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.439670481 seconds)
    (167/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.363865962 seconds)
    (168/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.448465664 seconds)
    (169/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.395969145 seconds)
    (170/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.006922336 seconds)
    (171/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.347626336 seconds)
    (172/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.321057371 seconds)
    (173/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.35364636 seconds)
    (174/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.400685643 seconds)
    (175/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.370834004 seconds)
    (176/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.350199805 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.39723191 seconds)
    (178/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.004802573 seconds)
    (179/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.524580421 seconds)
    (180/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.356341361 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.415462981 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.456041498 seconds)
    (183/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.496118957 seconds)
    (184/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.323848043 seconds)
    (185/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.483734234 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338475578 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339890493 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.431495979 seconds)
    (189/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.374244412 seconds)
    (190/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.518206466 seconds)
    (191/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.413844185 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.375969172 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.358984536 seconds)
    (194/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.399589027 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06378183 seconds)
    (196/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.457229087 seconds)
    (197/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330067365 seconds)
    (198/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.372709201 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.426513645 seconds)
    (200/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.244210915 seconds)
    (201/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.489088249 seconds)
    (202/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.580821252 seconds)
    (203/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.38564402 seconds)
    (204/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.410842257 seconds)
    (205/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.490310427 seconds)
    (206/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.468863117 seconds)
    (207/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.51021761 seconds)
    (208/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.535471819 seconds)
    (209/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.427372346 seconds)
    (210/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358086809 seconds)
    (211/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.240442346 seconds)
    (212/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.243691967 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.56099935 seconds)
    (214/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.538358949 seconds)
    (215/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.548805556 seconds)
    (216/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.525970077 seconds)
    (217/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.583298332 seconds)
    (218/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.432316787 seconds)
    (219/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331444689 seconds)
    (220/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.08717349 seconds)
    (221/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.43930525 seconds)
    (222/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.111053331 seconds)
    (223/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.549668945 seconds)
    (224/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.377080083 seconds)
  done (took 369.056410442 seconds)
done (took 370.269798731 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380980836 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.513515726 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.332346488 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.332854046 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373735485 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.327737449 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373741973 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338014566 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341862653 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.341987954 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.327755988 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343781747 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342167101 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370840896 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.444426537 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338843258 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.332551669 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.338181813 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377731118 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.397925944 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377587309 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375383142 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352518164 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33166173 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379385451 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380421198 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.338465545 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328794725 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339994951 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380202498 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.324557982 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.35563773 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388879893 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.389335424 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376675116 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337778379 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376810867 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.515208967 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.375643482 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.372098157 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346099655 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391614942 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.343631183 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345049651 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.389933619 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354723025 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380834728 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.457677957 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341264462 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.329948517 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401424561 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.400477107 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343972672 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.326649847 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342948408 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.459204863 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340077981 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3816119 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341814403 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377638866 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.448834062 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381427206 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.401493789 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382656128 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340983522 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.348225973 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.341253397 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402190883 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.343801348 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380417022 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379679077 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346887452 seconds)
done (took 107.796654277 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.460021196 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.335523169 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.478843197 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.339407733 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.497130475 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479463538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.339395429 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340167513 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340589839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.128619188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.342071186 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340220422 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.337316844 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33939006 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46170181 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.341024552 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338069003 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.029617972 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34124503 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.477119888 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.334604089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341294034 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343761585 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.168973459 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.335108921 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.33375155 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.479239777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.341406974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.031836749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.332265844 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.336935847 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.042566556 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.480477032 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.36077342 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.350574025 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352555235 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.502110438 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357161816 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.460044852 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.458452047 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.480279472 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.381292703 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.334582924 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.338014315 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346649283 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.342018637 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342520924 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372008068 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.341982895 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343363463 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.034697475 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.351775867 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353630839 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345356156 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344789379 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364374258 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345680682 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344221302 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.483601097 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.346591527 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.465355446 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.144697076 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.135498274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346535201 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.33843975 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345188157 seconds)
  done (took 108.780270528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.407106871 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.415164217 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.453643136 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.35721209 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391897706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.457092688 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.355870923 seconds)
  done (took 11.075903505 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346901991 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343774636 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389514986 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391385593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.344445822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.498556385 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345572368 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352533395 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345162831 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394411993 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.346220231 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346627877 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354554918 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.341021014 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391185243 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35246316 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456802499 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342245301 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344895166 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.495498894 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346835086 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356431168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395557984 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354220266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347224749 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.348215327 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.145467131 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346111417 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346714542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346589864 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349006918 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.397839129 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348586782 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.342910833 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347786393 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497440678 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345598103 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347070361 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.347429921 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.344575155 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348030803 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348212619 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.348328711 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349773763 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.3480772 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.36676151 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34890863 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.3479323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347137318 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348246862 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393171791 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34799168 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347509084 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.349146768 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.401317144 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354926352 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347560295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348661752 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349608331 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347042309 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496304267 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393381779 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.349125259 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391900343 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352248853 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349517248 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.347962606 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349046143 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43879788 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348176672 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39472709 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348842005 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530572307 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371069517 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350942993 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348232188 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.346524371 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347224944 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341805116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351718245 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.3497843 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347840829 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352090083 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351328056 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350645374 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526209364 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490113113 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349876985 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.359396757 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.352895712 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350144575 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399694963 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.351218884 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.350328285 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39907523 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461418422 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.400502307 seconds)
  done (took 138.946224887 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359013953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357834419 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349243068 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375987144 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349005051 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347538316 seconds)
  done (took 9.381744321 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.35000411 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354969799 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352127747 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353167007 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.34901731 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.354744584 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352591812 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349907267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356604389 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35250695 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.353409985 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352807188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354244683 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.350640568 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.353619528 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352311631 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.353795678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354499371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35299432 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352941774 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.35062632 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354169635 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353408459 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.351285166 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.358284152 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35293688 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37057213 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.3527074 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357377976 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356543647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.371701488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354713979 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.35113144 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.357674978 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358852363 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3519963 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357684525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.35607193 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355026867 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.355863854 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.355759327 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354812402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.356250282 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355169671 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.351892507 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35745589 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.36079835 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372213588 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.3549819 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355513536 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.357941807 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.356200239 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.356333107 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.356211544 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353761751 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369609677 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.360482034 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.356126894 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.354407592 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352666941 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360307591 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357804235 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352519976 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359811029 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355465127 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356983221 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353198538 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361753498 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355954712 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359928364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.358513041 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358341873 seconds)
  done (took 99.873320536 seconds)
done (took 369.289552162 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.304100617 seconds)
  done (took 4.552663476 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.474073071 seconds)
  done (took 3.72418058 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.980446113 seconds)
  done (took 23.239804795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.431997584 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.397014047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.382186907 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.350328808 seconds)
  done (took 10.811948742 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.63133963 seconds)
  done (took 3.881522671 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.359150992 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.344302462 seconds)
  done (took 5.956103718 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.614610321 seconds)
  done (took 3.862553147 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.883497408 seconds)
  done (took 4.142437013 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.379042274 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.367093815 seconds)
  done (took 6.001755303 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.338852109 seconds)
  done (took 3.588197138 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.943775121 seconds)
  done (took 39.193009359 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.359575963 seconds)
  done (took 3.611820937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.373871604 seconds)
  done (took 3.622894939 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.004176666 seconds)
  done (took 6.254312747 seconds)
done (took 123.691548711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.348288149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.344633903 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.342507637 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.342551894 seconds)
  done (took 10.626312109 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.408712529 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410462086 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.409714254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409215215 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.410196039 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41008774 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.383584319 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.383241091 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409838429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.409578465 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.411822235 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409443728 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410363592 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.384097149 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409608686 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.412148009 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412137612 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.41164474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.383593925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410864506 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.360116094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.4135507 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411428034 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.357894419 seconds)
  done (took 34.893018521 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.871962335 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425673466 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.508398568 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408375982 seconds)
  done (took 7.465058183 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.437250896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437658598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.449667008 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.489077105 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.501588518 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450577775 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.387032436 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.38249905 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.366154063 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.437389822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.488280902 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.430274208 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.516629428 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.360761416 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.566847782 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360142264 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360096034 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438490352 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489149703 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495258214 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.361072956 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4367114 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.438618478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429884828 seconds)
  done (took 35.763040584 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369871895 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380148832 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.362455111 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.377219871 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362584519 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.362879296 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364744094 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369065338 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.363046928 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.3631989 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.36318185 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376741853 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366363581 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363883486 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370625453 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.364196982 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.368586722 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.366686014 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364040573 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369449843 seconds)
  done (took 28.601929442 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.35325061 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.352053155 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.705907534 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605997904 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.352035184 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.353629182 seconds)
  done (took 13.977943098 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.428979491 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.587269041 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360983434 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710188816 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.801672825 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.361663572 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.361356485 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.614042038 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.923917539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.89755615 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418211695 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430917314 seconds)
  done (took 20.15253609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.368982984 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.355302822 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.362804872 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371337033 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414595889 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.380750303 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.366938009 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.354613168 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.417235051 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.433595954 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381304186 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.41527823 seconds)
  done (took 21.8836905 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454779923 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358785122 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35940529 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388952167 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359077721 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201969853 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409064431 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068296142 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377661033 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635283171 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366939528 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457012322 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616130058 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357587217 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36404944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.347193954 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585540565 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842363047 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363170876 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359121438 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393624746 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359892419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362414849 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.572122299 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377138555 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359260965 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648606076 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360431318 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641772384 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372954001 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371743331 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359870841 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638625629 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012452209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473465385 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567417845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373754938 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357653264 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.351655982 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.357192445 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378767865 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364998459 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372195401 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361879214 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361786969 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365550072 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079805861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.382166735 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.361090048 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362600074 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618713253 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459744541 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37004185 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36342957 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449681545 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359081541 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.368150881 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498880942 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960290637 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367376491 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366811837 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.363857148 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374169491 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359245372 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97370299 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.381929724 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.370854238 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368973682 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364394548 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358129426 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382995103 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363929472 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384432885 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364887578 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084307735 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37967227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360384381 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901539052 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366973861 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363689929 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594278415 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363818117 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363700554 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.369277398 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366276208 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067606771 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375135525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.352768866 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428143787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091574617 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587843875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399019334 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396134506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589408695 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.353027142 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365211335 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.367570972 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368445652 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382456761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082195745 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379426254 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.367021441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623972115 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576657668 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368398269 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359967005 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843426354 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38775937 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385801708 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372371908 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.577237849 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.958419102 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391011635 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37216945 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381495603 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366199914 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105325405 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376910052 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.469960434 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378682868 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645210653 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.174086717 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368945758 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434482388 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372212129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366891806 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367525591 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369693467 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366570702 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.572320844 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389328316 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378022827 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.371818828 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370002292 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.375184492 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37748707 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.365365511 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591266348 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378204769 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645467967 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368269129 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369020402 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36367482 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.586481436 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.37293516 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.702737591 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629729366 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373210637 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376474198 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378954419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387155065 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472351664 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39150687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.376264219 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624984103 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373929904 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.376173167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37062347 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368538946 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373977298 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.374813676 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368839625 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943089812 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3578846 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37303348 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258890496 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.384972044 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437529107 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377233584 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579968107 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397889479 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387429673 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.373291268 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.382954828 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596626755 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378906162 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.372419878 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453045569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.844824548 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956757158 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39678147 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.372083426 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.370707858 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.371686464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370446647 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372429895 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376279522 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581655958 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402113988 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38287395 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94556515 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387569135 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369619595 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379174542 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382469307 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.378290819 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371373372 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.370322605 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404835189 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379566069 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384867369 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517442479 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.389787612 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371787652 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890860424 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380960423 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371689395 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371837996 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40652619 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376679779 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201134939 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645891405 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39098446 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626239708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375750891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.390452811 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375027832 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38175616 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381829817 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.379978369 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397133299 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.38166601 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378907412 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376942553 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942639816 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108992792 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911930765 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389573494 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.382786798 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374330935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103099092 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386572169 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37438326 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611505177 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110658518 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386086304 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84827587 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.387270258 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14136118 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634179128 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607534439 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376127109 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.396765702 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637313055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590503572 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409055763 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379852397 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375554249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.36039972 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931869072 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387917758 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45877339 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101437348 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395783367 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377853782 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.374275772 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388737093 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784574927 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394853553 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37468842 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377145016 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376545579 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205680111 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397512126 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376178623 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996432785 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392591755 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.881174778 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393424279 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591538217 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404547109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.382980422 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.378834897 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.379169782 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634225391 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63907173 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382778115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378354844 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92257926 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261052008 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.384861929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378449508 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121209522 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389827878 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660912094 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.384073379 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376662883 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396452572 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379128104 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379329092 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377372152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388546148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353079633 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86418376 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381932005 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394916695 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395751085 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378531344 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631900608 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39335809 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955169658 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623848602 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384292659 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403015117 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386243365 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391606447 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.370153856 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380414441 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381023056 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457192063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600402949 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389928741 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368866157 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449348948 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586441881 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379345957 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380427514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623204311 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.395668896 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.389054974 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134157901 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427336227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379533723 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384416537 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375129732 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420790592 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464499697 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597402043 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.408194365 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39097524 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792198438 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39907852 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382865581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.39786304 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478847386 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394807452 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.382898045 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15642937 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96239643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133047004 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974445222 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657955827 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384355324 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382771102 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382296638 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539726992 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381736051 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658613368 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383533335 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.420587698 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40698318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39646669 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384889904 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593880144 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658862038 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384652594 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391563435 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381716774 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382780291 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393350429 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.592225668 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876403094 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944702268 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388050412 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382489678 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133792086 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67494025 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382802353 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38335997 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384599997 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.383122591 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40088326 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.392521653 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384815019 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528527963 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640821183 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080903752 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410724554 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.414544676 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.904875716 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394464477 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639521172 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383959552 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597347975 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982285059 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097124606 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65087054 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454183997 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599309582 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.403028137 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547463029 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.391048195 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388704472 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386935071 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386044628 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.38349542 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396502089 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965230292 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667100658 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.389599271 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.391244361 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414640275 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394079253 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608756187 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108031311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612821671 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396363997 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391301127 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386664021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962436814 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662439336 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38887626 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387054416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6272925 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408797826 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412054829 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.9073008 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.386328937 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942657005 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35913134 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407853114 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386443547 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08257951 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968482772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407087253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880524307 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390948936 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396705445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66432902 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.395089077 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388529918 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665529544 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395260014 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387351546 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607111796 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.976231903 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180796763 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.388619885 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3946096 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.391888655 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389038038 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477378288 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390881871 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386361845 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.814789537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40727722 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390948677 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397515886 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.399663777 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389841978 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.390836778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391333756 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.392248284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.409727365 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.389651057 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390736415 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523038213 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957306428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404207148 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.09769914 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.717151176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64503183 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390115066 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.381544573 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397553535 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391012517 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390941429 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386329323 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392204579 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944635948 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.39356666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.403564665 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395689993 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.392769133 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600932934 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390380818 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608894459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410485502 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40945067 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.377462631 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391284303 seconds)
  done (took 977.623195666 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422080651 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.416295247 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.4004531 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.469269741 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.450400117 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511621985 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.495243239 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420298645 seconds)
  done (took 20.871989743 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.400969217 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.399772246 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.395667909 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.397733313 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.402471874 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.871604586 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.409198895 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396795612 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.414134182 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.393234344 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.406658464 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.383532858 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.401001458 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.391315493 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.389883201 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.399257004 seconds)
  done (took 33.149669194 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.381146702 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.545059113 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.372037299 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.44016028 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.42595895 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.391689351 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.649630792 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.412820009 seconds)
  done (took 26.905727501 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.40134061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399200201 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402114737 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.400336204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.402668821 seconds)
  done (took 8.293606849 seconds)
done (took 1241.458150995 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399071109 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399479563 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397509354 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399985097 seconds)
  done (took 6.880361591 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.38356202 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381336793 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385207529 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.396105368 seconds)
  done (took 9.831874404 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.100814039 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.003172821 seconds)
  done (took 5.390521129 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.878158342 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.894458226 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.882648775 seconds)
  done (took 6.942434519 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.681638949 seconds)
  done (took 2.969702781 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.284562139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.391480448 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.069635005 seconds)
  done (took 8.033450164 seconds)
done (took 41.3354917 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390905529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.636549003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.555726974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39412638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.5563281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.555973303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.111665964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400049235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396717995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390751569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403446357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.549183512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.118149015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.639045527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.116332507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.637326551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.556513691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405567428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387569402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.387330986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.127815716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401393532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389245877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399297307 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.552910468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.541153871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399468998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.634771166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404294033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.40195667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.542762599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403040397 seconds)
  done (took 83.075258893 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402870647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.400813382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.388835636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409209859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41028579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.409415326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391860484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396093384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401512354 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400929497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390514342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.403595595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.390639618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389760001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405862076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.391936584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.397680874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.388232777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405364534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390433128 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.391692667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389304503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.404141047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.390290101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40486078 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.391981451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.41770768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.400963665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389741655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398371568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391232066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408369316 seconds)
  done (took 78.036831532 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408047975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.390460251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391144295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391766009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.392019837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391838471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398115299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.391019378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414778301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396928268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392425536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.392506847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395349827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403703742 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392643678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.400813548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.391849445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392168435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415653729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391595767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394111842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392993845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405644877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408464401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40744816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407966109 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40240728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.392668947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408887577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420318795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394289369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393979049 seconds)
  done (took 78.057138332 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.682628582 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.405346236 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.408636275 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.400485647 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.40926513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405633963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400637941 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.684239131 seconds)
  done (took 15.089299922 seconds)
done (took 255.54618435 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.402477911 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.907525858 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.44550628 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.411348432 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.420485752 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.429763323 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.629503645 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44360091 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632897875 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42680917 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.42661873 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.415321374 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.21720799 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.552851889 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.263868618 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.369460179 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.29990941 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.401954102 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.967152246 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.68990144 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.427747948 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.406018795 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.251834564 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.324550506 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.391729119 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.497399825 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.504519599 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.628619078 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.563890075 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.487133277 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.922027654 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.404093504 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.416964161 seconds)
  done (took 65.274562742 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.40442684 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.533313195 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.410153298 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.409029142 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.535602551 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.427759119 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.403697305 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.410403155 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.408658805 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.409789086 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.411670796 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.411925948 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.411268998 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.45943975 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.542708805 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.423960381 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.406136184 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.535308884 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.410283997 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.405495076 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.45967105 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.412380101 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.413254425 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.46922664 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.413611373 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.411676631 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.536457383 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43327486 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.413307522 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.538070676 seconds)
  done (took 44.568991908 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.412675035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.005363467 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.160341562 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.417161722 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406707407 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412847667 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.699958805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.412841297 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414324185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412878824 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.913490809 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43035868 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445706441 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.189479172 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411061191 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.412829334 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.413189893 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411238278 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.013169705 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419111989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.718005977 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.413618395 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.700333026 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422637021 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430180696 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409281142 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416672096 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.258317132 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.427881417 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.914404404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.215396186 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.698398862 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.197968402 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.19662016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197595263 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416267366 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.414397008 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921741485 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427759808 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409460812 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.701298955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.412694579 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.178211007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110356943 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427354673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.415141505 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.279496314 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.935336754 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.673062166 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420096171 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.196000397 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.412130242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415980482 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413011816 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.656449313 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.415808472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.413755482 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.269098894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.433899084 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.702765613 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.418899983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412871765 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010211972 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415630815 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.009224666 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414150709 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.423427289 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431269063 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.183557569 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418080996 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.123987332 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428332704 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.416309497 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918675544 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.023241429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.34227494 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.416514188 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.017866233 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.229374167 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.720206171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418151253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.234764735 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.726436167 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.418325654 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.420232274 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418271265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416266972 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498330773 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.701819066 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.06116482 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119773315 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.307924507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.730214552 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423871779 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414899317 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.291466342 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439523362 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417829858 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.180410011 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126581835 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.428831976 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422929693 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.12577731 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431978297 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.707157518 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.421719937 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.189465214 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417760707 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.496753285 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420863445 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.424873561 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.436334798 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.709170896 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.422578498 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418513274 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.110285759 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.947390366 seconds)
  done (took 198.280243063 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.411945686 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.406854016 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.409796407 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.406105078 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.409132776 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.418821589 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.409842607 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.410030045 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415734925 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410652399 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.411161007 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.420248437 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417816908 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.411061655 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.422459079 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.406481717 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411150083 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.42325581 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.409000267 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.411974925 seconds)
  done (took 45.561820663 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.42269424 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.996891036 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.968342408 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42331574 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.420394301 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.41814055 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475292296 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438878985 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.421641255 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.727268595 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.593983388 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.441925649 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.422517995 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.420758551 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.955591325 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.413999749 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.728775371 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.997105127 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.425164666 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997180615 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.415430663 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.424392402 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418960143 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997873146 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751960862 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.712007536 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.48095285 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.015144005 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439386264 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.422370863 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997491346 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.425985796 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419680892 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.998815207 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439837073 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437730747 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.424357883 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.480477198 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49631575 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.749888344 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.088545703 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.732668942 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.43711949 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.60665851 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.42757309 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.414692549 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.005686637 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44385793 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.416830565 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429547089 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429572245 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.96684527 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438025812 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.967478816 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.442274011 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424889588 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.997544774 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.967768798 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.980271192 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598286647 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437179318 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.710382991 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.426213475 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.009102826 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.441094229 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.429500197 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.428287893 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.598886585 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.020780739 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.71451032 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.736503114 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.736437081 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.427657773 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.486496737 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.44360376 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.80960669 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.486401338 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.844646659 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.737314463 seconds)
  done (took 129.50920315 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.695707768 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535930806 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.842697227 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.049082651 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.420703979 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.556695112 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.53476373 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679818969 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.434713927 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500511474 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.087888279 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.539649923 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.212285859 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.511406833 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542150422 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570208187 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.833329243 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.414569052 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.147169231 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.071787633 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.429530666 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.553038073 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.999235433 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.635678227 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.420782873 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.028271659 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.414349436 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.094125176 seconds)
  done (took 55.067746829 seconds)
done (took 539.555827339 seconds)
SAVING RESULT...
DONE!
