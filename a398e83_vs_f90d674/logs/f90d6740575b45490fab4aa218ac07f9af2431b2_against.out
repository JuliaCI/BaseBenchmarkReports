cset: moving following pidspec: 9115
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.998801934 seconds)
loading group "string"... done (took 0.594001567 seconds)
loading group "linalg"... done (took 9.293393934 seconds)
loading group "parallel"... done (took 0.179960465 seconds)
loading group "find"... done (took 1.497087515 seconds)
loading group "tuple"... done (took 2.196207954 seconds)
loading group "dates"... done (took 1.461714208 seconds)
loading group "micro"... done (took 0.233741456 seconds)
loading group "io"... done (took 0.628896357 seconds)
loading group "scalar"... done (took 46.005526151 seconds)
loading group "sparse"... done (took 13.885736385 seconds)
loading group "broadcast"... done (took 1.127716848 seconds)
loading group "union"... done (took 12.713563274 seconds)
loading group "simd"... done (took 2.638804025 seconds)
loading group "random"... done (took 10.605213197 seconds)
loading group "problem"... done (took 1832.779680029 seconds)
loading group "array"... done (took 26.412589631 seconds)
loading group "misc"... done (took 1.139548006 seconds)
loading group "sort"... done (took 3.905612832 seconds)
loading group "collection"... done (took 19.41024577 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/5) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.502415709 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.459967825 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131091617 seconds)
  done (took 1.212301802 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075458092 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.175018127 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095004019 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109815602 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110154427 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109371866 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095849046 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10997402 seconds)
  done (took 1.423435647 seconds)
done (took 3.890694657 seconds)
(2/5) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.410381036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.104934479 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087290731 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.105145391 seconds)
  done (took 1.426500263 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077595495 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10073622 seconds)
  done (took 0.800371057 seconds)
done (took 2.849265158 seconds)
(3/5) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.064875308 seconds)
  done (took 1.679207096 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.229438546 seconds)
  done (took 1.847246735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.460138286 seconds)
  done (took 13.116179021 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491597218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.508797902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.037212843 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139231638 seconds)
  done (took 2.800153771 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.834807205 seconds)
  done (took 1.468832689 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.560140078 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224926189 seconds)
  done (took 1.412597543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.910526222 seconds)
  done (took 1.546657572 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.2088139 seconds)
  done (took 2.840077543 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386826108 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158569159 seconds)
  done (took 1.187203462 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540190909 seconds)
  done (took 1.177341707 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 32.483170423 seconds)
  done (took 33.123147716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20511244 seconds)
  done (took 0.852054455 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294394939 seconds)
  done (took 0.93001139 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.72342345 seconds)
  done (took 3.36309766 seconds)
done (took 67.962280898 seconds)
(4/5) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165566239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081589536 seconds)
  done (took 0.880720405 seconds)
done (took 1.525792682 seconds)
(5/5) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.363213659 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134241003 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147103695 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.342277222 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185056503 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155530481 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146069624 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.569371328 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.937901996 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184685298 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141020204 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51435187 seconds)
done (took 5.463994806 seconds)
RUNNING BENCHMARKS...
(1/5) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 1.811815812 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.219728873 seconds)
    (2/2) benchmarking "String"...
    done (took 1.005237936 seconds)
  done (took 2.877578314 seconds)
  (3/4) benchmarking "replace"...
  done (took 1.698707696 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 1.700388421 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.953288109 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 1.69917251 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 1.699947239 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.701592417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.700224318 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.604539403 seconds)
  done (took 11.705005913 seconds)
done (took 18.74514689 seconds)
(2/5) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 1.694145011 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.688641969 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 1.709377628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 1.517647078 seconds)
  done (took 7.253432927 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.380979322 seconds)
    (2/2) benchmarking "read"...
    done (took 1.060727312 seconds)
  done (took 3.087312238 seconds)
done (took 10.988105341 seconds)
(3/5) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.480967663 seconds)
  done (took 3.123070473 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.853529848 seconds)
  done (took 2.50030916 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.992306641 seconds)
  done (took 13.775999822 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 1.723723676 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 1.734808822 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.710022124 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 1.699675751 seconds)
  done (took 7.512589686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.711353453 seconds)
  done (took 2.354562459 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 1.701506966 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 1.705993608 seconds)
  done (took 4.058418803 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 1.968488263 seconds)
  done (took 2.611479508 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.139927794 seconds)
  done (took 2.783966228 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 1.70214072 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 1.716260973 seconds)
  done (took 4.071282221 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 1.696441295 seconds)
  done (took 2.344048134 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 31.726692471 seconds)
  done (took 32.372634899 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 1.698025512 seconds)
  done (took 2.344644712 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 1.71952408 seconds)
  done (took 2.362066311 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.819342275 seconds)
  done (took 3.462247476 seconds)
done (took 86.322107412 seconds)
(4/5) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.702043656 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.709445578 seconds)
  done (took 4.056550991 seconds)
done (took 4.7059596 seconds)
(5/5) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.703087481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.868169959 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 1.69880795 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.701323768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 1.718613579 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 1.710281008 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.697243204 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 1.891734641 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.116219703 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 1.690887996 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.700674861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 1.701943807 seconds)
done (took 20.842612747 seconds)
SAVING RESULT...
DONE!
