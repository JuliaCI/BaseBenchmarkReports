cset: moving following pidspec: 5212
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.666258328 seconds)
loading group "string"... done (took 0.546697593 seconds)
loading group "linalg"... done (took 10.217348729 seconds)
loading group "parallel"... done (took 0.178451953 seconds)
loading group "find"... done (took 4.564875324 seconds)
loading group "tuple"... done (took 2.167008598 seconds)
loading group "dates"... done (took 1.468015451 seconds)
loading group "micro"... done (took 0.206227133 seconds)
loading group "io"... done (took 0.533033635 seconds)
loading group "scalar"... done (took 60.757060449 seconds)
loading group "sparse"... done (took 14.780986396 seconds)
loading group "broadcast"... done (took 1.882262054 seconds)
loading group "union"... done (took 11.740595993 seconds)
loading group "simd"... done (took 4.076175748 seconds)
loading group "random"... done (took 14.875769119 seconds)
loading group "problem"... done (took 2.356984222 seconds)
loading group "array"... done (took 25.127984641 seconds)
loading group "misc"... done (took 1.204124491 seconds)
loading group "sort"... done (took 3.924785337 seconds)
loading group "collection"... done (took 22.926855225 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.705761955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146753368 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.198045994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.210739508 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.288323536 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16228195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158528609 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.173324345 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.760895991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22531727 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140251285 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413211136 seconds)
done (took 6.422477328 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.323428699 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246806176 seconds)
    (2/2) benchmarking "String"...
    done (took 0.195018444 seconds)
  done (took 1.170974535 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076375145 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157184025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110279597 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095051124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094596666 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111075997 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095073123 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111488619 seconds)
  done (took 1.500815432 seconds)
done (took 3.795488658 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.52164336 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.936834775 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.571254208 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187774018 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313402284 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.302515285 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271593127 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.226096698 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092173034 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090921688 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.197734572 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.441328887 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.410534818 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.027293555 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.072855983 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09476191 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15400436 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.865858221 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079127241 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114127362 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.554340465 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.223071174 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11720855 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110929679 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187642646 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136792744 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146333692 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102189741 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.887492677 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138209544 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.226141397 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083869743 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.144878689 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167010414 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.219193377 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112418556 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.817634631 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205111139 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100151982 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102420985 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.781097373 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.128674533 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208564372 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10795451 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072372611 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177826385 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.104207386 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095563759 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095826012 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086292188 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177710099 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.502659731 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107914281 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195327213 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093935339 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.792877642 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097834438 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.282977744 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127245022 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096325517 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092882551 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088568037 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17110437 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095436438 seconds)
  done (took 21.295778186 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.170647259 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.189537999 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078316942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158868597 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122189351 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100230483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086293725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079247229 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128919956 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182400359 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140915196 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.17615159 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095071517 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090597694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17355105 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23238423 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.130166483 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10614583 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090437478 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111373102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125769904 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098060095 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110375278 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09254871 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17298813 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208529101 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112537844 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128091498 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094053371 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10242762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147084276 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14640528 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094208907 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09136071 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172083056 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127758215 seconds)
  done (took 5.41260163 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.119138405 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.157053911 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198620998 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.275567515 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178914162 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152677865 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184687871 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178501051 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.307983717 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.233795723 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.180215165 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164859093 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133923175 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095840818 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097152298 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082316823 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079931114 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.406455737 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.140434758 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197484191 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189677053 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116934143 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08301342 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.727704899 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102569049 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08732982 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115790981 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069247144 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226266063 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095738153 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.06216845 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084852341 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125101802 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115767306 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.220698666 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086076239 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114332696 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140590713 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096808261 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082823381 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106127742 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219483707 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103782262 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078363596 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126801879 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133602814 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117762321 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111285031 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.11324394 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223268127 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088810595 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13170355 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.647235867 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202186255 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.168712795 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.090162583 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299658357 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128254787 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103142306 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112464301 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.428630135 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134658185 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085846531 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082337426 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119311751 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082647311 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.819329469 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131495841 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.107820275 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082487584 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161405232 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099291816 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122588774 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087598221 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086003884 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125999682 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087634817 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097987251 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089035274 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080130301 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10897538 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112031216 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101375531 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081727921 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149249705 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102490757 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.12808228 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111122161 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.111305704 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089635001 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132789512 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086631058 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09277765 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.195717417 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101325385 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131124845 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116123007 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130177657 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.108223958 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.121306488 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08366001 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120283173 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102541112 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129464438 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100268477 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081503521 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102638681 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080973775 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081388701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16227769 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092227789 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083850468 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10777404 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094453422 seconds)
  done (took 28.54969162 seconds)
done (took 55.979943611 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.4431845 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087571262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085650067 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10766823 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089345789 seconds)
  done (took 1.617281429 seconds)
done (took 2.398225361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323942382 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210851813 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088453147 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19845268 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088035078 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205463557 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.191287523 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101373785 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219794291 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086763478 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.205142568 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08631349 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108553469 seconds)
  done (took 2.92066561 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103728624 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107109361 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104937786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121156817 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086306436 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101793182 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120168005 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10968825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102570096 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115380314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086618975 seconds)
  done (took 1.938468782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100993499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10526157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093264443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120845605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086296798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099715893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120394361 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108372022 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100875398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115490525 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087190767 seconds)
  done (took 1.922656925 seconds)
done (took 7.560478676 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235783894 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.144406283 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.196210217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.250834621 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36618225 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.307748353 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625998599 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205943088 seconds)
  done (took 16.248464278 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.127442742 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.200590731 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101500128 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102907499 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112653083 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099785105 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09389064 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117602805 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097850991 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101474985 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093934012 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110802289 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099945182 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094118603 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111282028 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093850272 seconds)
  done (took 2.605487332 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144666442 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.128702958 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118822512 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10073348 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096189187 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120266551 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103360211 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118514443 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095103225 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097416019 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10266054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116108759 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099213385 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09532106 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.119834163 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115749147 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095270216 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116376111 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114231425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118654544 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101213499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098051016 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115962023 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099335327 seconds)
  done (took 3.502634868 seconds)
done (took 23.141754898 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152854912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104757036 seconds)
  done (took 1.04348472 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16725402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186824317 seconds)
  done (took 1.144558607 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116103312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091726329 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142013869 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105603373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091740297 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109196009 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119903097 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111274136 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091850088 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093876463 seconds)
  done (took 1.868323619 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094919822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096417848 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12703906 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171317875 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118727947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095068863 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097359937 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114313001 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097439416 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090618228 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117110563 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111809888 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096746661 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130497112 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096704476 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098210743 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119824525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097066603 seconds)
  done (took 2.766614386 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091592932 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094297745 seconds)
  done (took 0.981917463 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094930648 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093070913 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094340978 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112591482 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092319211 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091806786 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109788332 seconds)
  done (took 1.484952032 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.552218337 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.248473426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.390965709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07726632 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130959042 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.468775044 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.110970326 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076831069 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098462521 seconds)
  done (took 2.986810403 seconds)
done (took 13.071860325 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094259473 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241280054 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633273477 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114954772 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091748818 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164239601 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.329137386 seconds)
done (took 2.473462443 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368053088 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.175416092 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09101751 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091232342 seconds)
  done (took 1.526463106 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082533749 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10185129 seconds)
  done (took 0.993913751 seconds)
done (took 3.329417658 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09134297 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.12547252 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.109980746 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091272989 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090318119 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090536164 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.110486676 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090746246 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091001517 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089660703 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.110410548 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090199599 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089186691 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108553819 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090753091 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089273713 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09099104 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107864066 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091786323 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089777618 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.108092517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090934818 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090540564 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088484646 seconds)
  done (took 3.1605084 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114884931 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093118196 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113660124 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093758292 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094720145 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112193876 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095072146 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093869339 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115394213 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092953999 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094596038 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094154082 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.111789704 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096648883 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091779968 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114029514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094935536 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091334241 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11084978 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09555405 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094720984 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110422492 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09550998 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095874064 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111943635 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095060901 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09308579 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.11041851 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096009555 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095549791 seconds)
  done (took 3.823230733 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098578807 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088330087 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09082384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118363305 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088823865 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091649713 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105775951 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092597459 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093688799 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08941989 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112247654 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0908149 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090746736 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109931018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094213098 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094598412 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099572718 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.11045825 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092781351 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092614151 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112746111 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091266005 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090764824 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089539109 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.11079272 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089128164 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09025163 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110117006 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091845827 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091020094 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093290844 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113841571 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092303776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101089112 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112378466 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091556056 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097077429 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107084567 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093471383 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08844784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087630906 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110065323 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093776451 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097784222 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109422295 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091767256 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091434602 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092185256 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110861933 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095202539 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087745935 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.111152962 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094650653 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094148425 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094237473 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106102109 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092262221 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087806697 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.112040226 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091346812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089751078 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086544245 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.114885978 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092437453 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107229767 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.117306886 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092836945 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09275593 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110789996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098837988 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09331885 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.123305904 seconds)
  done (took 7.889521426 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117626969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100668318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111956905 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09412852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09643468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093605688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119802386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092212425 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094069924 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118323356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092904691 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09228024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111107355 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094179993 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092414895 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092704666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116933236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093104856 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091737853 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111670276 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092626234 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09732334 seconds)
  done (took 3.032249562 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242915038 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099543036 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149301737 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125673104 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1108942 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123631294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097523714 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097716197 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114179464 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102082185 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102923354 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117188575 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109388701 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101354928 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121142151 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10441216 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116259896 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104091868 seconds)
  done (took 2.959651154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105607494 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093725256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.16066247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094685155 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094346704 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114166963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09989294 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11537375 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115468734 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095156165 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100786141 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112452079 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094888883 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094547428 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111763654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094545612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094965638 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094280145 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123481345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101228375 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102640077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126605555 seconds)
  done (took 3.162517524 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108351488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094024317 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136082668 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102169906 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09705906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095837397 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.12194777 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094661968 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.101521779 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.116909769 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094707225 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093651783 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127336584 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095030591 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099767505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114460366 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094043872 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094066501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113463032 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094494908 seconds)
  done (took 2.913406307 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19819769 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130906032 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110278898 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118347591 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131111156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111462847 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138991767 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110626149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110412853 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140439437 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114892055 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110331279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138680205 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115751102 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129031143 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118923922 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119402055 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137638453 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110397 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128481841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123149459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110057571 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137022173 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111178105 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110259063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130743581 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111390561 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134830274 seconds)
  done (took 4.31486469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093969561 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092463155 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092546755 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.113427622 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09254019 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092356227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090444881 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112175647 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092434939 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093401193 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111673698 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093471733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09140024 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091676044 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111917025 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094182787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092856221 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.11086773 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094230209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092686647 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09351245 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110229171 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093480673 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091950869 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092245739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.113560391 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093705003 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091389764 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112262461 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092947574 seconds)
  done (took 3.758033057 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105307106 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103075049 seconds)
  done (took 1.034323709 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100726007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107878593 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09135638 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113507451 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099772534 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094115949 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120507154 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100347537 seconds)
  done (took 1.655644828 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168775234 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.19444407 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100140248 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.127006723 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.17190957 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.185558303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134461791 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119383547 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094092412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085125351 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.188690825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08511194 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114355464 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092057866 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093334425 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120815014 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094491695 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102849462 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122466761 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096486641 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098901962 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119147135 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096982025 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103493258 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107800021 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096912533 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096719213 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125556539 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091622196 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095861632 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111881965 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093933244 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097837512 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099261575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114462531 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.173765114 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123154907 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091500742 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094069224 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120967408 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129119841 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093731961 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.117738855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095121105 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097565689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118100493 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099863537 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093568184 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106631786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091094056 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094427022 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108789882 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093814164 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09600725 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093841682 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123081643 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097506324 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090342214 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110413622 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091623593 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092910977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110508676 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097017435 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09587574 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116371293 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095639187 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093425498 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.113854003 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097466374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09598986 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113575686 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110740758 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095096031 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.118348011 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099727137 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095056711 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111253463 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101748623 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093579986 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11543514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099120915 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123252056 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096516393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110397558 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091056063 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100911226 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115017559 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097237854 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086305598 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122699472 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097342826 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094899848 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.107211119 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093990793 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091456183 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116841604 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08801217 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096088476 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092236729 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.118718589 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102098528 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092204323 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11625396 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099389106 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100291525 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113486918 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160566647 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111964518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091188202 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097502692 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119590487 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089106303 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094635847 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092725479 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113031343 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091181358 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100079905 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114258384 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097344991 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098167511 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117486519 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097476432 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098139924 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.114317121 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091525047 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098811448 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105158833 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.122286291 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099309766 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097652572 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.120844907 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101381747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103387309 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.11873123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105946433 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096926152 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.119485585 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101663207 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105304592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.121193903 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096713556 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099345105 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.121082576 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100635074 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102703703 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09950162 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.11490721 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088927928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099723086 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.117086677 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100720071 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110655692 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11744196 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103819488 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.096809098 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.129797651 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099311791 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104691526 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124760767 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10774317 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105587449 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091089587 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119753217 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103488788 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101964013 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.118065502 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.102324953 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098601645 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.128284609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09393485 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104763671 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091538106 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.120931231 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106121456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101050001 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.126104584 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097899879 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.143062326 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.135354363 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108120802 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.100156592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.122544564 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10655999 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097320755 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.120308875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101792483 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101543289 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112744016 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095546158 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101579608 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090719986 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.119196233 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094593105 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096600413 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109138251 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096654749 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087818221 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120018195 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09780713 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099900065 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120525453 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098955391 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093673016 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125284437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092544241 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100091987 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087419357 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120815084 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106103297 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100618312 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122001129 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097492286 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093426196 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.116809476 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104887081 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09849388 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115691528 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098278279 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088772601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087929269 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.123686399 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099688795 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090274888 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.115494156 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100915696 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097414412 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113605508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088930303 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099968369 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11944403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091247079 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095405987 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111928689 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094784819 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103060173 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109093272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094580394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0980536 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100652185 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.116764569 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09606466 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097586502 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.12230857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09953235 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097169479 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113330962 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104664148 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103364052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093128742 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112980848 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098222337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088452799 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.117356753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095712799 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092005415 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.121856278 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100536598 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101682833 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.120969433 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093659396 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099313677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121997148 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101697569 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093360126 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100265124 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112263927 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089555522 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091093218 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108925444 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097935009 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090466044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119645871 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094388609 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094376876 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119366436 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09907475 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09274664 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.121667147 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108515755 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0889537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10920879 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095563899 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094727479 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111762047 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093780711 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096968407 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097586642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.122079421 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099300127 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09154132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11577436 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101411709 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091175561 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122417173 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102235347 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101555652 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110916618 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101054191 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092684063 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099033613 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111044359 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0954972 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093712057 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116300265 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09286572 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09432233 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112804568 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089554196 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090635967 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122874354 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094768406 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100369118 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115617706 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094084241 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091444589 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111024035 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102566255 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094461244 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100599036 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.117297248 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089239002 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088434849 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121461604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095828318 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101709931 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111205901 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099895594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10185597 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098944426 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117746328 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104439398 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105283989 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123265046 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102168369 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087633909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113756365 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102013392 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094614406 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118567801 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097407847 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0899129 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118760074 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102056833 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097610178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093281625 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110540524 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097429499 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102684916 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120625046 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098925708 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097636997 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116405445 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092358463 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098952388 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101353321 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.118861833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102109842 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094205206 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.122248437 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092289878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101344102 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117335032 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090867141 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089479535 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114390734 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101690097 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089685217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100014603 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.121515732 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09301518 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093245657 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121321294 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092841974 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099432547 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121578589 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094506571 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10672677 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.117623896 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095289981 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10024941 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100165111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.110818422 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095705537 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094938051 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125155441 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094914235 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100251017 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116431426 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101371131 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098244756 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121906704 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102205874 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.1028151 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08826723 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.124250228 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100336223 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097079734 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113898283 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094749549 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089955853 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11583568 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103232611 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093452946 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123970094 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102791353 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094109174 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113838149 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103183792 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09612186 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102205315 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113696232 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099524039 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089203801 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120211935 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096769219 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10189124 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.115211648 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0915101 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100555594 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121192367 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10053122 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098262705 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123697294 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090956818 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090697218 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097697201 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.114514422 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1080335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099289791 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11609521 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096362393 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09788689 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.117891249 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104929823 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090615154 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091915459 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.118568849 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097876133 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093552888 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.113595032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101302407 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095447124 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120100329 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096215727 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089734316 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.117861915 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103507437 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093851459 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113149304 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094541352 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103600884 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115518321 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094652959 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090114392 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102039163 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.121428291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104100389 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092461129 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11775017 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094190469 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098236584 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126095574 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095561174 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095894876 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.116470677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103085525 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101334115 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11041865 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095904165 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106444123 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121651294 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099731676 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098820108 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094252767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126168349 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104352166 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097453803 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.112216225 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09165111 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095103015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.112529184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099361728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102067448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116083407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094822673 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101753652 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101043505 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.12043424 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099363404 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090125776 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12548132 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093898393 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100746541 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110893851 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091299809 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099333721 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101231937 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117109655 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096429511 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097395556 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120079376 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091823129 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094419269 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121246145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102326629 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101873849 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116637388 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095682629 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102104395 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127649403 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099076077 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096061937 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103545779 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.126023637 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096469042 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095400469 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123418209 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103523291 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097847918 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.125898203 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094481288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095154768 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.124861689 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104068052 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107197012 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117086188 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092202298 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100455721 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116836086 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09178318 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100963048 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104281627 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.125800914 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097536495 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093283091 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128482399 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103875919 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096492647 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.116313325 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095493987 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100823366 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115336175 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101436642 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093300761 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.126644736 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106072008 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103591176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105166237 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113593006 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103284572 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098477467 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126839244 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097745809 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090457383 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112507463 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101030026 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104187481 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.125172481 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101506134 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100600642 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101596788 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119672411 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097891848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093915364 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.126529219 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102249316 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097789251 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119852741 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096665435 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097328927 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.119619262 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104225544 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10404277 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097541803 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130402057 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104574961 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095624241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.117546302 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099258991 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098855029 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119959389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102465125 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09392612 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.113119622 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103863697 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105389938 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096348216 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127716729 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10466303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095332025 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.12280165 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105491278 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102039861 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121892455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099897969 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099640953 seconds)
  done (took 63.508000984 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15023789 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105818414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121259344 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099531722 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116749972 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12377405 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099832248 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100986654 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121489052 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111229019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099536121 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119422519 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115131889 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120712138 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141224383 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109525729 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119938646 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100403201 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098941632 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100203036 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136859792 seconds)
  done (took 3.293863905 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118414569 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113962816 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132772331 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114385146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105029138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131535651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110774911 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131854197 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11401401 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108437393 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136837093 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110497431 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128553359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108150625 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109121838 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129556978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113831654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106235298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13341997 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111334898 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108458625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.132849017 seconds)
  done (took 3.487875169 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130210273 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102937042 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098367746 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121544436 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104823805 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098818223 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12529212 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100116083 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109907203 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095025771 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.113151121 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096772851 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097555073 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121162475 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094466621 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099235873 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130708241 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10427583 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104989888 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099454268 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.113233115 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099958032 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099956915 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112548111 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107377202 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10622538 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099451963 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.125014152 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091727097 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103052281 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121557846 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093689917 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091025821 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090207002 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.113562974 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10327668 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102620941 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121193415 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100374845 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091524628 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100405086 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.127184539 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091583644 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099816394 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.122699471 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09394386 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103099144 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.121381846 seconds)
  done (took 5.98018505 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.393350579 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170631964 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104250547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141651114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13787717 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109813685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102003404 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140644072 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100488267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12681459 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115929268 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113024568 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128803669 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107289132 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105750389 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129650146 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105882599 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101562287 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130801829 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102922376 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108726536 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.128136406 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113914766 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135653214 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106565018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103622674 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125237015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108076034 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112394041 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131096769 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107051463 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107319722 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136399399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102789607 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10256402 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.128133753 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116592061 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104261722 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127223581 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102956947 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104332611 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130306584 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106374909 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115093896 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12828908 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105908649 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103467697 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.124258259 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113551591 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125230381 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111217914 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114887934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128955016 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10652884 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108347437 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136556541 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105042408 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102362109 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127317168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114049 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100826998 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129287949 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11613921 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104331424 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.133277912 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115464822 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12666094 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107720821 seconds)
  done (took 9.248021344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137220453 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108195183 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139384484 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116301521 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107675424 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130690362 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107731787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10618557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130594261 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112934054 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129723759 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.234476465 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128820292 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113566397 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107830332 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132630973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108687704 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106991399 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132801315 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107629888 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129770762 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117319877 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108715222 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138481018 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119156214 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103371246 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131406445 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108568624 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137016795 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108868174 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117601338 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129277123 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108735615 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116973744 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144606657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108089514 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100553359 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131396318 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108801965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10643225 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.127252984 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116937496 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129253377 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105944339 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108651107 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129482317 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117549655 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119327186 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136269703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114424397 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130370978 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116943013 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107234307 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129862184 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117829369 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.122518164 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1399539 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116137673 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13059887 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116697242 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115697603 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146451166 seconds)
  done (took 8.466354276 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10176762 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100577245 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099863467 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124437402 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10147289 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101775442 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099789366 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.124224736 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101601957 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101265462 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123317358 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101513607 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100297461 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100267988 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123607478 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102384529 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101359957 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122236634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101801004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101065366 seconds)
  done (took 3.032885048 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112021996 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119887103 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124992011 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109675469 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103359722 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130907778 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104737761 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103952116 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101363518 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126918863 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112241927 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110502181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.127444558 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108386897 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134043862 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109809285 seconds)
  done (took 2.739392628 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123607478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120086151 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.214308048 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105218129 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128274413 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110700739 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10353181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12880786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103370198 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109747755 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.132637887 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107615012 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104542205 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103178344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12682779 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107173824 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101238922 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129268115 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104027335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.220293167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106843754 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105078307 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129081429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106637583 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105792783 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132405176 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109295812 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102787652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12783071 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104700534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104748795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132893436 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104150325 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108529793 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103596624 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.128168533 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104238186 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104115893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128944889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104046751 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106976104 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.127631523 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105207234 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106329513 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124292831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106596796 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102312522 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108638815 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.127613085 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107122142 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102887805 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131133994 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108614231 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111692905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.134702883 seconds)
  done (took 7.352227752 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116873452 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105256402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138749837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1031583 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10494435 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10553444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128685568 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106190948 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104972707 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125082387 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105825468 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10449157 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128417028 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107128357 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105477659 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127528298 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103458408 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105024668 seconds)
  done (took 2.930921523 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110205076 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103844141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107042103 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127582145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104156332 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102793099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126121415 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10367743 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102330471 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103141118 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127859905 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103810966 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102129189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128103651 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105287481 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104041932 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126227505 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104414884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104660236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102398776 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128307867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102476509 seconds)
  done (took 3.340339299 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116852779 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.218619421 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111497209 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.229108953 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100631512 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124518558 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111035279 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101635061 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142436968 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101496915 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100045962 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122689066 seconds)
  done (took 2.490472147 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134996845 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143528029 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128363739 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105752833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112186682 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131671353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108776403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10923519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142035241 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120117719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131062127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117610627 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117297668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14009079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113485591 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136190015 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110551767 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109150822 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126906501 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125382285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107983634 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139784606 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109012606 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108305323 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133182509 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117598613 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138911519 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120397223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109709132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140153926 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114217737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108842193 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141420008 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120702988 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128928337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118186328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108100129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148332759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11338034 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140129411 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10601851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114389895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140780333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116591991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116525921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133524102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115464194 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131421042 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108974681 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129597555 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13693571 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117783972 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136063531 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119366995 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116399928 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153095726 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120463573 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14083872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113461844 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14207058 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118347242 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114212569 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141283748 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121252151 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135952763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116921013 seconds)
  done (took 9.098271087 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1464798 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105216453 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132571258 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122538068 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11700196 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134130115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109040612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132382616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11069592 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106642681 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176725266 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111588003 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116826728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140068929 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109520072 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130903657 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110843355 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117442797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129611524 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131961963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109720936 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142089088 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117685008 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1410942 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122687599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136338496 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110513494 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109039005 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131332483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11136039 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115242238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133782305 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119766417 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105827354 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141774454 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110569018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109448275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139077951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110109393 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135856312 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119123598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12463191 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133937214 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109721075 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14217646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110047444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110338752 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131378509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111889228 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105950973 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145842988 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123257504 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144290276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120588589 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108824523 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132799639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110494847 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109489062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133672375 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116074467 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116928208 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133646185 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132117569 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133350547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111661686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117415141 seconds)
  done (took 9.055535764 seconds)
done (took 172.537867284 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177698505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.219840177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.201171461 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159167517 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095652807 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.168956052 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137872072 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.2031479 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096860502 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095758267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095034571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.123253103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.195943213 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095529117 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120405535 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098636216 seconds)
  done (took 3.196924413 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183182792 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.340352708 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111037654 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124168234 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103016242 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100684801 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123914641 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103448281 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101310299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132228128 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102115709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096862177 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.133869956 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097841423 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10010868 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123971491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109096136 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101593994 seconds)
  done (took 3.21501561 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12167937 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.228874007 seconds)
  done (took 1.274836137 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134319245 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.223965981 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278040873 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177134956 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121836653 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144260314 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155963548 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13656555 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.184992729 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13925032 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115572098 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098443105 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.153728907 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.1078443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.14017397 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100118597 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129537422 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13888945 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115746772 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102800014 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147615349 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105430865 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106292636 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139256814 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17418954 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137335342 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105289926 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103895056 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127463276 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115653184 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108374885 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.143655069 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113783045 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184136614 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103790712 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178010974 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131263549 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102297156 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116049115 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10101082 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.129248279 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104819335 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137968103 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100266941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104588579 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130953245 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106815957 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104550725 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133414312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11096013 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108866707 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.132821918 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177580334 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109447018 seconds)
  done (took 8.066418083 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.872178229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.145139127 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101247302 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.034243391 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148251464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115779737 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.875823176 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149236226 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253384945 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.890651179 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120338976 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109940726 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267905297 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231236458 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.048410276 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.327008135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.702583059 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.140484974 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130498578 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165136223 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110545692 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148553109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123333421 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422334432 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10175414 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100925404 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133588356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109269482 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180865388 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101584008 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104405875 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195571099 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263969671 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214979363 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10058381 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123572418 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10122635 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184718252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276623515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224157904 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160365365 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121575586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100705334 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107985799 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144512441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099216877 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181117934 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187258519 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166587944 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1285572 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110337145 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110318917 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131218572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179010403 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099572159 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.327575036 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337477692 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122807237 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11083253 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112811133 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273429742 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125067511 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238861241 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126732037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219914976 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124219078 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814577189 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161300819 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124364278 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106527653 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107000408 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131765779 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107654751 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182544512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37569163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134579474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105152687 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101218947 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247493973 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124956812 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101844795 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181467769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103706763 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10946818 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137609608 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111110848 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189449021 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.240897324 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111710714 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108781501 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129756025 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113984537 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100907175 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235704275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233473964 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177745858 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234279862 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109116181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182957414 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1836633 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106827481 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186958761 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109269132 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110865913 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131517982 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229298712 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155429821 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103420135 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105379812 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132369137 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138628871 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104103322 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135009906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185707414 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437869509 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185452145 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097162077 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129796324 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11218787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183717776 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107749386 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269625558 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134014388 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16133148 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132850274 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099446794 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108896599 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181409941 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130993333 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112213571 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10847783 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133977303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230658102 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224517518 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133875963 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247517509 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.1665767 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13081894 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18839819 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111815755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191620387 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112025489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108140149 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127063016 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800630094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114419509 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131021829 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10766439 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182726239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125300361 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104499112 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100503073 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122508596 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85476512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10766851 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099002953 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101169779 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131179251 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109670161 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132981715 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107031139 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179914429 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246049097 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109744263 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133418363 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103463925 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181165845 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102747772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102023658 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125281574 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103358814 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110949235 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129915543 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1033167 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191999765 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154406716 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255854044 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.528452326 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103463018 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101956541 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241501031 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125610107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304882416 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110685723 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235656224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186610532 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09803593 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357268058 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162618514 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206420872 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104030128 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188896158 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099748648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133477169 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15658311 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125515961 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108699158 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178386371 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114065413 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135238985 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.991869777 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103305874 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250049954 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100945937 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188606736 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103836039 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105911094 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324156584 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103728694 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115336944 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181011915 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106228453 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126738393 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.61429781 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103209284 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114977819 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130967702 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.241182486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185267624 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112205888 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111303888 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134886427 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155968227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234310033 seconds)
  done (took 45.713449246 seconds)
done (took 62.389289449 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278124194 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183970043 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.279807858 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181724366 seconds)
  done (took 1.949066358 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27864549 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165665829 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.263132553 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098890438 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.274135628 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099189848 seconds)
  done (took 2.132210598 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178475419 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174210491 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149836652 seconds)
  done (took 1.458746954 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203924256 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226253073 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354276407 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.246663909 seconds)
  done (took 2.077706389 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.305426339 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121586132 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12881254 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.242020651 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259639861 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.216217439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126913276 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183133344 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132866547 seconds)
  done (took 2.719514123 seconds)
done (took 11.29288955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.338072321 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.465176542 seconds)
    (3/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.151050214 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.246439858 seconds)
    (5/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.32450628 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.376814537 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089587021 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.228628375 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.269596015 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.226472933 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140770554 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.233865703 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.294470547 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117122296 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.247524353 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.200540306 seconds)
    (17/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.336024504 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.085872582 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114902461 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.133703176 seconds)
    (21/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.307761902 seconds)
    (22/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.203682326 seconds)
    (23/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.25101544 seconds)
    (24/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.321400997 seconds)
    (25/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110742364 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132266331 seconds)
    (27/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138204306 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132845664 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111938397 seconds)
    (30/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.232284147 seconds)
    (31/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.083468016 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149818633 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126452113 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133559302 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137839106 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.182666315 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101965899 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.14887347 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114029236 seconds)
    (40/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136620935 seconds)
    (41/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.214128557 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.261587734 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.302732143 seconds)
    (44/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.223493924 seconds)
    (45/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.155803263 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.237521406 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.281364761 seconds)
    (48/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111316809 seconds)
    (49/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.205664351 seconds)
    (50/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091212297 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121786716 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130257765 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109712974 seconds)
    (54/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.145909267 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139480866 seconds)
    (56/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089933294 seconds)
    (57/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.210582784 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.144733069 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105473329 seconds)
    (60/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112545876 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131550387 seconds)
    (62/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111736415 seconds)
    (63/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179344874 seconds)
    (64/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.133119303 seconds)
    (65/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084485604 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.207084225 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.273922054 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084563687 seconds)
    (69/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082377724 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15075716 seconds)
    (71/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.344215071 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103048579 seconds)
    (73/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112591483 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105671887 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.176907063 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105167005 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095936012 seconds)
    (78/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.140234872 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132669105 seconds)
    (80/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.097992768 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107803722 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.127607917 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091825574 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.230704477 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128098482 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.145954105 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1308892 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.208847787 seconds)
    (89/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.143619939 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.117432042 seconds)
    (91/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185634361 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100701912 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138564967 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105658967 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090860087 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085674861 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.134381194 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105189983 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128632489 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.220264114 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216177071 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.086380328 seconds)
    (103/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170439062 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104428294 seconds)
    (105/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.087529636 seconds)
    (106/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11576535 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.111148003 seconds)
    (108/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.149586969 seconds)
    (109/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114588524 seconds)
    (110/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.179364778 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.090832361 seconds)
    (112/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221456862 seconds)
    (113/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168621652 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091277599 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091113263 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118520868 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.139077043 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091138406 seconds)
    (119/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.091174723 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.177316892 seconds)
    (121/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.138053031 seconds)
    (122/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.084635973 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.09191965 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112888937 seconds)
    (125/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171668897 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105826237 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091076875 seconds)
    (128/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.295174058 seconds)
    (129/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.09060796 seconds)
    (130/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.178772385 seconds)
    (131/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084378677 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086172341 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126475092 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.154295389 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106271405 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083909622 seconds)
    (137/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09408906 seconds)
    (138/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.085858474 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1332124 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113409045 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090146309 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127165613 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10642743 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086603331 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112271399 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112215457 seconds)
    (147/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.158219492 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.148747337 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.127099542 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106792491 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103504643 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104760388 seconds)
    (153/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.112723762 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084734727 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105253818 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091359872 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.112678575 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09293591 seconds)
    (159/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.085746658 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084658811 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090183186 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.128160292 seconds)
    (163/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.087519369 seconds)
    (164/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.150591776 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112118587 seconds)
    (166/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.113088474 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128858007 seconds)
    (168/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092892958 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091051034 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.123071377 seconds)
    (171/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.14593867 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.087861871 seconds)
    (173/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083613705 seconds)
    (174/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.132026636 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106681792 seconds)
    (176/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084002722 seconds)
    (177/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084285648 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175617235 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.088715402 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087028455 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111167628 seconds)
    (182/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.112015222 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127116793 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.088979262 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.088184957 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.084760219 seconds)
    (187/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.116677337 seconds)
    (188/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.093189574 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.090719427 seconds)
    (190/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.087443383 seconds)
    (191/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.090758259 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.138467469 seconds)
  done (took 28.671944806 seconds)
done (took 29.636065383 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229330699 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135441734 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112642885 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111592682 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.238578384 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118215033 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152391167 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115227013 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119679605 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139739558 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104822268 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123266233 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137446808 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205730351 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141910923 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105762681 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103782471 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14875509 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125885701 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127218063 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.2389586 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105952999 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146790804 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105715398 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238966003 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106965138 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111745984 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139702681 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124216355 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11396121 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138212688 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106161195 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125428799 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.150638919 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104415792 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114192734 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102622617 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.118077655 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115109191 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114251889 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148147471 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116485344 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112865749 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130179752 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115408321 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113332499 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103732465 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.142934656 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10306115 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111122441 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133617271 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127587523 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111969825 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.129492515 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103838973 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10463642 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146413312 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105687463 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123714615 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12985534 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105982262 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105106732 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113788213 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13010174 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114556676 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104120015 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.140290884 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117643522 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111658892 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131763753 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105412008 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112336701 seconds)
done (took 10.221537111 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108924815 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.151353185 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.24141359 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.240596099 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132840706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148539211 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119554309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128518717 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144291324 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123981618 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14347446 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.163986914 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.245123769 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121781059 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120237357 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144145635 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117853534 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113322651 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.243496537 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128005244 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16026654 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121184684 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.161136343 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122659942 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107973228 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167508521 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113112499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116003998 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133735303 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118434963 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129437689 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13382442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112433222 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127269955 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.151979802 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12031076 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119985439 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142833806 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110708142 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108723183 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.145729775 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126774151 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109132523 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146801559 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117071173 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124534691 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.14194333 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122746824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110186498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.142339539 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110686003 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135037494 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14612312 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126822831 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121450291 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147058296 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122886297 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120879687 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136778287 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121942043 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108996891 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133436661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1121394 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131290858 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137532015 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122390145 seconds)
  done (took 9.977929456 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129339632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141604879 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145114682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119683166 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114529438 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127718406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102810211 seconds)
  done (took 1.886287356 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103771506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.250048627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.221731199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248934169 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245935604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.260807327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128980507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103110947 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169510871 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114811737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.250855363 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.280128499 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115270385 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119477624 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.253920488 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130887664 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22534339 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132613232 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120757814 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.253146717 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124963098 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163866788 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11893803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105200878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24426961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106547837 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.299805583 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15087554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114668074 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119134912 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11889396 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213249185 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.248822075 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119566671 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140384751 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.222262901 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.247400246 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117872741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.263957868 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1369179 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.219618221 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145575216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121697877 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119240652 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.148233305 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.210528238 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.153226189 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120898125 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118855687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.257088908 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14394994 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.222548901 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143625177 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119991446 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115772683 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150185719 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128634025 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120854405 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.259690635 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12160471 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.25039518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.251721396 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.250362214 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.251199542 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130570934 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.252871751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209397159 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.147455762 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11400933 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122063287 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.254253281 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117968143 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.145713781 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.241186048 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123812812 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.254805098 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.225174933 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146402835 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118459687 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108453666 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.146619133 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105422275 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.245763585 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119984601 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118145052 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152511922 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118236893 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119532938 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.138425284 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.129258616 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144975419 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117921839 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126258793 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.145574867 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123711821 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25600525 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116377369 seconds)
  done (took 17.405769756 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106777335 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107412403 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111134803 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133201855 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108138961 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10662592 seconds)
  done (took 1.707878844 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147386759 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121229173 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157175015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121865776 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.174362187 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.257665448 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.266316269 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114394505 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.170046764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134972332 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.259074146 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.263167125 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.259417067 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12448692 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.264626808 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123838025 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.266947005 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119516874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129992927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147552562 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1210325 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12375219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146478892 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.249135732 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121401961 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122160646 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142319495 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13285188 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128911505 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.143731825 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125646704 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119194138 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.1394611 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115411115 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.265584751 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112494542 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144949508 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125162285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122367097 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148808588 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.236803158 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.147105508 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128738578 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122531783 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143559666 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112502645 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123132768 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142790784 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.266033272 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124678076 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.143695578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.150078163 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121547649 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123613415 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.141079951 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115741674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124791288 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.265655081 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123881326 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141968892 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121390227 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120217103 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143730917 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125462882 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14919907 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124225365 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111907317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148743985 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120510506 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122579834 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149764226 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122676355 seconds)
  done (took 12.07154136 seconds)
done (took 44.054685097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.59247611 seconds)
  done (took 2.625244872 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.053015611 seconds)
  done (took 2.085613261 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.133077538 seconds)
  done (took 21.201598891 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.450047524 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490402865 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.135446484 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151423166 seconds)
  done (took 3.264566535 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.772099581 seconds)
  done (took 1.831032913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303460028 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268102739 seconds)
  done (took 1.612543607 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.74089212 seconds)
  done (took 1.794498448 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.57556139 seconds)
  done (took 2.617572947 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.292179544 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245596315 seconds)
  done (took 1.590444707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.677162508 seconds)
  done (took 1.729188328 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.983040652 seconds)
  done (took 21.040968129 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249712271 seconds)
  done (took 1.307462144 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285216298 seconds)
  done (took 1.344550309 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.839141765 seconds)
  done (took 4.897687199 seconds)
done (took 69.987819751 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117578919 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121059598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119990049 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144557419 seconds)
  done (took 1.550844699 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126624482 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122128589 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.151956963 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121193065 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127251587 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12063622 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146866302 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123622214 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119729471 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150357947 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12288532 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120428862 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151364081 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119558989 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117269033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150989871 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125256012 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120324868 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149561407 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122066919 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122422132 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149679788 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124465408 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123873085 seconds)
  done (took 4.190082342 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11644302 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110737895 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112379654 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13709362 seconds)
  done (took 1.538811814 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130091333 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132667778 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.159886044 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128245637 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133584236 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.160891758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120642227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118648817 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14663827 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130658934 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137959862 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161623486 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134004261 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123336704 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15994052 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116508741 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123067954 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.161924501 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128416051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129827822 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148962727 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129770552 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12627325 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157781238 seconds)
  done (took 4.35869303 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196738077 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133619296 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174884181 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166398534 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176355596 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119723744 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142853432 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.155872406 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126643968 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.124071783 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.151035477 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167921633 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154146557 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122432888 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120960703 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153483834 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133611544 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126622178 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191350869 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125315657 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.155790342 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131995067 seconds)
  done (took 4.312714487 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123722438 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110621539 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107376434 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.138225887 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122597573 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.113887667 seconds)
  done (took 1.783497818 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111450416 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105364376 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104889106 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13278616 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11058592 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105109596 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103560795 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133113296 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105161627 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104419145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133057283 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104973964 seconds)
  done (took 2.422071061 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216007916 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150419477 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269322586 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.444812081 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169530078 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191199803 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292609906 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195246546 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.21342707 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138692078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219171097 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160114775 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184001192 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187430957 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169003475 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.165154522 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201091354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209860206 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177299222 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244262905 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158796939 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210117292 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186789814 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181428728 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13777625 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198256776 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122758417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15824652 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172673006 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198372503 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180004245 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179985667 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143849787 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22843296 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279589324 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212271547 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275904638 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135727735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204786656 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189839225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269946548 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170362935 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196704623 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181608359 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131026509 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215648582 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156595822 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.217670976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133383442 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173640098 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218066488 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179618162 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205217158 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139339856 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338274372 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136560941 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.172008046 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184655744 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215616455 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228721334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205482834 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126122602 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206151146 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1909152 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244126435 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170471329 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.172255773 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153535865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16642242 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234686618 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188069517 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189830006 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.246076195 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13284727 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200477868 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171475367 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188679859 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232483405 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169276554 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.149167642 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155257732 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163129962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127728324 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202830752 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151762944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213403185 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16142388 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.351638152 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183472423 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18889504 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164557518 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192371879 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190574514 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149460765 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108159704 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175701952 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163189467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188837492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12984633 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188374862 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138672313 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127202977 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181963224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124725218 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196790946 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137603393 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19713701 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168280059 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.163107194 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181415807 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179639324 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161209467 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202433144 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191713346 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163752318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134148204 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245356061 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195766096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137073436 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204214306 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200450281 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183463623 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137633354 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19976402 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191162159 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171913411 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225406806 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141136802 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137787912 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17771373 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197616541 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163238006 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190112933 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129608312 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167570262 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225477974 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157105384 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139810237 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20973561 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13498651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125558565 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165054858 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138719596 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171302789 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147278924 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136267329 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184902773 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164939271 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193219543 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188261091 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138200954 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206033672 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133643811 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164618908 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177644937 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118850239 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.209349596 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223320507 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130991238 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20671225 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166564338 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21410949 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170800282 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158754895 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181060873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15852379 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121784202 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196384122 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170458059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197425105 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189488552 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212704772 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.199230224 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193106819 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151403681 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203065278 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182808303 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188716526 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145017044 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198084407 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170962802 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.151671102 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124484755 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128093733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169220541 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13254821 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13627983 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2135157 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197001169 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209539425 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165744121 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167316039 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189863669 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155490024 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164465956 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20550204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139528776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220908329 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188775403 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208514574 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142991857 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195905569 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12149038 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157131784 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13594564 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194088718 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137237633 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137111779 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172974859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188916552 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206253184 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177965438 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223861359 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168866795 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229323715 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123268468 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166021391 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203145735 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195153658 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185917776 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133948738 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.192159841 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219069199 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145343692 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222537517 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167594007 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207490631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228844185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163244712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132160312 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178046035 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15936838 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17103844 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164824172 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179332302 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132329118 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184928754 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138914662 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143166879 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220634691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173618167 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181973769 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188905446 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204076301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127036057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144327991 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201029056 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145342994 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.140249259 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175153209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227772819 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149509445 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189631028 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204019241 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133676077 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32128073 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219813427 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211907045 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138234618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170022878 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170458338 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192165778 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166046324 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212904728 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143911038 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236013672 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196083943 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145575077 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131035517 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180442639 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152825859 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.177584454 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157796882 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194608197 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143620778 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222464881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135367145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198152712 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204639501 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149142709 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14558695 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169940884 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251119783 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167023683 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20621931 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162489797 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.198092928 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181163471 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154897491 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126800622 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132918998 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213579814 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130359594 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205686212 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197421124 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213250861 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173911222 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192510026 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140398091 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127483041 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195551822 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150736836 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217850678 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164718782 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138301665 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224178089 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134764623 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132151582 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192471473 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321802654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147305673 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20647926 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112630594 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316700679 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131284921 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13432155 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192491797 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173008173 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16432341 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186846386 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203940529 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141198681 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19386732 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137226109 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211553928 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187719053 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200843766 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209180092 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148783096 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195189346 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164837791 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207503412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145140105 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178701146 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165202782 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224559213 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178288733 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.165939956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167140319 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198692935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168232985 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208878099 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167026198 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18250561 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127775956 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197780318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140386777 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156692482 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161587098 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199749144 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130876768 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208857425 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199283582 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132692223 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128919397 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179723552 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165959163 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173605596 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133273372 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223179219 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129694495 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209941572 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20533512 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164010801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168964153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179619908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133183346 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170388218 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144859623 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132433741 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201967583 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1849041 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.162969118 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178922124 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199014553 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166997842 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190861562 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146482035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.309250429 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129574578 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220790298 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151098194 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228720426 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151951865 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204405881 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197314757 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151180468 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199622173 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15075269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.271897146 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167963119 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1992759 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134178096 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17381093 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14042903 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135145747 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185581072 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167304306 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174653495 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136566179 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198700198 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143783089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177170086 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142648448 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228087733 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150397756 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223428482 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184708125 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171312078 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172786497 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210083978 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12999174 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.201605665 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204721913 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143162409 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153819421 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16424407 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138204516 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239765755 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12382217 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193032648 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172426326 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198094185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168400535 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167368909 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177120359 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173492873 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174737374 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158607809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154529567 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19799962 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13567717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128913251 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199756687 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194136838 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162373022 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172795996 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174538047 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194058685 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153369014 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135470649 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324174464 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162287257 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222683345 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143380174 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168153226 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148705921 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192006121 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166388058 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202586936 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132163315 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160473619 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148232816 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189262336 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.148324239 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166977868 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217303751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19279379 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183316328 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134782642 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.326712007 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141122695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201005519 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123468005 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.160665403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141528612 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135710693 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175132886 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21342728 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210157101 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.193836521 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150217356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170090484 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126182946 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131252235 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.77417687 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158362248 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196904508 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149132512 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.140932028 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143623501 seconds)
  done (took 87.436302971 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250475846 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.180926499 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.254412659 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2580076 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.283878278 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.325862318 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.321498425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.329346001 seconds)
  done (took 3.360717728 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121761504 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161983238 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145228594 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146604886 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110871501 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.484562877 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.164360496 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122867091 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164443816 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156697999 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13920136 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.586765118 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120281636 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148450652 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12382671 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138177418 seconds)
  done (took 4.189945943 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.361887849 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.612762489 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.716916655 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295220782 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.276184353 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209999749 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.874262292 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.207330974 seconds)
  done (took 13.708535003 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171050942 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168040224 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.467804181 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.317814995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.19009638 seconds)
  done (took 2.476242963 seconds)
done (took 132.377891773 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12606673 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125464977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125782127 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157631149 seconds)
  done (took 1.684862649 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.204408536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.097081549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098848394 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.125975796 seconds)
  done (took 1.684890097 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.495137405 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096630584 seconds)
  done (took 1.78054458 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157026253 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142738682 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171434161 seconds)
  done (took 1.647887486 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138335049 seconds)
  done (took 1.300211151 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.135681499 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129114673 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.278405795 seconds)
  done (took 1.710834318 seconds)
done (took 10.979105653 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122748989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424802414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437129331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136417627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.717274173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431213634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037346718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179269096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177419419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140090092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133321143 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694971128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.090476869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372202569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.047084199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.497536593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701133014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113210765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148863902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114939407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018099858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139868345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11417709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113667178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.728206918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426186318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111625438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.508638005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112893615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116346429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430446219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113583997 seconds)
  done (took 17.806671785 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114650333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17142159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14960443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114418461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115090194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143287705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124655237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124511364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210834423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111801019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163165931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112634016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118019478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141608719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137744332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112587152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116204372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146333902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120695516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114184143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163591613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111458028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113304423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144753953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112507394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134826642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142464834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124692672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111939934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146203368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117675089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111924569 seconds)
  done (took 5.371495286 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161670629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179565502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151737662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150499655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192426914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114704461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199009594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179974003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210071896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113530428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133843697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140902066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155087529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112862676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166509512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113665083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116175667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144862556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122064545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113916302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163895842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112482321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114407566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144766594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11388641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137583488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141831234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126063168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112027444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148228905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119374468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112295845 seconds)
  done (took 5.694672487 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128252762 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129377626 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136843449 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166860744 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123179491 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126960488 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158546558 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12504139 seconds)
  done (took 2.272177629 seconds)
done (took 32.315750698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13866065 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133498051 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134069074 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158428806 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.227784343 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.152641129 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13183094 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118899198 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159924177 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136452058 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112343476 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151244512 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134786344 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124085681 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.262769868 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128209949 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.268848993 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.263850103 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.123986577 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1267708 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152165369 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23673178 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15847972 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120457846 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.261026838 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117426595 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.256217009 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12389271 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122893072 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11455535 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.26532529 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157354717 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121579986 seconds)
  done (took 6.559905278 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.246458017 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155291744 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123749605 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122025503 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123277757 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.15437431 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.251365624 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.156298576 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122786425 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121367389 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.154430601 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.233182656 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161563492 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118068226 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123826291 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.118213985 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.285909891 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124258399 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.147895553 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.10004303 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117100785 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120691815 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.29807324 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149085229 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123419955 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121476691 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.125040621 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159792667 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124628837 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123590577 seconds)
  done (took 5.794395083 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130355613 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136996122 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139902847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223613911 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152857497 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167802554 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142590479 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13960169 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176898683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116707229 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131689581 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.186892901 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133207652 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125347923 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146678359 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136587131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.14014778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148212283 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124820412 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134158401 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168045322 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134848922 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141338434 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155026976 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115339039 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123647847 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156310519 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126326609 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123572209 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129567873 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.148283591 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119675275 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117625503 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182705636 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117612442 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160047168 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144837134 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128032692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129931676 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.181308671 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118935375 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116097934 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175400307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174517025 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148098162 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129659994 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127233079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129009213 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.146107337 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1365131 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158657117 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.146606982 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137530897 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113541743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.146482943 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125371879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115524188 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149521109 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132083556 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.119589929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.173347742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123949491 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127156742 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.148458823 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128011181 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114754537 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114157184 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151788715 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143525654 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123068234 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.185472328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116587242 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127235174 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159768781 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127276101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127477803 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144711838 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128038489 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125778285 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.152837871 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129270768 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118597134 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11845836 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164489213 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.137272903 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130425594 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158671644 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129827822 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118745198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148851051 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133987081 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115635585 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.152305192 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129955772 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11566394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149182588 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130072406 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126993034 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112570809 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172854732 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119733871 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114277451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171960275 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118919592 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120932557 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.157436151 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158612278 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113928035 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.160052825 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130406457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114817813 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15451078 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120054931 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114989693 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.166371157 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.13156268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122592405 seconds)
  done (took 17.409352824 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.367553863 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.354183448 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191172914 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.442523872 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129675149 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.280680735 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.352132698 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.355275416 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115496111 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182702702 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179176766 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.321220737 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115077413 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.179913102 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.356149829 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.413037509 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181310137 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153507929 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184605319 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131903645 seconds)
  done (took 6.187335345 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137573919 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152451929 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.173013552 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147829693 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126032578 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163548102 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116026207 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137474535 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159264108 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127563149 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118971833 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.165010299 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128284679 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132253899 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.165086426 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.159306571 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124556063 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153264252 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14171404 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12037676 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140258548 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142840581 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124871885 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171004078 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136986205 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127520546 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145367438 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123445517 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12286723 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124406393 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151983433 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134293195 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153987669 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112894803 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128575149 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.133120629 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.153535866 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119541878 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12152076 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150666785 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132647525 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129535048 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124655587 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.137673024 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136534611 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118674589 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128648203 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160357123 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11232427 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13513981 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.160735663 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129936635 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123083879 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168278871 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.124332082 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133347194 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.158310076 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.132171486 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121464049 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144713235 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115513222 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121019509 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124713973 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161390984 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129191358 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136706002 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163608445 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116290137 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119987185 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152808818 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121250824 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.131167099 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.169255811 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125162843 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12238756 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.16112852 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123957523 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101438877 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124967498 seconds)
  done (took 12.016609445 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143289939 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125894291 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135382509 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184400195 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129086387 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121751167 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157272792 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138256827 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129224952 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165678401 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131076794 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129521848 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.173207501 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127244044 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124370355 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165399106 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131124356 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.158729613 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.167035696 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145550911 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130183803 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.154142786 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.13027781 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127507206 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178672581 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128492876 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143224848 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161292857 seconds)
  done (took 5.25394598 seconds)
done (took 54.398588956 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.341445375 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.621485176 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.309988442 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.308012772 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.305010086 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.34109156 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.307379591 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.305279254 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.864651714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.282604932 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.30836994 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.30793434 seconds)
done (took 29.813039214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.884456815 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.287583638 seconds)
    (2/2) benchmarking "String"...
    done (took 1.677061168 seconds)
  done (took 5.185478754 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.297183671 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.298245888 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.604503269 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.304546269 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.299047874 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.316948684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.312213725 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.30410585 seconds)
  done (took 16.638780323 seconds)
done (took 28.209938638 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.351891955 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.668381642 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.597072715 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.28336718 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.309108582 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.301455443 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.298107881 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.379690183 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.312323376 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.28690485 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.824317744 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.612913626 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.299351684 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.751872078 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.283824011 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.306953699 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.332115767 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.709290266 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.300900974 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.283880234 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.299620992 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.283849224 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.322151162 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.318936368 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.31763278 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.310893725 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.348082533 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.316554081 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.794167471 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.330128433 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.289089276 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.319607962 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.349685738 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.303451228 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.313560126 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.30491133 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.651100395 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.323096045 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.294775544 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.307765813 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.66794744 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.309468962 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.300833926 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.314644062 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.284409771 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.374301439 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.289609035 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.486763016 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.32319466 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.334650796 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.359921189 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.755881387 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.323978419 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.314523865 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.312410748 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.693023673 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.317996932 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.444912793 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.334535349 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.310530829 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.301655748 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.300113513 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.352932451 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.306201019 seconds)
  done (took 151.909604361 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.311063998 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.311889871 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.302852549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.30839676 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.306818346 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.305787279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.301585349 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.303665571 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.307095337 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.309387527 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.308208816 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.305273806 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.308022619 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.331987958 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.313970233 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.328330229 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.309209781 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.304807267 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.330571576 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.302523387 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.31687137 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.308439223 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.323123073 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.304634619 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.320515549 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.402317432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.334265761 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.343130435 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.317255288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.305565882 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.326293658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.31248429 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.09766228 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.267773647 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.323649467 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.327326471 seconds)
  done (took 84.35230884 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.30469573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.305236162 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.304722269 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306630054 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.343413991 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.307672784 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.986646277 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.991975726 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.896280176 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.767529796 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.307105952 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.098517765 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679895119 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.30515368 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405166118 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.319981263 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.308479312 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.324954032 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33368999 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311284766 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305680702 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.99042916 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.323777276 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.718373406 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.497294384 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.326282833 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345190056 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.708495264 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307037019 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346035135 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.659290892 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.36307145 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.306778956 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.763292385 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.378844125 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.310290156 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427357347 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.310770804 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346132075 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309288911 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.30732288 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.599465337 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.30751194 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.307111261 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.31048662 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.137335551 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.314692742 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.992846646 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.313924418 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.450268152 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.313977986 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307737876 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.399898339 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.381130729 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.312557344 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.308106429 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.309301903 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.305454345 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.306432473 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.346564322 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.376813281 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.414814761 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.313887401 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.313463535 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346741509 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.311992398 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.61919557 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306620975 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.952639369 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.372038651 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.435675794 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.994975688 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.314249109 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.41243897 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435944822 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.310881153 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.309745395 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.310174569 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.309357216 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.425931817 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.31068015 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.401983451 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.500192867 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.328824078 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.007271944 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.414298005 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.310085801 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.828371332 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.314924405 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.310936537 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.242765578 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418465784 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.311479484 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.313603636 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309835769 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.407765959 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.997725618 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.714881551 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.316122951 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.400897838 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.31050834 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.013791209 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.996921536 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.161276235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.317086062 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.432604314 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.504510106 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.332902739 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.312849141 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.096235073 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.323655055 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.376499693 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.313807643 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.716218033 seconds)
  done (took 392.453445102 seconds)
done (took 629.920011143 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.296288446 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.293811804 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.294839937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.297993201 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.295426674 seconds)
  done (took 12.688437615 seconds)
done (took 13.901840032 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607255992 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.613201651 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.417916272 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615140514 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.38156137 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.625465292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.598481832 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.36788994 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.509734653 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.439521325 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511917402 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.406466633 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.375486715 seconds)
  done (took 20.681847113 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.70617744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.329149747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.447594069 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.698536176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.389475785 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.708399162 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.750713691 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.325475467 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.550762706 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360171849 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.359582178 seconds)
  done (took 19.839781651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.707139225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.330007328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.449622329 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.710232356 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.389231061 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.742652051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.781118465 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.329032554 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.561856574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363026681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358116769 seconds)
  done (took 19.935549137 seconds)
done (took 61.67108122 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.379214563 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.457417385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.378699903 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.358485181 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.351370101 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.353370215 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.359552147 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.357553709 seconds)
  done (took 12.209771648 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.348661307 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.352712032 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.355102349 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.350314101 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.347021015 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.345669795 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.346322741 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.344336525 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.344932621 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.345595345 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.347070532 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.348474062 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.346962557 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.348466799 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.348987046 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.349052348 seconds)
  done (took 22.786540943 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.349829892 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.349665973 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.349630424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.356510978 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.347890608 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.346520532 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.346214417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.346584506 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.346791516 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.346900818 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.353578413 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.349710253 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.353763143 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.349645929 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.349922989 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.356936521 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.350619657 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.351600996 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.362160789 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.350278063 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.356811296 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.350393789 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.35539205 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.356544642 seconds)
  done (took 33.651179805 seconds)
done (took 69.864288261 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.320906521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.319974209 seconds)
  done (took 5.85876116 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.474696049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.469383083 seconds)
  done (took 4.164615906 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.350312075 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.350890501 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.352676552 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.351628165 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.352353886 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.351500565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.358324337 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.356097169 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.351978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.351640876 seconds)
  done (took 14.744982585 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.352522831 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.35204826 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.351759047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.351940984 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.352193809 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.352688075 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.351866393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.351719797 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.352349764 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.352272381 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.353442851 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.35229913 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.355133499 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.351747314 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.352324552 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.352021441 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.352703441 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.355112197 seconds)
  done (took 25.565816576 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.374646524 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.386403956 seconds)
  done (took 3.980041456 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.554003201 seconds)
    (2/7) benchmarking "second"...
    done (took 1.438516029 seconds)
    (3/7) benchmarking "month"...
    done (took 1.529581171 seconds)
    (4/7) benchmarking "year"...
    done (took 1.528494999 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.438901693 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.384770577 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.435158898 seconds)
  done (took 11.529595279 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.355121346 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.709581226 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.906065779 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.568802989 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.345664766 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.366460497 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.301516136 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.368911507 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.371705997 seconds)
  done (took 15.513134038 seconds)
done (took 82.576581423 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.324650851 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.358059709 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.363240255 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.361370046 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.725719521 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.350501904 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.329327634 seconds)
done (took 17.034853245 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.311079293 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.330274122 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.322003098 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.349544311 seconds)
  done (took 10.53422408 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.321349594 seconds)
    (2/2) benchmarking "read"...
    done (took 1.699559979 seconds)
  done (took 5.239418784 seconds)
done (took 16.996649504 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355630908 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.355200686 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.354214806 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.355896584 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.356174762 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.356297543 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.354120102 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.35682261 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.35293713 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.35120779 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.353572476 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.353774736 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352722647 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.354431873 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353477143 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356100312 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355567911 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.355634889 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356060921 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354670241 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.355516788 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358868261 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.356561264 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.355836172 seconds)
  done (took 33.747450846 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.354902533 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.359205873 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.351567333 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.355384927 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.354760127 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.355309079 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.355199918 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.356683626 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.356652058 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.356685092 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358338724 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.358344102 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.358075004 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.356293073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356518731 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.358677944 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.356949093 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357687873 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357568724 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.357684172 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.358014801 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357709105 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.35618489 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358663766 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.357582134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.358884883 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.35845068 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.364769151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358106991 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.358084851 seconds)
  done (took 41.941164376 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.368533666 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.365951703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.360049137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.359751405 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.358156997 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.358378325 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.357722096 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.358312325 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.357762045 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.359961417 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.35914162 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.360430611 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.359301906 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.35868381 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.35963435 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.360683157 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.358049092 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.361062255 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.360375227 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.360588382 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.35905809 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.359347442 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.358927138 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.360561354 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.360273329 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.359712782 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.359948287 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.360336953 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.357862616 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.357518369 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.357758343 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.357118597 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.357536667 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.35906256 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.358732071 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.359675836 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.37026999 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.372780016 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.358295702 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.358932166 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.360631963 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.361133284 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.361224217 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.359732687 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.360365798 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.36157056 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.359773963 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.360340446 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.360171569 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.361025099 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.360957353 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.361669455 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.362533672 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.362804516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.362381138 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.363206173 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.360769201 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.363111538 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.363103367 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.361668548 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.361877373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.362047786 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.362425766 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.362273234 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.363881049 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.362956839 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.363516687 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.363157843 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.362184256 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.361873532 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.362001411 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.363012643 seconds)
  done (took 99.212684241 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.364493558 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363351094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.362858014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.363319596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36156651 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.362344821 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.364740726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363324135 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363582338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.364749456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363701138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362952021 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371270467 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.36450585 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363456764 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365107253 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364709926 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.363116846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.36290851 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.364009906 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362351596 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.363625151 seconds)
  done (took 31.231835208 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365696993 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.372241121 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.364973227 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.369426448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.366135665 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.36726926 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.364470021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.372903007 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365540618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.364007463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364605722 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364361627 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368601412 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364546707 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366630701 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.365455622 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.36594472 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.368198847 seconds)
  done (took 25.831005606 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.364990408 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.366232326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.366075952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364643227 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.364274815 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365890314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365487399 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.368023545 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.366917539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.364141348 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.367020694 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363876789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.365501018 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36543418 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365685049 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.365580777 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.367676574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36528025 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367243908 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365015621 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.365464491 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367816955 seconds)
  done (took 31.279202126 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365844357 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366281564 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.368147863 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.367211501 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.366497793 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.369460111 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.368486105 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.367444701 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.367802707 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.36524931 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362043595 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.36744498 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.367234549 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.369317914 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.366932415 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366779114 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.369408778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37272568 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366501285 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.366180015 seconds)
  done (took 28.577508356 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370985515 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371338283 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.370798619 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370829838 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372665547 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.37177926 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.37199067 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.372825902 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371483413 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.371543686 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.372600245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369030796 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37281801 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.370033926 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369709305 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368964797 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37013366 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.367881069 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369907235 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370785 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.373234473 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373065457 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372594308 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.373304594 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.375981611 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.372588651 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372242308 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.372925705 seconds)
  done (took 39.637881327 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370838428 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.370452136 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.369765457 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.369318752 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.369531 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.369000276 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.371031051 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.370004244 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.370819153 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.371623165 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.369386987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.369329368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.370422733 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.371706765 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370939908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.371851267 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370500815 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.371082454 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370624225 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370815101 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.372639845 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376772494 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.370756574 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.369558029 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37632076 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.37119413 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.370062771 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.370860079 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372538435 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.371386543 seconds)
  done (took 42.367222955 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.408513192 seconds)
    (2/2) benchmarking "in"...
    done (took 1.40527982 seconds)
  done (took 4.049500847 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.37988043 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372428505 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.37098719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.372895813 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.372019165 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.371407076 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.371319914 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372089565 seconds)
  done (took 12.219165231 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.363845849 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.371403794 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.370561228 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.370326422 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.37476302 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.361941697 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.377249091 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.378227846 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.367243139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.370491317 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.37801923 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.373168404 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.3701338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369370015 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.367334212 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.37078968 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.376877674 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.378388481 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.379499725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.373618391 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377525522 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371204118 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.371146568 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.377915865 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.373611547 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.381370564 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.379568659 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.377958887 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366611355 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.375691071 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.368251368 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.377881084 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.37777737 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.378988557 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.376765579 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.379663992 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382840374 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371793229 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.38202833 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.381756577 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.374169858 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.375253445 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.375280334 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.371339749 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.37162547 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.37931269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.376218373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.376974823 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.368956695 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.376463375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.384246348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368674606 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.374162105 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.377517211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.371998143 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381767053 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.385104908 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.378660234 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.380035128 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.384075796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.398069615 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.383175263 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372898328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.381883408 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393261811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.393732122 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.384418647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.380455713 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.382203002 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.378082715 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.380218811 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.396530802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.386328666 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.383092571 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387906451 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.376868944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371025813 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380575771 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.3831416 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.380217135 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.383513784 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383135383 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.394768985 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393155862 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.370942562 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.383133707 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.383372215 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.381357783 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.377269204 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38872576 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.388041175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.380271402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.371132111 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.373626982 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.375132131 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.383257117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.372552753 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37432756 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.384196482 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.387722279 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.380340963 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380468145 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.378794677 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382268373 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3816977 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.382526717 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.383929129 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.372631114 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.386714609 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.384571041 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.381981815 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.379847395 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.379220639 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.381198196 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383696209 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.378298106 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.3841844 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.37682229 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.386843677 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.382148876 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.395535773 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.399545361 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.383236863 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.380499504 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.387778712 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.390671049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.38313671 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.37504895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.380798424 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.378163661 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.379904665 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.374007757 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.383043612 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.375153782 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.384343359 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37618848 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.382019389 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.380823707 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.385333638 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.374870645 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.376303649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.374957039 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.380950399 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.381769637 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.386752114 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.378796842 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.389995194 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.380584291 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.378568462 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.379896634 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.382997516 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3855484 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.37947151 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.390194521 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.377145446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388510857 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.378468309 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.388096699 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384408171 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.383093548 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383706196 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.380997891 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.379734392 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.386964921 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.383970825 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.376240721 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.38491906 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.384822051 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.383414678 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.375797928 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.38509953 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.374596798 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.387320972 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.394532433 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.383849021 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.39041508 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.385129282 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389170997 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388346032 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392136039 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.387236883 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.381549358 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.386184863 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.394437589 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.388803702 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385998597 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.384038501 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.375542379 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.375148124 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.387563181 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.387221169 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.393076312 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.401357184 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.393540618 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.383078602 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.390908299 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.38466826 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.391786762 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.388375505 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.390774902 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.386471841 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.390174757 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.377762982 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.390019499 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.38162325 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.390343074 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.37888645 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.386526457 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.388791968 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.38982548 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.387835422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.379751573 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381526171 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.389427385 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.38944687 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392489715 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.379389796 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.388894636 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.381539091 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.380004469 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.39512762 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.390985474 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.394201455 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.388857689 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.382151041 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.386491886 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.384341822 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.381436983 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.389907474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383428367 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.383301536 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.395771418 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.387402337 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.383094806 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395636903 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.387531124 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.382996609 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.386769924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.400524187 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.389606667 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.391954173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.396089125 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.389956293 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.392629538 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.393056756 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38172005 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.390077676 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.39450331 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.39254489 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.380852621 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.391194439 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.382442698 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.389187061 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.384335257 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.384383237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.382555421 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3860808 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.392646788 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.390072439 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383014837 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.394794757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.393636649 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.393004096 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.392611589 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.400949869 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.392359741 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.384388196 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.385929524 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.389275549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.394369353 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.383762908 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.394214865 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.383458259 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.407397687 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.409541465 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396167977 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.388322006 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.391547138 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396449996 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.391408642 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.387781366 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.384308926 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386002298 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.384874082 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.384208564 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.392829842 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.384873244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.399995209 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387382712 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.391774261 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.396976738 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.392076744 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.385963746 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.395318008 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.396615869 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.393489214 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.382294914 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.392709297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.385789422 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388330527 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.388508274 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.385270292 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.400265076 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.389662331 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.389415162 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.386142958 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.387083581 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.386338095 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.389356216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.398599222 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.39573957 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.402760994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.395919131 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.39748197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.394335481 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.402636327 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.398048034 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.394928433 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.402592048 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.391246471 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.383390304 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.386562984 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.39613131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400211577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.402237324 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.390734324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.40072086 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397668517 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.396168605 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.392909462 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.395029354 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.394094109 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.397789761 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.400437513 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.395325342 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.391261277 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390523124 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.396954948 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.397955634 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.392594059 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.386055727 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.395122313 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.398639729 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.38699593 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.386870077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.387636794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.396481494 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.397797025 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.396797177 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.397061246 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.39751731 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.402188156 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.398060745 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403731997 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.397366313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.401568873 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.401949228 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.402596796 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.402017324 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.388406166 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.397938034 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.398058231 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.391254643 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.390090877 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.39000176 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.399994511 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.395342103 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.403304708 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.40044799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.393771582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.398896536 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.402493152 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.390552458 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.413102253 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42281927 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.396444617 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.401177063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.398277114 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.396365977 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.402627038 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.401206745 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.390980794 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.399725552 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.406625242 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.408912125 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.39176183 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.401720009 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.391577449 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.402501882 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.399177437 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.399652009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.401540936 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.399775837 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.392242268 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.40244126 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400334498 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.401911794 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.392725779 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393963156 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.398606904 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.412305224 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.405531039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.393426637 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.405405045 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.402005311 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.392513391 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.393101315 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.403420085 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393422516 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.403331666 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.397018154 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.405351896 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.397740034 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.39830491 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.395318846 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.405313832 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.395442675 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.394812567 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.404825153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.403153502 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403860365 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.396267989 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.405565191 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.395019995 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.393920484 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.402015159 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.392948223 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.404825781 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40386267 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.4021862 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394738954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.401978911 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.404035178 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403130664 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.395296916 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.393874947 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.414333065 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.408884748 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.410646144 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.405924943 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.410166265 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.397014103 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.407760023 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.403592594 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.395395253 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.39613145 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.406605407 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.398483424 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.401914657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.399943108 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.408153928 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.415031199 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.400603597 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.397709024 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.419418419 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.403067527 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.410038735 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.402550631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.401110644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.398907361 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.405163045 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.405133083 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.397839278 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.416412451 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.404453527 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.408907795 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.401071952 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.401270161 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.40414427 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.411574754 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.405615476 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.398281234 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.408767065 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.398596917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.40879514 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.406832671 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.403541539 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.39677399 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.399529578 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.407649324 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.403089946 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.407158061 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.401272746 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.401399159 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.399065692 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.410377534 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.41005396 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.407971643 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.405884645 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.398739812 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.40960516 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.398413862 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.402648339 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.400609393 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.406976823 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.414110133 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.409658729 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.406360893 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.410979846 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.412164634 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.404317197 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.397113977 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.400118478 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.40522653 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.412468932 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.409533713 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.403010886 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.401155691 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.410380049 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.410038945 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.410030284 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.410992138 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.424687245 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.414904577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.400793914 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.402909616 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.410950163 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.411366697 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.409996131 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.407441058 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.403634219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.409537624 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.414086596 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.410565059 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411557783 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.403829705 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.404273965 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.411594449 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.409610817 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.408013407 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.40487502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.419922045 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.414715447 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.419347042 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.422852166 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.411187414 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.42454009 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.437102232 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.404612905 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.402569908 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.409510456 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.399816625 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.408344734 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403754766 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.410818862 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.409756157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.410116188 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.413507542 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.409518208 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409534621 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.405620784 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.415085955 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.413728101 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.402897882 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.406345947 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.413514526 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.411318715 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.413036043 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.412568246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.415824806 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.414354996 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.403776835 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.428267868 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.421835068 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.415580151 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.41678659 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.413628367 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.417740203 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.414904158 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420705385 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.418204717 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.414926996 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.413010202 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.407478912 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.415841987 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.417889733 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.404168226 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.405117369 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.402933851 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.411479281 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.426854141 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.427221018 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.413505447 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.407514251 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414571992 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.413655885 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.405064848 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.416787777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.415883053 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.408137096 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.412811433 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.418380927 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.416830451 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.414346056 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.415931244 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.419518013 seconds)
  done (took 831.849147598 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.417855092 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.413995523 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.413743535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.412974583 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.412171688 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.412808919 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.411125046 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.410910563 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.412263878 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.415797777 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.41478417 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417001282 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414749041 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.415499206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.41281716 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.413879027 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.415182475 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.41456885 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.414880482 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.414859599 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41530358 seconds)
  done (took 30.967967296 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.417356984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.417449803 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.414394805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.413437072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.412454824 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.415397167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.414705739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414379021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.41523744 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.414634989 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.416468183 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41581845 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.418183695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.415266844 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415716062 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416860063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.416086082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.420719911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.416861739 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.415951777 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415670596 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.418836292 seconds)
  done (took 32.424020192 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.418114133 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.417559733 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.410278849 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.416433263 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.416600882 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.414475472 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.415744209 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.415915948 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.415226894 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.409544258 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.410077776 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.41512765 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.42550802 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.423331906 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.411247059 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.417959225 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.418895657 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.418834685 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.418668463 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.420121372 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.427762218 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.425939011 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.419722578 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.410086715 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.419864774 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.417924794 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.419348927 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.418944197 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.414147008 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.423187124 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.418458172 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.410350017 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.415704259 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.413258138 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.414751276 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.422704382 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.420280121 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.416889955 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.418693047 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.435220778 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.440801446 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.420864623 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.426187436 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.423970395 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.421166546 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.422697467 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.428228059 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.420599785 seconds)
  done (took 69.39270846 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.422617639 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.419006566 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.418250463 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.420747847 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.419246121 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.420611098 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.418535415 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.420879429 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.4189824 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.419993981 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.422683499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.419261905 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.420153918 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.421733657 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.420260915 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.420492508 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.419590997 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.421448426 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.423093118 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.41799254 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.42010908 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.421179467 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.427925856 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.421349531 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.424708268 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.42113002 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.421640909 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.421395276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.422637963 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.422278979 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.421927607 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.422282331 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.421303714 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.427229678 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.42146826 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.422930249 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.421871525 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.420556622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.421679461 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.420862038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.422905734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.42350169 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.424715601 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.422191048 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.421814813 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.424268966 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.422645784 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.423491843 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.421636997 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.422878426 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.422109473 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.422589912 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.421221372 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.422175962 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.422239169 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.421983689 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.422573499 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.424065589 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.423568318 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.42399477 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.424409417 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.424742909 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.42364249 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.425014592 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.422903569 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.425439366 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.42450035 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.422903499 seconds)
  done (took 97.979876703 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.428102065 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.427024693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.426014788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.42632656 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.428668339 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.427411125 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.426560319 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.426917627 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.427859716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.427668839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.427502128 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.42620315 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.429649329 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.426728566 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.426206433 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.428050313 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.426640288 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.426613119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.427058496 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.427630637 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.429536326 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.426953106 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.428859494 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.42824531 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.427884091 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.427120446 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.427198529 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.429690535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.430411716 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.429030046 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.428274922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.431754345 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.428242516 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.429150313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.430195767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.43000531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.430880281 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.431027717 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.436971419 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.428014623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.427656058 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.425615506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.429040173 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.426812306 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.427986478 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427232262 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.428806485 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.430933641 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.427504922 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.43044098 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.429409564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.43134291 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.432608085 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.43169945 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.431176409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.43011112 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.430113354 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.429660992 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.430491405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.430143386 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.430834396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.433134689 seconds)
  done (took 89.870172459 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.426443125 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.427841697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.428085513 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.426074084 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.426414421 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.427412103 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.425829429 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.430197723 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.432450733 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.428662611 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.43060804 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.429831685 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.432503463 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431541958 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.431633869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.43187552 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.430711545 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.428618821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.429621462 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.430204428 seconds)
  done (took 29.870125873 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.432919577 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.431933208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.430348091 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.430990841 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.430831952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.430604828 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.431438313 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.432480136 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.433775901 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432612485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.43755627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.433331292 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.438329344 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.43279519 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.429812758 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.434369552 seconds)
  done (took 24.209186937 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.43200319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.431044338 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.435971781 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.43409319 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.431727317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.435747032 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.431623323 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.433704523 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.432677018 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.433668276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.441837541 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.433444435 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.432822149 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.435024523 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.433138878 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.43435279 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.437504029 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.432673736 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.433074485 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.435832937 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.430732707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.431071507 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.429997488 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.428975501 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.431170333 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.432247635 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.434170155 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.434144663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.433276047 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.433910835 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.435132708 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.434742644 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.435525496 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.435531083 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.43741121 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.433879126 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.435275254 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.438268931 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.433924035 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.43503074 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.434855648 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.433910137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.434918155 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.4348678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.431956326 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.436412898 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.435528429 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.434987229 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.436023673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.438596487 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.435995457 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.437323489 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.436052866 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.43576987 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.437415889 seconds)
  done (took 80.179835859 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.434785806 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.435057838 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.436987832 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.436855762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.43469641 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.435777693 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.436652804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.438303153 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.434852016 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.437197147 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.442807427 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.437414004 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.436529393 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.436116492 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.441757712 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.435916606 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.435117413 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.437278791 seconds)
  done (took 27.153224653 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.436674664 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.436334676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.436272937 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.436686047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.437455419 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.438879693 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.438147546 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.436845286 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437031692 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.437192537 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.435340416 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.435526194 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.437888016 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.436532816 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.437089241 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.439235046 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.437628067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.437501794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.438895476 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.436485533 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.437312874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.438430823 seconds)
  done (took 32.910471787 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.43050726 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.429970389 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.431502219 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.460822078 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.45027367 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.430837818 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.432672688 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.430618796 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.464944809 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.491000077 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.484920953 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.448027714 seconds)
  done (took 18.677083658 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442904855 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445455459 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.439764652 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445908799 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439836937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440503502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439504143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445703884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439393794 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44177643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442162512 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441017465 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439886525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438432779 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445719529 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442948296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444645929 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441258417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447632482 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440021668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439812144 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441091915 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441391814 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447829085 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44571918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440853826 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44163535 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438740639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440712677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441159033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449669543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442469465 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442580652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440627401 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446465993 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442152944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447490635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446853473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440856061 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440371433 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.440728881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446161973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441125858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442513534 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44750984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441140245 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442365471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444427465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446256679 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442460595 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444219339 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446151847 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448642247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443539782 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442889071 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444292183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443765859 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443270126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448404856 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444063033 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448044405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443379217 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44474643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44325057 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447387548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449567225 seconds)
  done (took 96.557669802 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445409364 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.4438401 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449153974 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448920076 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442235706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444085942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450548984 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443565345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445465726 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444334087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442927484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443548443 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447698831 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444056119 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445165129 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444993598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453224115 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455294419 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448602786 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449348692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442294024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440513979 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4426213 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441799967 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44604911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444645231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44996525 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445928843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448038679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445425288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445321224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44472017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446966127 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.446397827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450307403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448006621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444706341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445425218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444398201 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443258811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444344773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443239745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443992215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443807763 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450446806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443531821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447690311 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446852844 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45251362 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445659326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447853111 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44796297 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.465686034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446670418 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448422247 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444825631 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451361867 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45141306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446331828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44756285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447672431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447341802 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44931419 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447110627 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452547352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453127455 seconds)
  done (took 96.794778514 seconds)
done (took 1950.162151885 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.669061827 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.621384186 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.439997014 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.444539072 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.441684658 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.45582249 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.429489812 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.439704937 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.440020131 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.44003822 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.440166519 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.698234811 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.473410759 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.439330798 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.438870962 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.594178492 seconds)
  done (took 29.205776936 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.479591085 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.455841417 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.597038771 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.450458539 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.479854177 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.717091189 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.527377678 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.452828393 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.678119543 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.475745274 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.41819466 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.487664807 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.449379073 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.433383812 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.47990565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.719132161 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.816568993 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.425268325 seconds)
  done (took 31.841360624 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.078191019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.455986337 seconds)
  done (took 5.834088888 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.475511027 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.450550661 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.4497544 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.446498399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.418465504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.425986643 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.446165326 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.441685985 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.432894575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.622074707 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.454959182 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.468771901 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.44696871 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.451797188 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.453235918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.51295685 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.668239236 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.453299892 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.452815474 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.457049112 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.445504698 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.608680196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.508444685 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.460716129 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.615321404 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.436688562 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.457450909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.460834021 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.645995067 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.455949391 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.448102793 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.449440183 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.450530616 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.422320046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.080501089 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.426011227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.485302356 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.463426111 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.455209982 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.666718651 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.450384089 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.459822649 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.422095296 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.026632925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.651869906 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.646067213 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.430597704 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.455425652 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.453603144 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.543527567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.459098326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.453316585 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.556438148 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.405600182 seconds)
  done (took 92.601847206 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.471340804 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.422774991 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.674973962 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.456367531 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.423658832 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429035145 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.449216132 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852542212 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.479325479 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424252413 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.857453381 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.10791086 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.437716137 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.468326803 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.906778369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.433004784 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424995245 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.430249545 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.433951483 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.428260465 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.07775905 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431328872 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.43027804 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.472187769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.493342974 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094678241 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.429580326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.455249233 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.452534711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.424845576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.077663507 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.441384969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.460365735 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.425508858 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.82530041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.997764101 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952537819 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.435940911 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45117581 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431785704 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.429011469 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083700937 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.972613067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.431971762 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.429335113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104050243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431285501 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.426818312 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.434512098 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.730474385 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.432890943 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.430391183 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.450657657 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.432322085 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.427848053 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.491138572 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447340964 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.120056469 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.432134282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.430602034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.47300596 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.42833345 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.43105293 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427094745 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.433256003 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949610213 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.626809387 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.430085837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.966506774 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.067828598 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433049971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136217671 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.433258028 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.451723016 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.63766391 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.426797151 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.449092793 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10362023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.457733208 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.428806345 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916736129 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.431533158 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.860987281 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.455176598 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42914305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.106246681 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.443380684 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.456147881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.429686974 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.444701732 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.430804714 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434935546 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.830951129 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.467665127 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.428976897 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.431028764 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.455730439 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432589507 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.431217127 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.434107089 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112955635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.437345908 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.42837717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.435152962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.432528187 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.433838549 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.431905203 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.432084136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.750139665 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.437114594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.43623208 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.433489762 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.438670029 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.445787974 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.48178934 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.43397006 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.904857245 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.438640486 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.437140226 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.44149895 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432264885 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.489584046 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.434202352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.437788143 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.438063737 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.765963815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.459707272 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.452440286 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432586504 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.433721704 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434294333 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.458762039 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.474599878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.432698669 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.233072586 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.456981575 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.461217101 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.434163101 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.447004189 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.449081269 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.439594029 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433967197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832809745 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.838833765 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.62367072 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.436522759 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.433948898 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.285299339 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.472299026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658003018 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.459363792 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.438182118 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.744671651 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.647392451 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.435407812 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.433508758 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.43418573 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.74883936 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.439868855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861105941 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.079140511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.433962936 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440916055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.242797775 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270164174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.4428897 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.434602961 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.843219868 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.459305405 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.435629419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.435513342 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.435240264 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.435735299 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.439099413 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.448894444 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.434983387 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.435064403 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.71473202 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.699354855 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.462320733 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440304943 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067754775 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.449413225 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.445801592 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.445702139 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.436166219 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.436000625 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.462179443 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.436765108 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.476609281 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.436925883 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.440239503 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090848005 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.449971815 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.442692468 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.671990203 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209683648 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.436534702 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.436671451 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.436503622 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.939890959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131087759 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.444369078 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.883691705 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.444362513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.510725631 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.440848937 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.470613128 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.142488092 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.439707941 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43814175 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.210448689 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.437865387 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.852519235 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.436996004 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.439415515 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.141952409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.436561172 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.438838906 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.438148524 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.445625173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.777184585 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.444081053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.441480023 seconds)
  done (took 525.879626885 seconds)
done (took 686.662812237 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.439867738 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.445236856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.440857808 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.444334367 seconds)
  done (took 11.086795186 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.477570367 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.463404459 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.473293985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.465357012 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.480008805 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.463431418 seconds)
  done (took 10.140928955 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.438807058 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.446095834 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.438353019 seconds)
  done (took 8.642157707 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.780287284 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.465300371 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.974960573 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.446421434 seconds)
  done (took 9.985280182 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.471401636 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.472927807 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.471467287 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.47659657 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.48199153 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.48557809 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.481519473 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.478145999 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.482651879 seconds)
  done (took 14.617477893 seconds)
done (took 55.793104977 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.638313014 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.699945852 seconds)
    (3/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.508808907 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.423263531 seconds)
    (5/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.729262289 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.430543088 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.800939631 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.660040569 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.694802182 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.65056562 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.790481178 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.583570927 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.728057387 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.514480298 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.449858044 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.611086228 seconds)
    (17/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.827083109 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.623213259 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.510917484 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.726671527 seconds)
    (21/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.725267438 seconds)
    (22/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.611663188 seconds)
    (23/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.432558568 seconds)
    (24/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.62883192 seconds)
    (25/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.518590248 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.594578333 seconds)
    (27/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.516148527 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.606701522 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.601259071 seconds)
    (30/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.862012201 seconds)
    (31/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.694110962 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.449069327 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.659712105 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.608413891 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.505443605 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.425737798 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.734769974 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.701013795 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.577973707 seconds)
    (40/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.701036563 seconds)
    (41/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.772322863 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.928632405 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.444351059 seconds)
    (44/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.443840519 seconds)
    (45/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.618841753 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.859195782 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.719546249 seconds)
    (48/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.510569884 seconds)
    (49/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.426217398 seconds)
    (50/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.464699666 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.638889764 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.780669037 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.649835709 seconds)
    (54/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.60560278 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.63575403 seconds)
    (56/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.78309672 seconds)
    (57/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.577928939 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.45954943 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.474787262 seconds)
    (60/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.607436183 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.776349841 seconds)
    (62/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.511443948 seconds)
    (63/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.540227496 seconds)
    (64/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.58681729 seconds)
    (65/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.519311779 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.777390965 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.017435108 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.42784924 seconds)
    (69/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.429531437 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.6244623 seconds)
    (71/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.682581005 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.641531929 seconds)
    (73/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.510256786 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.465427692 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.647493861 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.702281624 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.430423729 seconds)
    (78/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.746818083 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603916741 seconds)
    (80/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.930172056 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.634732462 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.585745855 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.805482107 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.647116578 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.616375728 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.70771374 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.621674586 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.96198518 seconds)
    (89/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.632597833 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.118741776 seconds)
    (91/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.428851532 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.658843907 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.507104988 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.66076573 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.963419021 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.453788152 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.612002336 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.646305511 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.603939649 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.428857189 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.456841963 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.668279954 seconds)
    (103/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.719872129 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.706136304 seconds)
    (105/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.763476417 seconds)
    (106/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.427841488 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.946511983 seconds)
    (108/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.516713962 seconds)
    (109/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.597817641 seconds)
    (110/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.783201551 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.78858401 seconds)
    (112/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.43731413 seconds)
    (113/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.634973973 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.432923907 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.131101308 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.458391043 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.640179942 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.707032437 seconds)
    (119/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.789360714 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.438905185 seconds)
    (121/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.516073518 seconds)
    (122/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.607636138 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.816087018 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.705605021 seconds)
    (125/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.769386596 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.643506552 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.871427645 seconds)
    (128/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.559357094 seconds)
    (129/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.658540237 seconds)
    (130/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.667169617 seconds)
    (131/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.438319984 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.434889031 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.683723259 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.625868625 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.468348035 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.479070698 seconds)
    (137/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.440829732 seconds)
    (138/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.616626319 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.450454069 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.594952683 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.974140915 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.615082965 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.66819377 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.613701085 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.510897161 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.876476331 seconds)
    (147/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.596069165 seconds)
    (148/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.437201896 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.653245011 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.47400029 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.65806811 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.697420042 seconds)
    (153/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.433630631 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.439969706 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.705166837 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.778692109 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.712361607 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.435107984 seconds)
    (159/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.448690857 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.442550132 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.984996416 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.552380229 seconds)
    (163/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.875263328 seconds)
    (164/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.602805357 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.524470814 seconds)
    (166/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.434099895 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.650175067 seconds)
    (168/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.45218355 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.717103691 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.441489801 seconds)
    (171/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.789092664 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.741818076 seconds)
    (173/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.441950404 seconds)
    (174/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.487851493 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.640647529 seconds)
    (176/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.439800829 seconds)
    (177/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.442615852 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.7434312 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.659968003 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.441602036 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.530544562 seconds)
    (182/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.871153517 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.740128336 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.028104272 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.443204545 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.614670692 seconds)
    (187/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.679099556 seconds)
    (188/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.828933344 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.726078645 seconds)
    (190/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.897914742 seconds)
    (191/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.734411548 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.522273398 seconds)
  done (took 362.303989574 seconds)
done (took 363.627369873 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.510980132 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.639629872 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.485757651 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.483462457 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.484281905 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.457455239 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.517434096 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.482323904 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.506534664 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.507983103 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.45868738 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.498034981 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.505716544 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.491696255 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.530442384 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.483212775 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.4846404 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.491786002 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.511366284 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.511147472 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488105785 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.48513334 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.518066718 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.484306 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.505668772 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.504712366 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.505000461 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.456720788 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.492348364 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.511137834 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.465455 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.498803444 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.509864697 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.493635888 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.488355816 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.492543989 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.487111734 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.64423779 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.515827187 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.496116092 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.497403406 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.511382837 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.503288652 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.502840341 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.498390822 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.51829021 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.504699515 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.512639072 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.459882084 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.470362816 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.511122958 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.503051261 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.491856611 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.47037455 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.46248451 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.517004293 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.499366295 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.514196114 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.496718751 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.492982243 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.533263134 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.513932952 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.508121668 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.506684334 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.490033893 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.511108082 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.499900651 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.513498679 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.491388326 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.499186943 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.493912878 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.497239489 seconds)
done (took 117.418642275 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.667740151 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.467344416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.67780407 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.49043576 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.709176704 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.675989733 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.491226643 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.491648623 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.490099474 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.347534557 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.491879869 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.491810167 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.468611407 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.490054007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.668249015 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.493025195 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.491195493 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.248478246 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.494149361 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.678676248 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.463946219 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.491485055 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.4923983 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.365962599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.466032518 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.459904922 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.677625486 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.490649614 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.248430404 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.460133583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.466815228 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.252324195 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.678558007 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.51397346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.504058792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.502230835 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.709373099 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.499927679 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.666583579 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.664067128 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.680058407 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.533422371 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.464430079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.468238315 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.496111831 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.49826406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.4940439 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.523536199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.465678841 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.493893602 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.249615542 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.503930423 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.495363761 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.494949951 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.493932294 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.527470637 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.49726079 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.498590219 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.679458191 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.498240454 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.669924018 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.369670473 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.35696369 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.500289248 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.467851254 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.496143609 seconds)
  done (took 119.854384977 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.609705117 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.625051342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.67001991 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.490956776 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.589606611 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.666883617 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.491682497 seconds)
  done (took 12.48221153 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.50296347 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.497722302 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.583107461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.583684629 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.501689287 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.706559682 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498916168 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.50948064 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.497009362 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.590312567 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499863635 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.49905173 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.507702131 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.468786079 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.585881626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.508897256 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.668674278 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.494578326 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498625279 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.707316063 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.49634978 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.506845249 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.58657096 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.509186329 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501033197 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.505184283 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.339102829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499987464 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.497848225 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.498679895 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.497660213 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.593901292 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.500502264 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.470014588 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.498243527 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.669398393 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.502414588 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.498392289 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.499426219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.474621039 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.501121267 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.503336073 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.499482441 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.499600683 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.499635743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.52612731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.500102212 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.498779628 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.501026632 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.499005286 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.58841498 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.499921673 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.499899115 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.500905317 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.594956803 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.508791865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502519629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.499871667 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.501662467 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.499180029 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.708981917 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.586743118 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.49909608 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.588838147 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500488574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.50134462 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.503202467 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.500678613 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.589135183 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.501758988 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.588157754 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.499299457 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.744706014 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.527262231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503158188 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.49959307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.499840448 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.503004746 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.471602709 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.51040471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.5025762 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.497327349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.50957304 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.501551489 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.500678263 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.720217704 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.672967072 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.503784246 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.516610388 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.512153117 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.502305845 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.593388796 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.501644029 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.500378086 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.610204482 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.670551472 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.592421006 seconds)
  done (took 154.861668167 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.51337471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.515795689 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.505711656 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.534845528 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.497031501 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.496597717 seconds)
  done (took 10.407011744 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.501592416 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.507274284 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.50377349 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.503784804 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.50567415 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.50473667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.506394702 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.502228741 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.512258717 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.505191687 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.50732436 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.507718405 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.507779865 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.506720164 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.508186341 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.502758068 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.509005929 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.504145115 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.50363674 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.5092077 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.474100932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.507840347 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.508047357 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.502618454 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.510697345 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.506680773 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.532271178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.50731116 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.503648753 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.519245429 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.510657465 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.509275377 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.504824461 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.5084553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.512049332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.504391935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.510243725 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.508035554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.506309636 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.50857389 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.509813154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.510514012 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.505312093 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.509807567 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.504694487 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.507517401 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.51349826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.53220434 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.510108094 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.510144901 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.509243878 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.506993313 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.51045744 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.509505574 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.501351115 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.506346862 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.516071212 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.510763135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.511908672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.50515097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.511179529 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.514018019 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.505994023 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.514199467 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.509018221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.512286025 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.508435116 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.515079885 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513875822 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.510134424 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.512176444 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.509462202 seconds)
  done (took 110.961995519 seconds)
done (took 409.904681325 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.921062378 seconds)
  done (took 4.272140682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.497420936 seconds)
  done (took 3.85171592 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.087270037 seconds)
  done (took 27.44785821 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.575817079 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.590897768 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.479042691 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.48539287 seconds)
  done (took 11.482238838 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.656334092 seconds)
  done (took 4.009547024 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.497341526 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.494739031 seconds)
  done (took 6.347847586 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.906991525 seconds)
  done (took 4.259475245 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.869367466 seconds)
  done (took 4.227736293 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.507876247 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.502223712 seconds)
  done (took 6.371095933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.461244618 seconds)
  done (took 3.814976891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.340899706 seconds)
  done (took 23.696174563 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.500401971 seconds)
  done (took 3.857859788 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.566545857 seconds)
  done (took 3.918429921 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.09538741 seconds)
  done (took 7.449059898 seconds)
done (took 116.360065972 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.477985574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.482926007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.480058812 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.480224895 seconds)
  done (took 11.273867927 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.60931205 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.610682127 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.620428059 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.609891802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.608012513 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.610509828 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.546303479 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.546001974 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.613024742 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.611937454 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.619137182 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.609564038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.610438241 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.546354673 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.609268329 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.617876547 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.611158305 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.619215195 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.545723517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.610235981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.513091713 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.611910845 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.611140076 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.513562304 seconds)
  done (took 39.590163317 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.143403711 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.636715185 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.722649158 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.603480233 seconds)
  done (took 8.460825082 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.652694871 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.657996662 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.671145123 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.705578272 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.73909713 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.671558094 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.553078433 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.548409543 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.533438225 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.658579209 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.708991067 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.637988462 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.740118558 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.515549987 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.8681868 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.51534654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.516140077 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.657887641 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.706765434 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.725665254 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.5146424 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.656141329 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.654788224 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.639319148 seconds)
  done (took 40.805707068 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.533806568 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.54512812 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.520519125 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.54146718 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.518603587 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.520858484 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.518231962 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.534277229 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.515153429 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.516136375 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.521155518 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.539472862 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.515265315 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.518668331 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.530376594 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.519638426 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.523850763 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.532135057 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.53731295 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.523552821 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.517236305 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.531919946 seconds)
  done (took 34.933268121 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.482472806 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.484373257 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.92136102 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.831014056 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.483805588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.486486654 seconds)
  done (took 15.04569799 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.615335023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.840971607 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.517004432 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.005156522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.148163255 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.518750674 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.511319002 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.886194886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.309260836 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.260602064 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.607808158 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.620729284 seconds)
  done (took 23.201840332 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662291064 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494658504 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502527312 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48838962 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495253831 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43186672 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.577329351 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366057513 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.522434522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847862916 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496888047 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662928365 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840634203 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515624438 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502792779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.469395514 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81381571 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154071688 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496625024 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496830568 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55418402 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508303535 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503555724 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.825895109 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440761986 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496798929 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.839986705 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497280695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935684698 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895238354 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898629777 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503608873 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848350618 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328010497 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67403306 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802322768 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513238939 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505762569 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.48685416 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.498001596 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498846047 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523441353 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885336187 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504329356 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496876104 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496269113 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383433117 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.522819417 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.497998523 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499019045 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899369187 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683631277 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.521921818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498261406 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532101045 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498433146 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.519191302 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715406757 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150843064 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497169717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502209743 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.505675757 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497928472 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505913496 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383181758 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.534657514 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.522408541 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523308795 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49947874 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500487876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548637714 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498766009 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.547520184 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500230093 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511823397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509777745 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501107369 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226836457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51539494 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.506277439 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818979285 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500493185 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501417604 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.499980619 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498819438 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452187042 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525397119 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.476197148 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608094367 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374830068 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808984508 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554695049 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556067569 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.808044585 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.474281751 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501877648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.508736551 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505838906 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546569365 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379502589 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500545426 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.523669665 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848678453 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.79759123 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503837744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.483105708 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141354288 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517026083 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.556201525 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.50334634 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817632815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.370378105 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922492378 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517223385 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561258104 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501758639 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514895644 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517288965 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.532340251 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506164017 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896390806 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.478422501 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505362868 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648460534 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514884819 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50356662 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.562200962 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513281752 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505000182 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.803808501 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512069447 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92431314 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.515051181 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505727719 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.509541053 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515367352 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.511098164 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.814080687 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517472438 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865487783 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50654968 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504481889 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506695579 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.811774947 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.509192265 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.535642626 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855154626 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519977994 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53028133 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902065968 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570587713 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693770695 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562750403 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.521932712 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856548099 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.531792905 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.530146047 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523604504 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513949853 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510753986 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.531772232 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529034943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377566239 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515197708 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514232851 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508095129 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.547520183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65180223 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536099388 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814617208 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.513564679 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533190219 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.536643731 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.508188786 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826325331 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892140404 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.515217264 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666765306 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.145007406 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371701597 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554709925 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.507512653 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.507299986 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.507970462 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507917313 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508553288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509125847 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815216935 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919984238 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506618474 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383841618 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51461586 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527720808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.538532588 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89624358 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.542199815 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508360666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.510412323 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524694306 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521510452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902160952 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728575191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.548690585 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509557885 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.112540079 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537491395 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508855491 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.511524266 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568412785 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.52935293 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532078416 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859595833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507701852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926931909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.518025651 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.557277081 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.50992078 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516947651 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528348402 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.525789976 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541814919 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.820336301 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518917175 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513021523 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159868375 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510493967 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313279852 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532799178 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.521378243 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516733378 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39635131 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512528025 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513186489 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880276815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395855227 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511629098 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149361173 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.51970694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.519080255 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912177729 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838884819 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52747811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.513793619 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943249208 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.815758554 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57212457 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527012549 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518876248 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.486648896 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242605851 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514100013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66858516 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39949326 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521116267 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.520426515 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.587884674 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.533122473 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102694345 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521492782 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514445098 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515074299 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.524963475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545167371 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.520997398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513125447 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400837216 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.521108096 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.163296114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514251777 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.824088455 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912432021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.902529435 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.522627843 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.521046008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.884625831 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913279824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521908547 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.533951909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316632583 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.480818475 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.54497433 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513687948 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523982763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524352992 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965400069 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.538769001 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.523285049 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526930415 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517575943 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518464185 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.514482533 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52489489 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517808864 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177641165 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.512750329 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563356835 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534375216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525917577 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860165668 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.557082015 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38475654 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840726324 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511109618 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581279645 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.540640049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51771367 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.496261291 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516700413 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517065682 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523752427 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824600879 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53625723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.492048395 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.572035033 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814662466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51708468 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.525149392 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876790198 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.523847202 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.533570296 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527351279 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587417157 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527048307 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52680491 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.525555101 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627508289 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661690009 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829381167 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.920459997 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921335668 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120706621 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524967875 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525388389 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.559912053 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695694264 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52250171 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.535560702 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.382784292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391702465 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52901413 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415308399 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929094754 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527995843 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521149932 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520955423 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730829947 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518994699 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870988133 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520442998 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.544664862 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572955611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521966446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530765889 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82701243 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885127501 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521111868 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53106886 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526427209 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.522655291 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933961295 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.825117915 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190529955 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257293752 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525456484 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.528365933 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415304418 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872725785 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520246954 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524395315 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523269125 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.539969852 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.548513467 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.549315664 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537308131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736310043 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908136014 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352692895 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911393691 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.562706682 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.133573481 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528500377 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870973327 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378322691 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.837416476 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403359533 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532974479 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875876395 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667602423 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83193582 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.527853646 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737696044 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.528664085 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.529600238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52461357 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522959658 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.522578675 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907347925 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404472804 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875435486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.54460899 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.530160085 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588053481 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.834546209 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838795003 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.490195856 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828926639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936970058 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542011313 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525488751 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403896822 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936100114 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533591317 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.548021225 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882357735 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.533920549 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580404673 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.302758263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.524646186 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254858945 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.507316538 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573951338 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534542556 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.54440673 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413357872 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.537095534 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201303461 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527236878 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536957947 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881281272 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.548431613 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.537667046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896880113 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.558156313 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.552236286 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847332332 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.411108493 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.543735205 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.553489449 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546576419 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.532341368 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525672713 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582759582 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528210606 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528843368 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.133799417 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.533914124 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528400993 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564758899 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.532449622 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547018025 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.531609502 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52598218 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.554516255 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.534354753 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.522744198 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536609998 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751571761 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260912648 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53062439 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.292459467 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.970813257 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.870617346 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537955979 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.50974052 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.55172903 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53099378 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527031545 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530327984 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.534583972 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2659371 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.53889297 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.930489485 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561176879 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.824541026 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826793757 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546000996 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846970135 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547899701 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58325308 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.506828207 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530845437 seconds)
  done (took 1073.659333802 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.524123074 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.539965103 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.539147961 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.626147571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.55221303 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.651150751 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.551636699 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.545562742 seconds)
  done (took 21.916698695 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.529667984 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.562375844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.531480645 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.556302446 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.52103155 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.226239734 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.525837888 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.557308929 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.573523211 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.527892479 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.536601267 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.364345494 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.55076089 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.536364366 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.529761851 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.556805932 seconds)
  done (took 35.585659602 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.40023232 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.920191876 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.06740969 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.53705824 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.550153479 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.540424658 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.111034232 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.530182364 seconds)
  done (took 31.04742342 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.561648237 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.559590923 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.561206561 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.561498777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.559692472 seconds)
  done (took 9.194933728 seconds)
done (took 1346.070788785 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.555020649 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.557120706 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.554225645 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.555972865 seconds)
  done (took 7.615024019 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.506863198 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.508906335 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.507887001 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.542846685 seconds)
  done (took 10.457497284 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.508598824 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.265062338 seconds)
  done (took 6.166222883 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.126504355 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.133086477 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.126895466 seconds)
  done (took 7.77713395 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.921082982 seconds)
  done (took 3.31616765 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.526094833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.527901139 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.527742948 seconds)
  done (took 8.973389214 seconds)
done (took 45.699171034 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.526147564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.786310256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.689259856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.539663878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.700645312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.691129787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.293767524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.525165037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.551391068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.536839147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.539252303 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.693904162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.339061273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.778716344 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.343156836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.879813209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.699393477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.53591368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.533521826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.532416238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.296116637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.534533267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.534946588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.527272218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.729183648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.676728514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.527458694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.882301863 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.526332853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.541811218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.678184844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.534658563 seconds)
  done (took 88.095346484 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.527190504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.526223551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.527601101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.54143219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.527790301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.529768555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.529916828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.552066363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.527944511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.54867941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.537914493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525266306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.526429443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.546822609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.550390801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.529093678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.554124794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.527703349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.551861169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.52865738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.551716947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.565468836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.528615127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.542209383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.534688385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.52940077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.528578878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.528434238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.529328974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.548323499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.527914828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.529307324 seconds)
  done (took 82.55618302 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.529525158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.544814952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.529823939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.552042058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.528668275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.530728453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.551349442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.530223641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.529783152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.536740392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52963467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530005666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.532920213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.529871781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.532383553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.529339101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.530797527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.529477038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.556198452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.540907961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.531785432 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.542948304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.543493974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.543556203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.536298715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.532333686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.538469312 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.534960905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.536555662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.543948151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.537081845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.532174936 seconds)
  done (took 82.557096823 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.85978622 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.566002562 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.567272277 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.539599344 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.566809438 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.561835621 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.543336272 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.869490597 seconds)
  done (took 16.472761795 seconds)
done (took 271.073640586 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.544670589 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.252997396 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.59517387 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.551741601 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.591048904 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.591013983 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.863846233 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.598993489 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.84991199 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.555813976 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.583491867 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.556527894 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.559212872 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.776334547 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.559542593 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.546886025 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.538257484 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.559979659 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.338920403 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.884164879 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.594461977 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.548375181 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.588933411 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.548182489 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.534005337 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.65735119 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.659922885 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.795532169 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.760124944 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.661322015 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.255560012 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.547870089 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.558475348 seconds)
  done (took 72.007928315 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.555462675 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.565874752 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.567115484 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.567578112 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.567571476 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.568158842 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.557065113 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.569088011 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.567252092 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.565787032 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.566964626 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.567018404 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.565952067 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.566110537 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.566367134 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.54912786 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.557736706 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.569210861 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.555549138 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.55175068 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.568464956 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.567638035 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.567546474 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.566092518 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.567819065 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.569010905 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.567970899 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.569665877 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.568249706 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.568475782 seconds)
  done (took 48.350414394 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.56886354 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.340793616 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.547635911 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.57884386 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.560460447 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.565641274 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.003888484 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.575709523 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.566825363 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.565687159 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.22947569 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.58278235 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.610912394 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.554781093 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.569466201 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.570035897 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.568993306 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.562222822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.339981781 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.587041481 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.992122042 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.576939079 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.006122147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.58903524 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.565790384 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.569424366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.577578964 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.540607294 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.57923539 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.244131953 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.554789893 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.992505891 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.547780482 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.571769287 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.557803963 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.582555506 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.573698025 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.244997985 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.57275405 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.563688092 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.99618904 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.570196042 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.560295552 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.379476608 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.591373596 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.575963186 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.539929205 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.246273915 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.915200041 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.585179023 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.548493492 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.572473707 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.578075326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.565293464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.909594509 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.574622304 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.563664695 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.552857455 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.582435029 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.994506773 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.581711683 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.564638981 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.352540711 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.570817839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.353368889 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.574824494 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.582037771 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.565826143 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.559567317 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576161326 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.391100573 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.59385813 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.575181244 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.214473083 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.342569191 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.559896689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.575049313 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.356496311 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.549719416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.998786997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.579533682 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.558564256 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.006470795 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.583074007 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.582176267 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.578526641 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.57496264 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.698661541 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.99106283 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.319821048 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.394146281 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.573193141 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.007087703 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.58720477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.568253267 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.546761707 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.576640507 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.573337783 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.552420528 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.399755863 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.601003242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.583401702 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.378142151 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.596224142 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.989234665 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.585088789 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.563394758 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.576541751 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.699686811 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.578604445 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.58522854 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.573698234 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.005714413 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.580008323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.576626469 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.37443728 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.282130221 seconds)
  done (took 224.683681289 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.54597746 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.545609047 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.5464308 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.565381324 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.546394063 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.56977895 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.544378095 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.54620633 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.567252512 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.547058324 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.544852037 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.571867344 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.571182341 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.548797581 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.54639113 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.546354952 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.54863946 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.55520922 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.547124953 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.548631917 seconds)
  done (took 48.46518709 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.578054863 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.413454183 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.359294642 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.585056592 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.578429562 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.569887344 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.65303437 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.586836915 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.578481035 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.037129232 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.828860499 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.587164751 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.577597053 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.577853092 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.357048477 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.567058912 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.002625893 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.347528202 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.581637022 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.348785485 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.560695323 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.57936725 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.568142289 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.348819707 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.011671526 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976582917 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.657238815 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.357803671 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.579654228 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.579141524 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.349603326 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.581509702 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.571412608 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.337100758 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.583363499 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.607311866 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.580015517 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.658140327 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.664605534 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.010969831 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.354920343 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.992445478 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.608312621 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.833218945 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.589477335 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.563727133 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.359818801 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.582678565 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.563777558 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.5840939 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.591951323 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.366773247 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.580210025 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.367989044 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.587795697 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.583802731 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.352204076 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.365495361 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.363361431 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.827844309 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.575208202 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.002120033 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.585865074 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.425281105 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.590433881 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.583811671 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.58286993 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.828538811 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.384224279 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.008553462 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.030922857 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.035227315 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.588846808 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.67035431 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.589536561 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025356506 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.677414076 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.11869561 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.053772201 seconds)
  done (took 147.669830085 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.971391334 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.738669561 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.167549868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.404592721 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.318522488 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.799269935 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.733065287 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.92365782 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.569517395 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.728413509 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.551345042 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.751688256 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.508342437 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.683239747 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.761054531 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.781414383 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.197589373 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.561008701 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.520192128 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.522010655 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.56856015 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.749313373 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.22032683 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.875560293 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.560865317 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.289493448 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.583649639 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.338576784 seconds)
  done (took 61.79569099 seconds)
done (took 604.372857137 seconds)
SAVING RESULT...
DONE!
