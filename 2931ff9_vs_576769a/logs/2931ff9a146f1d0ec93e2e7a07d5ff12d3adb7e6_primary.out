cset: moving following pidspec: 3394
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.568634623 seconds)
loading group "shootout"... done (took 1.156252159 seconds)
loading group "string"... done (took 0.409798391 seconds)
loading group "linalg"... done (took 7.753818884 seconds)
loading group "parallel"... done (took 0.146939597 seconds)
loading group "find"... done (took 1.348101208 seconds)
loading group "tuple"... done (took 1.871217914 seconds)
loading group "union"... done (took 12.52632555 seconds)
loading group "dates"... done (took 1.291167065 seconds)
loading group "micro"... done (took 0.197806075 seconds)
loading group "simd"... done (took 4.236954916 seconds)
loading group "io"... done (took 0.967731092 seconds)
loading group "random"... done (took 8.261367142 seconds)
loading group "problem"... done (took 1.606261087 seconds)
loading group "array"... done (took 18.799031244 seconds)
loading group "misc"... done (took 1.408315994 seconds)
loading group "scalar"... done (took 38.619967642 seconds)
loading group "sort"... done (took 3.007267847 seconds)
loading group "sparse"... done (took 11.407866999 seconds)
loading group "collection"... done (took 16.841873008 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534238859 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130801815 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13930667 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124070318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155518297 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122836907 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12673032 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086233086 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.937276991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153443105 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117045994 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.450845422 seconds)
done (took 5.580734727 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.278829919 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088987758 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079954193 seconds)
  done (took 1.234838121 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06635678 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128855069 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067168733 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06774242 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067783059 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06711944 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067049486 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067009091 seconds)
  done (took 1.5981009 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072899794 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068065899 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069144253 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068735139 seconds)
  done (took 1.345496988 seconds)
done (took 5.714261848 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.24768107 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.107980596 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.303297541 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.361818867 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.462243408 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091931265 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074563577 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070657685 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129039654 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.251879075 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116472216 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.191058665 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097627201 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.179023376 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.945739452 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.129827677 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085683227 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.123466836 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093365369 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129911101 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.369385277 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077235353 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083454371 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.071251737 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068322616 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.622438992 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647794068 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140415558 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083187114 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.101957924 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115939533 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.639253573 seconds)
  done (took 10.316805887 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101345064 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098671299 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068694186 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123823756 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099586167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069891008 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074760583 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067979207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088653122 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127536432 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090806028 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107239709 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06594927 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06954741 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083677196 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194839545 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080350525 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080973355 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068139039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079042102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10594558 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078225203 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079152187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07956955 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128414863 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166840752 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096062929 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097717486 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067361528 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080695974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114531318 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126201059 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068300528 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0689132 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123886485 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095551661 seconds)
  done (took 4.530206078 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.111923213 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091571284 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104748784 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.627665174 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067021502 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.154107865 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237290472 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073769033 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.432179616 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122358857 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.154674423 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.121689859 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145732586 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.122604503 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069954672 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.269677093 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119912508 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325327317 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.071136646 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.070232639 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067212153 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077356025 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068953835 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064513565 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079242387 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09214811 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087968466 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.158357578 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.993870217 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.302704628 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.074536904 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161484491 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.087233291 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364642649 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070242971 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.092087887 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.405037303 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12506748 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066132009 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165132074 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131374638 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065331132 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117871138 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080448805 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.07055677 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.073506872 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069276329 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080462657 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080124548 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102066733 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068810317 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066666124 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17118939 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06558424 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068101823 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06929439 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150554944 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06560286 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.148385713 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065938067 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070987662 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097045852 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072562888 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089119837 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121855068 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.346903516 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.012542208 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069460854 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065381994 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.932133249 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081757749 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067615445 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.085879526 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067828935 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.070443058 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065204252 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070073423 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.077870178 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071580246 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069820237 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111076658 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067490826 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070978906 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066969215 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.074014612 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099859776 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066781304 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.471955765 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065352072 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099054531 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067684868 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.079242467 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107424249 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069062916 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.075623117 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069583766 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073781641 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06797699 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071880436 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.0722072 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093929462 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.174923959 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11408721 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.013670907 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073314658 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068956722 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.074007049 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072576801 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071041667 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068579872 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072228174 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07018625 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066555911 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.12030562 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06722959 seconds)
  done (took 21.817350867 seconds)
done (took 38.843696876 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.250294429 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085227262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08545885 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085524171 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085529764 seconds)
  done (took 1.753739473 seconds)
done (took 2.899988139 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108870861 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.065315738 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.104341245 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100523104 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065935283 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.065673532 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099744112 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.066084973 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098689079 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.101222246 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.103214989 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.103266192 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.066008006 seconds)
  done (took 2.309724764 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.073195099 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.083409622 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084140079 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063933884 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072686826 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082801657 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06325547 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081564829 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089307388 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083069768 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083094842 seconds)
  done (took 2.000106312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.07101999 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.082596417 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085066059 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063802278 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.074648832 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08358523 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063436326 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082939889 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087362947 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083237878 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083907559 seconds)
  done (took 1.996476823 seconds)
done (took 7.440723881 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077925115 seconds)
  done (took 1.20357795 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57285474 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.003895751 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081892794 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104768594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197770033 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115882558 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.269738862 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086445826 seconds)
  done (took 8.735044971 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110080959 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072160713 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071694885 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071144537 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072445738 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071726374 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072282649 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072383084 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0721795 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071880065 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072040633 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071646315 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071074613 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073124707 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071182074 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073579272 seconds)
  done (took 2.399970449 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100666147 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098951627 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077276195 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078207141 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076005404 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085668689 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073405568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072275152 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069914236 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071352488 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073724519 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071945105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071213713 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063120785 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072318036 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074521291 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070324658 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072816022 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073310039 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074299228 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073662608 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062575319 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07133224 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072249597 seconds)
  done (took 3.039458942 seconds)
done (took 16.514725245 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113395069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075915833 seconds)
  done (took 1.330339244 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.075960113 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077530453 seconds)
  done (took 1.307638379 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076280852 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060430666 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084099261 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071996807 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061175265 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06085473 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081228104 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061463471 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061677053 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061250079 seconds)
  done (took 1.835014998 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062999429 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070542104 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0676509 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076498272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067921091 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062452762 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0651879 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063085691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070420782 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061610152 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066769259 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081289169 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065959955 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083015162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065508043 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067080123 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068941752 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066457872 seconds)
  done (took 2.390939956 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060839036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06224904 seconds)
  done (took 1.283518444 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066406576 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062674975 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0649018 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065678595 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06226861 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06083959 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062130447 seconds)
  done (took 1.601994537 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.346091587 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118948815 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313390276 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068755488 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077312538 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250757671 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063062568 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067928903 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068288075 seconds)
  done (took 2.572897358 seconds)
done (took 13.486396561 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079193349 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084866361 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094940089 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429973097 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090577078 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066402624 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111830386 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.170160739 seconds)
done (took 2.299578968 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207990008 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.4280513 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.802890796 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065836664 seconds)
  done (took 3.457307767 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328866985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085168328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076257869 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065676769 seconds)
  done (took 1.728663372 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065931944 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069450542 seconds)
  done (took 1.305268539 seconds)
done (took 7.870241767 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06393173 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063392275 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063197355 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063629396 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064204714 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064360204 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064118439 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064114623 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089616721 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064645482 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064319649 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064311617 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064420455 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064230309 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064254184 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064434869 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064170834 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064102176 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064627037 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065007133 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06472193 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064305435 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064754404 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064578216 seconds)
  done (took 2.765638875 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079894017 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065895392 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066714175 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066170924 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067966842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066624894 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066691482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065238759 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066697164 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064922304 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067177775 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066887535 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065164622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067375671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06545226 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067256735 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068276673 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066910825 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066506851 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06817016 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068403816 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066400946 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068304666 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066607361 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067285106 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066863118 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064750676 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066335075 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066637985 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067246907 seconds)
  done (took 3.195391691 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06405302 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059363766 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060483673 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068782776 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05947698 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060526675 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060271109 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059814727 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059739979 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061441298 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061434634 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059474662 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061056244 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059866341 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059786076 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060291296 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064263069 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077181542 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0604765 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060159355 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063837294 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060522307 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059794911 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059433627 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.0602941 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059465694 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06216216 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060034744 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059969626 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060492501 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059393709 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063381908 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06425605 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060117884 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069416686 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064208903 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059928716 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063611624 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061108525 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059330823 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059338954 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059603414 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059493396 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059735096 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068936172 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059713329 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06093644 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060532492 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059762039 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059664853 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059570488 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061903296 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065335317 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061278762 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059282593 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060710566 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059439071 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060230715 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059466738 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059684977 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059084842 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063387411 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061565854 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06024144 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076641582 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061254397 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068150978 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059467593 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060295447 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062680802 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060624549 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075095593 seconds)
  done (took 5.63084275 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084085934 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085641628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064789398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064859024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06033786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060518885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068202132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060166388 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064730472 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079530445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060822631 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064449583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06481254 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064459821 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0606634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06497193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068527888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061140588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060403035 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064139674 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060355194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068503559 seconds)
  done (took 2.648331466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146950617 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066843303 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102645663 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0703297 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068660578 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070590846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066506272 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066487534 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066464759 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066574399 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066711217 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066255097 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068307622 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066694532 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066552702 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066313124 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066783805 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066449712 seconds)
  done (took 2.508970052 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076537789 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065994568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084816206 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066232917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065787804 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065170486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069262276 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070407456 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065407614 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066130278 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070714774 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065323944 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065258754 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065633364 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065343988 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065483879 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065665603 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065884939 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070604474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069577243 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069522736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070202482 seconds)
  done (took 2.689885206 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076972519 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06444792 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080595621 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066841104 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060806504 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060664982 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066861159 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06531089 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066521304 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064772586 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064925765 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060441355 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067044168 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06554171 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06720506 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064941983 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064979353 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06508063 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064883156 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060726995 seconds)
  done (took 2.505459503 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082091392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064001166 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063718005 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070216582 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064115516 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072158529 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069944576 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063260371 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063257941 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08512505 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063743711 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063592362 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06971085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067472549 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063777164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069943408 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069471651 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072284715 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063321144 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063270292 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084037539 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063647652 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069617569 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063351931 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063367537 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063421693 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063690714 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067507775 seconds)
  done (took 3.090194884 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063507541 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063700052 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063572402 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063162115 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064280367 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063241647 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063332748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063552213 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063333753 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063801562 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063823793 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063331682 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063615207 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062942651 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062897492 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063359456 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063353195 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064427702 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063624854 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063686448 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063849595 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064118612 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06352384 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06332358 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063448528 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063241446 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063170027 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063427909 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063083629 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06344158 seconds)
  done (took 3.096953139 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073094511 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071482026 seconds)
  done (took 1.336742667 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063242519 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077550638 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060517972 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07080656 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069639393 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064107609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070063962 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068941861 seconds)
  done (took 1.732540057 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.074771909 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.09563364 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062571372 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063213383 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.072702887 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119038308 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0824761 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071676396 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073928507 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063440254 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062657045 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080733791 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061263893 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072899082 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063643878 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070095045 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069526518 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073708408 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072529709 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060562422 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075615121 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064712552 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061184682 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062803265 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061679104 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067800261 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075604781 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072434222 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06929594 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059121492 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.082711883 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060469704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061946146 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069173681 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072214209 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060349189 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095526449 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061384129 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066376327 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060209086 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071654316 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081606838 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072853903 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077899266 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062181269 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062845076 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060203841 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062355622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063894258 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068779747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060018734 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067490317 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060768147 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062510326 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070113499 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061835085 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066580905 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069298382 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075585387 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070759793 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068747119 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074694359 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068349158 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.07001731 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061596053 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079098779 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062771763 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071870191 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074081575 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061743928 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073521148 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060219121 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059796983 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060501675 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091550569 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062764753 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062184719 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060918729 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060374002 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062126889 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069267928 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066527481 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066844445 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064234429 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076583024 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070829117 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060368625 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069037505 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077727277 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063565239 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061044678 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076017631 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064007014 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060712954 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080185338 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069630533 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062786175 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06351176 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064307398 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073951559 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062606261 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059561859 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068160072 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06275398 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070815241 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066534601 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067771639 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.06070846 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070859315 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066940377 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062889518 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059910141 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064659757 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.062143581 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059947218 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069357816 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.061251768 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074849581 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066953765 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074079524 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075375365 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.07095525 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077710367 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.061822354 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059985965 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.080246381 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069670002 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062547287 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079493142 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060544433 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070346373 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060782211 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063192008 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069417172 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060279689 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.184634207 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062299204 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067896985 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062878639 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063904025 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064851213 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068347352 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072015967 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062158897 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069480932 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061615041 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075308722 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070289621 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065930904 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06621123 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062450873 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072251585 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066812807 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071251631 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061266595 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062436227 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061899334 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071836534 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07023223 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063081947 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06961333 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065133813 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061372396 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061057113 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062441147 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06385606 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064479491 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062047515 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069744934 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070668529 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074712155 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069519097 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068807297 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061349857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060367313 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063336265 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060422671 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066092956 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070414568 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075793497 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071844707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079285079 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061409495 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070708716 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063091781 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076607048 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072154469 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062345473 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066539335 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05996485 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062811309 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070171768 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07135719 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074635628 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074118492 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065264724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065622498 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060706831 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074373541 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061679842 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068522571 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070464347 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066832308 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061389713 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063277713 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06959344 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06471791 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061419739 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076701932 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068271746 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061040733 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073682422 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061068704 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070824472 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060577471 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063853041 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065669737 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064090954 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070895125 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078899458 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059824138 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062310262 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078532357 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063458199 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062807496 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067815563 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07615526 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066128062 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068360217 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071055714 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070008302 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065048993 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069134819 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062396411 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.07096215 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065033864 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071875486 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.0617385 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078566239 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061056156 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.078848924 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062466785 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071201196 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062351454 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069613177 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061766049 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076602138 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062516206 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.062045837 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072512234 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059128467 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070643506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059868297 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064717984 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065784865 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070384697 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062615874 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068857861 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063204224 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069166982 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064937125 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068388843 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070799124 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064925017 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060495134 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06941909 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071205787 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067969061 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062798275 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062812874 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062140414 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071150032 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062913418 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062953235 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069144488 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06595395 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065790416 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062839578 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062705265 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062750121 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070235041 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069106132 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07695327 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067864237 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067022466 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070678665 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059970299 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077961436 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.06082074 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067311408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060343721 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067893151 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070326296 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.06073131 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078006681 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062318807 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067520169 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072301533 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068628231 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063603776 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077544465 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06499691 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069226297 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067600379 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064172862 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066303431 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062490983 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068061956 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070385017 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070110889 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061316432 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066632907 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06865346 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062085877 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070294992 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062079497 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067913893 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0625171 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059518135 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065491359 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070605665 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064489158 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064894345 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06063842 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05916109 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06130503 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068970815 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06506899 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06800806 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073751038 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05919862 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061544348 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060372674 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063288559 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07655677 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069186427 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068074581 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065639547 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05969853 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06251312 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062848051 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061075956 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064676334 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059715966 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060232777 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070266484 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062494041 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063992986 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061037966 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061686362 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069202295 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066159969 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061479153 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066144006 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060750959 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064665121 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059737015 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062560257 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064497718 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059833604 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063839684 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070303476 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075409544 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065667688 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067437331 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061984543 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06643156 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07369698 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067481465 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062183197 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0674499 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059415545 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07847777 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06804636 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067549555 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068254813 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062607531 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074316633 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063134967 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067910363 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076426919 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061126711 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067005969 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059461365 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076766806 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066106039 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058856442 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066841148 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066743451 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064707213 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070868251 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061449929 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067527851 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065188049 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06250072 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061702943 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061679688 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06716777 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074503048 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061544611 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064428649 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067011149 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067642297 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064070067 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070548259 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067524271 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060798922 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062139082 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062683359 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061320077 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069607307 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060934934 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064820118 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063251316 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059585846 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064812486 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073877906 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.299072299 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070900244 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061727715 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063182429 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.080540771 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064916367 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.067257485 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069789934 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072727091 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074446136 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073330557 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079324734 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063548799 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068198983 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074390569 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.063577453 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.062974873 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067140682 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064189106 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071018638 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071534391 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068627341 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066803228 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068538778 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074339045 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.063759101 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066166638 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068186098 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.063046761 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070971907 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069902063 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070333117 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063416551 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062350495 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064207375 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071536004 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067652781 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071905633 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062633339 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.0703166 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075936102 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068155093 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065618327 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061641204 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065347156 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069620952 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066262513 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060422892 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065613931 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064897515 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069550083 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070413979 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065018025 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060656182 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077045425 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068771417 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06958548 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063356819 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063951677 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061860461 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060845769 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071876096 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061431573 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063295729 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065582477 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063352643 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077520553 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068643121 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.079014066 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062836569 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065357487 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061085174 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069636644 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065682465 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061472634 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070917072 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060743408 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079062374 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072560951 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068205731 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061307695 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065778062 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068467755 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075906895 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069763743 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07069803 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.065441197 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070483684 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063534903 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071578035 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060907117 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060293064 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070541182 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069405292 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073523884 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061114866 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070653429 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.0633569 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068626728 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06875955 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062973884 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063189643 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063507175 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070364581 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066074991 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070953099 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065414097 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077900689 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062660879 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071360216 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069952496 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070962115 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074493838 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073574818 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07190491 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062277593 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0677799 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068619709 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062448794 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065695998 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06520651 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08471594 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063222504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063508857 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074957706 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070006909 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061465638 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070181609 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065512507 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.0713854 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062798387 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072571511 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066676642 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.06252103 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065249939 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06531821 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059793875 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060613399 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061402532 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070104983 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.202195981 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062171674 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078237357 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062593811 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069030971 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07079574 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066213144 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063068266 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059815146 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063380097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072325947 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074925269 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06393885 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068447121 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063573342 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071459612 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060171218 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069550829 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068394052 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068660407 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061180808 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062524002 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074594984 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07463421 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065273876 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069990082 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069422136 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062429006 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084436297 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06889189 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062421284 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071342286 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063611558 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060406227 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060241225 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062842678 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07237358 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060618504 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063551623 seconds)
  done (took 41.718322228 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098627039 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062621545 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061608907 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06123063 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071595417 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062309868 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060910199 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061885943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062125692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064341886 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061528393 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06122514 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068709455 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076282558 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071511751 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065481761 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061266074 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062315242 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061537858 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062397274 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068726507 seconds)
  done (took 2.713846598 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068364998 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076922612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074169729 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078440964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069927384 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06633363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07341943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066154723 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074139156 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071765563 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074434187 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066020053 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071334571 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07120184 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071864079 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066519446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074226648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069716997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066436136 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073360138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066300398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073518465 seconds)
  done (took 2.865080654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063286264 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062015699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069360077 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060659085 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060430446 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064978577 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.061427132 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065053772 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064534323 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06524541 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069001229 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062203455 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060803475 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066420252 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060731136 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.062027539 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105359897 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061878089 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063097072 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060799233 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064661661 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071618504 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060595405 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060947105 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064675924 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064853107 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060865994 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.064587357 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062173161 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064589605 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062484093 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060469494 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068983314 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070584279 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064969769 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064763283 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062716538 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064415996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061167356 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060789578 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069770654 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062338861 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.06147665 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063587095 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070749673 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061163919 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.06057913 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069210559 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060795582 seconds)
  done (took 4.474024177 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073507644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110049132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067372089 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090528074 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07501198 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068472847 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066625182 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09200123 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062487268 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063239881 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07704078 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076684995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06466462 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066221508 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068230977 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064626945 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065480256 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064039273 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067441061 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064525091 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067667192 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067884179 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075358687 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07568629 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065996323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06399579 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064156934 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065831187 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075435173 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068722387 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066199154 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066837615 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075492837 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068492495 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064082197 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064918701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076649401 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064699946 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064434997 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062852893 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064384704 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066250139 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068622999 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077070532 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064884802 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068681456 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064725407 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062840123 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075693852 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064231863 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069245148 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077370371 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066511503 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065561342 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066632952 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076033428 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065395254 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063350958 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065013947 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075833561 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06316801 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065736561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076466685 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064003755 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06879882 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076702137 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06870778 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065765731 seconds)
  done (took 6.170628267 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073121154 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09384607 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079585835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07955802 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072565819 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072271278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072273406 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072452571 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07242282 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07632435 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072435544 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112342419 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068341256 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073980716 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072921765 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072022457 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072200232 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072182811 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072418042 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072833299 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072611411 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078514016 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072078872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078751455 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076483913 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068715211 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072090538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07223858 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078109129 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072344713 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075643197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071693902 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072398329 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078511181 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075415804 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07144769 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061926246 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071637751 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07266982 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07200635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068058118 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078722285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071427368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067997982 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072424338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071652573 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078117054 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075669696 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074153765 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075866574 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072245453 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078230729 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071931225 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072403393 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078742463 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081752804 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078144048 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078767596 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072647495 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078994146 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078449506 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081174777 seconds)
  done (took 5.986429323 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076807164 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068617887 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080303017 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063643881 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060620609 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070976793 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061212975 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060706101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068951535 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068779697 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070924494 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070874685 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073651832 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070794181 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071017868 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073476847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071296866 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070595358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068685702 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071370195 seconds)
  done (took 2.727143349 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074979318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080046705 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066603625 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071143811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067169247 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070759816 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065979184 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066667674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066689024 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066900324 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072705499 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072175481 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067070306 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070993481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073630175 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070770804 seconds)
  done (took 2.446609264 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067262044 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068829667 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076803187 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062757891 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066271776 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061772616 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062198809 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06094856 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061952153 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075346651 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062603046 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073331588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062375134 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061661067 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061584065 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0678947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061820005 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062391623 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062270623 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074790212 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068871637 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063650761 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06600903 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062064068 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067378139 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069446807 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063907144 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065625006 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062295029 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063622386 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067841346 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068546627 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062068922 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063086453 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061855259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061999244 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062468349 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063301819 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067838474 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062459221 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060614994 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066783421 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063006294 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063106596 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061543549 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063016174 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061174807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067863943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062473629 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067615389 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062499674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064871943 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063348721 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069859108 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065287719 seconds)
  done (took 4.895993468 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077455122 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066623385 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060988778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060613624 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066806555 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066502008 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066400194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066113258 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066839433 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078283981 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06662984 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065825069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06747192 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0664688 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066919114 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066431627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060707094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066585501 seconds)
  done (took 2.540546951 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0711102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066465836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070657044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06594959 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065584734 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065849023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061570756 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060782497 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061224291 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066159773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065566444 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065882389 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061593342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065299274 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065723257 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065776343 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065498772 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060901907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065864936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061335424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06565138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061317901 seconds)
  done (took 2.755825014 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093073212 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082312406 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138057877 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077837533 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085638984 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.0707579 seconds)
  done (took 1.878628144 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091208538 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096203402 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066754167 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066352758 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071733236 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068939586 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068931417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069084562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072968036 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074321056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069580937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076398616 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073431425 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075953358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071598497 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071577341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069390252 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069694239 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066068162 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078454463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069773264 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073668442 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069745416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068957038 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069519826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075406425 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073012719 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074994276 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068761091 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073990141 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071765974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069312316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0735934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074287661 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066065201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073354983 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069519068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078931699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071509025 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075675951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065977031 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071514018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07359008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07353056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073856827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069594772 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073609357 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069674621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070203002 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084500328 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072227304 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075959715 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071787425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074365077 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073712417 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080835752 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074740568 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075712188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07145752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075269911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076215641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071740305 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076273516 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074944598 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071749417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075884209 seconds)
  done (took 6.164214886 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103150281 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066812839 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070107703 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075295484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076468692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069440464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069635646 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069373266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069383783 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066593994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103949957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070017789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076359288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07632067 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069338033 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069250319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07045634 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075499601 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066444236 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080520316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069397853 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075427759 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075603966 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075479001 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074456493 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071118347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069215281 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069304993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069481021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069825974 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072913059 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069245748 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075630033 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06602264 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07540408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069248142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069498499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073501439 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069207396 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07155138 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076051815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078330445 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069000603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069234748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074295157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069376004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069007673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065827484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069578643 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066078836 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074753644 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074768608 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074716161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076189127 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070090331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070031555 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069828989 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069757876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070102997 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071704398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076094254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069931175 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081407194 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069816495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069701309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076088462 seconds)
  done (took 6.150710842 seconds)
done (took 125.860156295 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196500013 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165020725 seconds)
  done (took 1.685555109 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072993813 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102982017 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080902274 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128967246 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070088704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102706074 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101939447 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080539268 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069939115 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069377372 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069572737 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071980687 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132492841 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069715161 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070208848 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072525931 seconds)
  done (took 2.710666065 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104235045 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.212091902 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108382374 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068107253 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103359989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075432855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068852733 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08382432 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074549413 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069913752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075107498 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073940919 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069819698 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073356279 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073756636 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075562875 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069570486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075008328 seconds)
  done (took 2.902715583 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100963847 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092489742 seconds)
  done (took 1.543367504 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17438214 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132177546 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202621079 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332817656 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.14479412 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.41436292 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134829139 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.134225355 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113507102 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.129802597 seconds)
  done (took 3.260434461 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102192381 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192695258 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294515478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117460056 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074683609 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105535473 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118989008 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080436219 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079584703 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078855761 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078992018 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076375012 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098680084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075019444 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074210279 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075728182 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101726619 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073637211 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075561859 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074534186 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102757825 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069188144 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075098192 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073582676 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077401542 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077372397 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07006587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068965737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074454739 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075273281 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076774306 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.103096972 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076890977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101480272 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073396228 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102611175 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076381212 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073152154 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07473475 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073067655 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075946371 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075833121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077596328 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075781819 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070101712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076156646 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070716039 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0691078 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077507846 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07019718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077938936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076896793 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100991858 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069666672 seconds)
  done (took 6.08237522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10854053 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108860413 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072049564 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113838025 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107437858 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073290655 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106739839 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100419116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108260395 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072287511 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069980417 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072321381 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081556696 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080556489 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117208539 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110276474 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074570144 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072172533 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108934961 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108850325 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069769876 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104703619 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099006318 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107506171 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068857964 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071260364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070173154 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071971094 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07509915 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077618669 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070218404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080114575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083103349 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076739725 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068534627 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069194961 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069104288 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078407663 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078709936 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077137304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076046981 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068858783 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069180377 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070589239 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071414286 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068516605 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076944847 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078511792 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076425908 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069643227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071496929 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06941481 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070603679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078165432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075856803 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079343138 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077828399 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068958788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06935973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073861279 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078172242 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07799484 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078004919 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071588753 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077102911 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06947676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080614043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082062804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069268022 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07082073 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06958431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070095595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070671357 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075509425 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07541557 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070991525 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069459479 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069358071 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077201082 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076026381 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068789452 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074967009 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068025082 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069653389 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070818935 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071216483 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075978194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078698502 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071050561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069587385 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069933228 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069348129 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06775053 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074961208 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078489185 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078229598 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07748887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070648406 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07806415 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076891041 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071066559 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078181606 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069738974 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071519763 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071182144 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077749883 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075541947 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078222095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069904289 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06920551 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076182204 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078697235 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069811228 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.0772294 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077580649 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077739968 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068398604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.20556087 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069468905 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077709625 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071083321 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078370375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070706911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078410551 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070680116 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069853532 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070339701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078547931 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071656877 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070055375 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071006589 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070612219 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077527531 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081214125 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071687692 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076983024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076809951 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071934147 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0763713 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069817047 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077560608 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070649718 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070830257 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068916016 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079867964 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069847339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069548881 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069827433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077389353 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0694264 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07846063 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075994487 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070067998 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078825482 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078224357 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076683729 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078589708 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071502142 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0707159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069125273 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070018235 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075687559 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078303678 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072288488 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069805512 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076644434 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078448201 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068860819 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.0770391 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07655394 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076563024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070326245 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07041529 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078873872 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078756175 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077420229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075875818 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076647231 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069469361 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076481808 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076127549 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069471348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083231636 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068979226 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08065277 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077483487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0753754 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07661781 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078478081 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078125848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07863347 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081521244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068761422 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06888432 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078309039 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069389455 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070112999 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077217043 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071744511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071012002 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081359577 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069820158 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077468014 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068201559 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077687735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068104884 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071553262 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082598489 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069326617 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071297314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078270663 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07244803 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076342562 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078204966 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076840662 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069083031 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071480104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078011526 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076567838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068967804 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069223122 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071419335 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076471074 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07558024 seconds)
  done (took 18.545113942 seconds)
done (took 38.088750552 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2026174 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153439961 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181398963 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113885332 seconds)
  done (took 2.099880432 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.104461916 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096415232 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.085286763 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064437672 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.091293989 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064379077 seconds)
  done (took 1.890187068 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288561584 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197078201 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176336947 seconds)
  done (took 2.045760729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20409693 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192939026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456458687 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.490705224 seconds)
  done (took 2.822633524 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.137206 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080660173 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06376513 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080008975 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.119974412 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14422769 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09007289 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113999915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07402366 seconds)
  done (took 2.342920675 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14289457 seconds)
done (took 12.750062671 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108459933 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115641302 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.149033464 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071901333 seconds)
    (5/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.274090027 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123825378 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068262466 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06954334 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192293631 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090682424 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075200425 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103659329 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074272419 seconds)
    (14/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.199080151 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082648148 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073259476 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070760446 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.174082666 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08699378 seconds)
    (20/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082483011 seconds)
    (21/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.189975033 seconds)
    (22/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.156343377 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083203895 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.172355785 seconds)
    (25/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.162454433 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.165261728 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073255408 seconds)
    (28/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073676933 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188701709 seconds)
    (30/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063971993 seconds)
    (31/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.137222197 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102123024 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.190993002 seconds)
    (34/309) benchmarking ("sort", Float32, false)...
    done (took 0.132062516 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074316337 seconds)
    (36/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.084117353 seconds)
    (37/309) benchmarking ("sort", Bool, false)...
    done (took 0.148717421 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155480825 seconds)
    (39/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.090524406 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074998861 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074923662 seconds)
    (42/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064379305 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071637713 seconds)
    (44/309) benchmarking ("sort", Int64, false)...
    done (took 0.065543197 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.169417451 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07226834 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132837357 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095706776 seconds)
    (49/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063762631 seconds)
    (50/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072984096 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.193502504 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064081833 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063292584 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130949422 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072973541 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082334841 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071188842 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074504933 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086976868 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064499485 seconds)
    (61/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.134925503 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199552002 seconds)
    (63/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073306357 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064649306 seconds)
    (65/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07557705 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086667744 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117260551 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167169727 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.210214354 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071580457 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094613191 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130767521 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063753258 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064081411 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162868922 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063721288 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.092731644 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086431938 seconds)
    (79/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.138110925 seconds)
    (80/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064693049 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088099063 seconds)
    (82/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07576703 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133475754 seconds)
    (84/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.142523704 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189435985 seconds)
    (86/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073530442 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159263253 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072924455 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071102653 seconds)
    (90/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071037306 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064644458 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079920061 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063754784 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07342603 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.072103304 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.329694943 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091523108 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087352329 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066788272 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.179942332 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187534555 seconds)
    (102/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065126976 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 0.131725579 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074029995 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065694781 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.136279381 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073476446 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157388461 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072515157 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076618928 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06469612 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179099206 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089896087 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158796938 seconds)
    (115/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065876512 seconds)
    (116/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076799688 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065591468 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155404814 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.201997763 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115857765 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086123592 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120820524 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197912437 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075797921 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074185973 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087283715 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07311092 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.203734703 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073237269 seconds)
    (130/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065256245 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135439895 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075194422 seconds)
    (133/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073356611 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065703945 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.175534288 seconds)
    (136/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093291371 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.081762508 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090503899 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088240583 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.135277504 seconds)
    (141/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.164505197 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066826528 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189100463 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073101478 seconds)
    (145/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.064170427 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115998091 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142826947 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106515371 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190283559 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076026641 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073927954 seconds)
    (152/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064769733 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063532691 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141836291 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170606377 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063292497 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08836078 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164513234 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063871237 seconds)
    (160/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063193854 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064258384 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064668695 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071227202 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073298326 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065351496 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138874717 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.176020079 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067432959 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066371125 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063910009 seconds)
    (171/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071746328 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109482965 seconds)
    (173/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065354129 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064607308 seconds)
    (175/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064538344 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065246903 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117971474 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063653408 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162538254 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.184120571 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06424262 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071380621 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13535381 seconds)
    (184/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063509898 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065283621 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065330104 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063845902 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063530032 seconds)
    (189/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.190456255 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064162879 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065719404 seconds)
    (192/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064055031 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089400604 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064334348 seconds)
    (195/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063628238 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065906835 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063817495 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116226029 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064911244 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091476482 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072809612 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.167068309 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066704319 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09043719 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064801531 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076371454 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1214525 seconds)
    (208/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064863318 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071162167 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064064109 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124324963 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.328785529 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065680914 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076915788 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074302409 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069176477 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136633259 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08654095 seconds)
    (219/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.16276555 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163495817 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06436764 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065400585 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064182481 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073065462 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088172899 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066062088 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064416456 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244629547 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065122017 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064774004 seconds)
    (231/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067555568 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.079179102 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063990197 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089864554 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064465363 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064609496 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064491811 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.180625063 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064471088 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066195124 seconds)
    (241/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064760007 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072637157 seconds)
    (243/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.090161261 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06369305 seconds)
    (245/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066230001 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076855111 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064739165 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073288849 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065547097 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137609877 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064056476 seconds)
    (252/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072795686 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064507924 seconds)
    (254/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065592582 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116889296 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187035298 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071829176 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066044864 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136040131 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065993711 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070069809 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075552568 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071362334 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065043735 seconds)
    (265/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064144272 seconds)
    (266/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069097022 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064633188 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066652715 seconds)
    (269/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064341374 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072906185 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078933879 seconds)
    (272/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069106443 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0666002 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091061705 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071980006 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066043967 seconds)
    (277/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065589806 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.127242997 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065314762 seconds)
    (280/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06540557 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13154313 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063912931 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063591898 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066717316 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067443577 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065235403 seconds)
    (287/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065524921 seconds)
    (288/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065182554 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064612632 seconds)
    (290/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072563544 seconds)
    (291/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063305091 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073471492 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065866363 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071589515 seconds)
    (295/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065763125 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170057423 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075462601 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063765721 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12190847 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06489426 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065695389 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091960473 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065116316 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084350956 seconds)
    (305/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065646856 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064660095 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064515094 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064473495 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065357202 seconds)
  done (took 31.925617698 seconds)
done (took 33.3271298 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085167921 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09545082 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072271755 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090800939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080349527 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095284916 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072151194 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07686633 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079609817 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078330477 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078274996 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071027411 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073853106 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074089433 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071872486 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094034052 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078180752 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07284844 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07326959 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064106818 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072624536 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065016777 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064223118 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070676715 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076147488 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071743394 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074725026 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07350268 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064901711 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065185284 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070302715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073227252 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064716137 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077028527 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073155371 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073163248 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074065215 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076393045 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064517146 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065579548 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074904991 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064854383 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073621118 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071570648 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069574015 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071547236 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07331918 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076750955 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093720458 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068618096 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074958105 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076478572 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07627372 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070186948 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070319343 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072903623 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070572181 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094217054 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072804814 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068414305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074881478 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073381802 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070864855 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07341017 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072752657 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07507184 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077212364 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071177463 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07478503 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07212156 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064527582 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073143625 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069278376 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06714974 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075519946 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077896613 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063903824 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069138115 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072632994 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072818604 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06465111 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068305343 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063859037 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069341805 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068221275 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070857381 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07005484 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072602378 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064191931 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072832633 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071901018 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072443331 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064260299 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076988969 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064511078 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070605215 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065137621 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064529865 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063838317 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070181753 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064156081 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068350474 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073435144 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063969666 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069498076 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077750294 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064210904 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07244003 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064164338 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064465225 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075887114 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075144635 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064838167 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068622586 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064617111 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070182156 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064453005 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064546843 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064419271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064611831 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06922364 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064402173 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068272121 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06987178 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076759344 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063984767 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069007444 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068063187 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064283943 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070982695 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064581542 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064413911 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063838132 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078167046 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068415762 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064696267 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069741458 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068310177 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073004752 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063615137 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072972735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070181477 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068901487 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070784277 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063737602 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075595794 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068573491 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068122868 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063719151 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064358245 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063613971 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063990069 seconds)
done (took 12.350762968 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067435315 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.112269465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.088976736 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.088335215 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079606042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065952445 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071103296 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086129144 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066833817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.0914776 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083717276 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085467806 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.104452096 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064260438 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065437327 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066502906 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066581907 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075003257 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.088991459 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086204455 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101906755 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06549216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08384638 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083832433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080807652 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.0873707 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066251326 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066401678 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068318944 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08382837 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088589273 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068346182 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066293545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08542487 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081311501 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076482354 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065579238 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072691827 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065915522 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064976853 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06675086 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.082883985 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072897981 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072846066 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066252653 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072878129 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066680298 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079098805 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084140971 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.072836015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.078889297 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.087321664 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068631954 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.079882488 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064705251 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079328055 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.072361451 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065945971 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065720919 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070239625 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065857295 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067748709 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074494907 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.072596181 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068991487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078295668 seconds)
  done (took 6.480835246 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085359889 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093476348 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081055942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081294353 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064517053 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065357722 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065757612 seconds)
  done (took 2.035728821 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066926027 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08502346 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089129839 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088726424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080569129 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089804385 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066755306 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095012453 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064555876 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084597938 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.118343565 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088614521 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069281156 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076850976 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066100718 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.08038272 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065655821 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073418602 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.080929111 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088025798 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069758261 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092598533 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078668933 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066174986 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.092342676 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077347314 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065172089 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065976366 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067239137 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06730493 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067022117 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103985331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076627667 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079494478 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067061131 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065835733 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078746233 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069427019 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.075643852 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074911486 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077923267 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067316195 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064657492 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066990005 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068205084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076743981 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064515168 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066867021 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067059174 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08370035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064713768 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076835494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068932219 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070885731 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071657615 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070734751 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073431646 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067410554 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08388809 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073681954 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067008419 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081655319 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081236228 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07793502 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080863657 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069997349 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077195774 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078047269 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066781648 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067710341 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067731891 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080941762 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065581975 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067766597 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068739009 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067511662 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076779404 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088329265 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088336289 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077880818 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066536614 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067296213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076643632 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08866642 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070623254 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067227647 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069150683 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065291796 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069765846 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067585207 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07190878 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067001425 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074263301 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068442426 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069532683 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080901378 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065998948 seconds)
  done (took 8.733938483 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06901394 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066502298 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068813724 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066797562 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067646174 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067504388 seconds)
  done (took 1.936869065 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089429611 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067054096 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08032095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067526719 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100827309 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080872144 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081462895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075607208 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079353741 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079414578 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080716255 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084636538 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.084222498 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068760654 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08018986 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069015837 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.080523454 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070619023 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078681193 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069480093 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078577885 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068580067 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068573165 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085285306 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069859445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068066528 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075181756 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078866163 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078974093 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075429152 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068633587 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070504681 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073822732 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07452735 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081089806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076271359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067043405 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072696085 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068703504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069324124 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083626682 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068939216 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069864009 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072746903 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074727199 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074269648 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072546841 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074987069 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.079910417 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072585237 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072330747 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068268968 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069468708 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07268953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074220457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074627685 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072367654 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080824907 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068866823 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073961337 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06698997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069297785 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074774682 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069762708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072762447 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072144617 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073699185 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068470307 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068704333 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066885315 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072362612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066719882 seconds)
  done (took 6.847592452 seconds)
done (took 27.540990889 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.955779734 seconds)
  done (took 2.432034582 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60028394 seconds)
  done (took 2.11285858 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.287973752 seconds)
  done (took 7.805132576 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391504716 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.458164367 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.73132001 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130886275 seconds)
  done (took 3.247981626 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.679487255 seconds)
  done (took 2.198017238 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.222659971 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.213256102 seconds)
  done (took 1.960645424 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.341165857 seconds)
  done (took 1.84979758 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.077028548 seconds)
  done (took 2.594205558 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2341768 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158628002 seconds)
  done (took 1.913704814 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444770053 seconds)
  done (took 1.960038126 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.140201651 seconds)
  done (took 5.660739743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231260986 seconds)
  done (took 1.78009407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231649027 seconds)
  done (took 1.748042563 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70657087 seconds)
  done (took 3.222816255 seconds)
done (took 42.00808842 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081945848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0844353 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083515469 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080938054 seconds)
  done (took 1.832555047 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.073386859 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070148946 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072614672 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073681317 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070490031 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071422598 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072644325 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070011309 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07056292 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069887915 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068184067 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069717828 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072107005 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069247594 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072637924 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073769869 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069971956 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069867335 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072438573 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069767423 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07239792 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069283252 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068523189 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068592092 seconds)
  done (took 3.227945867 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077816305 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072517557 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075541532 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070745769 seconds)
  done (took 1.82503578 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07515757 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084005831 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087360024 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090626476 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074821021 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076093539 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082629052 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084279098 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065165877 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086717526 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067626058 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065774516 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066663253 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084354102 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083155497 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062394639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0636351 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075998952 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075312498 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077472832 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067003083 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065319769 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075215833 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075148885 seconds)
  done (took 3.33588815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082635692 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065271594 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082337574 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089909976 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091577954 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064654506 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080188864 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091629441 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133925106 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065118641 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070600092 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064775533 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102277497 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065374143 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080467287 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106764415 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109827322 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069251233 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096569148 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065099555 seconds)
  done (took 3.212909407 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083035187 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068816038 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069029762 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064420428 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074815853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07197302 seconds)
  done (took 1.966172732 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067632161 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067331913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067019668 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066007198 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070929135 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06898095 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065393527 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066949281 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066946394 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066407421 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066518657 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065460103 seconds)
  done (took 2.336866285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.150222661 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068343547 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06935569 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065676662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071477069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0669608 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080893803 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06826933 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083810348 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065790049 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065614069 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067733895 seconds)
  done (took 2.457499944 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107544796 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1900353 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100893035 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072521938 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21375965 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097406022 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091005292 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.127638083 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093085982 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069584062 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10463884 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134462237 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105138274 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.126955422 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09320114 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147885897 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155671856 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100579477 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118801596 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085344554 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.07064035 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148191139 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070014297 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096028749 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129265782 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.1029081 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115520455 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134676135 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094262837 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093085922 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096726041 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074535971 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155663295 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084322545 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.114143582 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119092376 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129365115 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085680198 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085136545 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162196701 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155923108 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128283824 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127167353 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13404511 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078534234 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.110115202 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08544213 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107174153 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145794919 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100800189 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07603915 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108237405 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11136594 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274648855 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.09936843 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086367594 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17035805 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.122071397 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118205583 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08041841 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107369923 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.103725472 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108189993 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165529016 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142358192 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101477473 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136664988 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122069789 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100075043 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.101383312 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.113566043 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087313256 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117673616 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119970191 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141602386 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119538925 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122090529 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.107999811 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082079478 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109665499 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125684436 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094432798 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115217155 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157155637 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111975424 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09108358 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110689194 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.138051037 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071892564 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157522897 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092675551 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117833977 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10055925 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14200814 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101927759 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085158187 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104341768 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142208582 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101302477 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128405851 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098645871 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116526203 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096456556 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129869574 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082081084 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101418237 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106175535 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098728193 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.214349912 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106155958 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156124172 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11676133 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076428577 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112061891 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097191743 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077468538 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119536356 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141398555 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083018058 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076317446 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150812881 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.096401435 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117433541 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110903428 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.097321238 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130899093 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146073561 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094812635 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090745132 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075907369 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183777701 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075909248 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143111963 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085280439 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123771129 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103472225 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134191844 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139488328 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095064041 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078524355 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105772324 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.113483845 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1017337 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112945952 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076263904 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107712091 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148368012 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105191922 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090567666 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095679567 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070938924 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119898669 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076994096 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096918001 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096494567 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094257539 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.092967476 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146252345 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.097162243 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112439838 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097537857 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068206069 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091281087 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155699232 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082398061 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108559861 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131346927 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240222243 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069245841 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.122007457 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075144159 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146951343 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.112968143 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105956703 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079516593 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125959066 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069602943 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0744165 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133532957 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104236666 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101180724 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.136667175 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10491647 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.112807829 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.107770571 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.103544379 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100017476 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105480563 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.109137432 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117803737 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086018948 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150318946 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096370048 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078434185 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088312651 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078992094 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078469812 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126941183 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154255321 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111764735 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100756416 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105581257 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117655354 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107515963 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090543081 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079259819 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134655224 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07573528 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074556912 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114656332 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112377606 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090035823 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138804201 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080066747 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137228426 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12361878 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094585029 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128471729 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069863354 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071482184 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082717396 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113496189 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118922021 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080172271 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078566939 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137382024 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13595373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11618845 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246226922 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070295571 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109253512 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142202773 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113460102 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081459217 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109899253 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085709144 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128794848 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096378358 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166807332 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104757003 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113347832 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091111779 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079557536 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07416624 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097734249 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129979443 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092460736 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08173348 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069154522 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074474737 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123119768 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091701555 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115803896 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108975858 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134984488 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07396019 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103109154 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111190272 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109642689 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111681698 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109223876 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095315745 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090973181 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107850204 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121967485 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074340639 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154829716 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130419683 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080452848 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102243248 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095426796 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110037673 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107281335 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115346521 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109343581 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127581797 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124934776 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102642683 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090436004 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097531843 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096183427 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.094745769 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08129544 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104215604 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119042536 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102803 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107963566 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094646269 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091527131 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111391275 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111669001 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232353608 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.117558471 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156696154 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098913803 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157579642 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105238365 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108458538 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104323582 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112772189 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13060749 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145986552 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071953603 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076571068 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072683173 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12762522 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079857822 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116663082 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078234346 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106416308 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125804699 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091043359 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06827952 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100531455 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090509175 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.095211368 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144123882 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110513289 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074098857 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104408513 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106334413 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098346588 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158433148 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098248174 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10018492 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073350483 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121153 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075368686 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1150205 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14058505 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081743254 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.08364655 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.0710489 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109701799 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101849198 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115439112 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090032417 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1007892 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118370623 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13705464 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103635091 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117483513 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139456892 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112247425 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094606204 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160689175 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137050295 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14373576 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081129105 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.088161142 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105800459 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247690695 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101664602 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078660125 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079698609 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14716229 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126273274 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06974318 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10252573 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08428286 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089076367 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116574593 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117407768 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082888058 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131667292 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075404404 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108006278 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09552044 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126579132 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121380584 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157598885 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097506602 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090150802 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078587642 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15361877 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.082137624 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132967878 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124938629 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103399704 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069954925 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097378856 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125688063 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.635188171 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107006979 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075405436 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135643175 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105106405 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160787475 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092888472 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117856779 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109470785 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101680941 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094846423 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133949131 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095700763 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108833602 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.172390666 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1226733 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106272856 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074726119 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085997392 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074654779 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.090493782 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082747818 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100311415 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107846703 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104541288 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104344065 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.08915073 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106772298 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262156048 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111429048 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.107632849 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091620656 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139529753 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106607435 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129401748 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127578995 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079273553 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075238452 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.107607743 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139911202 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09674875 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093755418 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079166369 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.091753376 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159173234 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142120171 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104292878 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101378832 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091581642 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101597123 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114467013 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118064986 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110061046 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086476249 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.101242818 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103682918 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078904148 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074873761 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096867548 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.0706427 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089902954 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129482076 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108169933 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091063532 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10353489 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079296274 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10880194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109350196 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104152717 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077136771 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077183983 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076797047 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.117535419 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103105333 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107657057 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113668693 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147201415 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101499887 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095632582 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079512606 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.219093128 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0906466 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097281651 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109920397 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076638076 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128646367 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090559359 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090082513 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096753179 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101359519 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16009322 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22810181 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110284072 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114660016 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11668735 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103373927 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10742189 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095806931 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094040186 seconds)
  done (took 54.825032442 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103292423 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144581661 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.14653032 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080787452 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094831943 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119680858 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196642056 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18644634 seconds)
  done (took 2.707055206 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.077494786 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094503651 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099649468 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081127618 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065655687 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074343867 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223007382 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079499375 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065128949 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096152057 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075720262 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067418725 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414024907 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065377501 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06642281 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074526892 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066334552 seconds)
  done (took 3.415465362 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369389798 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.586076844 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350948524 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074450275 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.512897144 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090390951 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.951720254 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137919012 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079643478 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494263889 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.363272947 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125706664 seconds)
  done (took 17.769752568 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083016352 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078896836 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088583285 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087761317 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077305907 seconds)
  done (took 2.048845734 seconds)
done (took 102.495766629 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082732172 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.190467059 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066623915 seconds)
  done (took 1.920901687 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.09091579 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088915784 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087761153 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.084265901 seconds)
  done (took 1.988592191 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076124761 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077168572 seconds)
  done (took 1.7817302 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225931014 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171876191 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091562777 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084529259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081219806 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081565353 seconds)
  done (took 1.882063891 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073717564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074106181 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072049339 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076680301 seconds)
  done (took 1.927360162 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07125151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067290374 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069505895 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072728957 seconds)
  done (took 1.90925561 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085986863 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084716326 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080778682 seconds)
  done (took 1.888249239 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100567077 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095532343 seconds)
  done (took 1.834223521 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08200157 seconds)
  done (took 1.723513746 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092160204 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099967319 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126770002 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110422433 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136405274 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113492037 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081384029 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085361212 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076621061 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.082371231 seconds)
  done (took 2.643483541 seconds)
done (took 21.706783753 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081827403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.182008345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.353656809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091043138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.652547975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.348645494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.876025238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093554235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108938688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070044857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087935825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.631599469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.86638992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.140893678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.857193864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.139089547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.63347691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06851284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066604536 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067568042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.860987019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067501944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067575086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067721536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.631842203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.365286875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06877317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.136465726 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067570938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071618123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.349271168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069262923 seconds)
  done (took 14.858125688 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072033559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118742167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072112179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083682285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070244444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069002844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070940666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068161141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11581987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06797071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084332508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06694724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071389578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068559163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086688707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06774992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070144047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068322874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068268749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068706834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086411917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06763075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068747652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068689327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068539081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080802586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069596874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067982223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068530958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072025878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073161592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069669572 seconds)
  done (took 4.044487 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117604345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123905897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072783865 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104561143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115504832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069595357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144659185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09068431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118141877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068229648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084496849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067696192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101046707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069056974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088020985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068614244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071400081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068954983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068551594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068834602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08633368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068224573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068506488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068472598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068849971 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082989803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069431237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068364311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068068266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072080233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074090043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0695188 seconds)
  done (took 4.299547058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07176347 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073939126 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081620927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082168174 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068175339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071055361 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071060603 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066948785 seconds)
  done (took 2.240773331 seconds)
done (took 27.093213747 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07964821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066883165 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070094434 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086286719 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072883 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077104205 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06459718 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073874056 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071116536 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071307861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075072975 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066254654 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069540143 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064339597 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070916743 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065598178 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078578579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07005426 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077477131 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078519025 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068946071 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072160872 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074652552 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078097018 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077586138 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077800804 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075069909 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071764408 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067100194 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069475072 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068179798 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07739052 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.079288778 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080284636 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066332924 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066239022 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070483043 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068589489 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079609426 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075248873 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067774382 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075086128 seconds)
  done (took 4.676030164 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086463696 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087462254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080793204 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077907865 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096595202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080757128 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085118349 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076281888 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076611741 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084752072 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072665517 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079686135 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077146672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071472225 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075646187 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073362213 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07760968 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07307777 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07612087 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075692762 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085598908 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071521632 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084880609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077980563 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072867315 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079132733 seconds)
  done (took 3.720235932 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07448225 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084584161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091633871 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141562704 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109922335 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084859906 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079913165 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090231794 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096074996 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067276493 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071539776 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091537602 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091860175 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072407414 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108887482 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083345119 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079196246 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068995926 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07355609 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095277396 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086866301 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084322231 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093053572 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082785891 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066238295 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069287387 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071330628 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081361328 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.068881142 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077855976 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069083956 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070427259 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067502222 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077084553 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069054023 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066236827 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086049806 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077822981 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079646785 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104075963 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075827333 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06806022 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091226751 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126640973 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065792237 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069776131 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069734402 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077584406 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06667058 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094408278 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078342018 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066727061 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067209941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065668507 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065949932 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.069274038 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068557414 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068345375 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076298554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072725014 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085733979 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071610079 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084767609 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066244322 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07703509 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065723793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067970432 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065442518 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09436126 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06813205 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109179605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067963435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065230658 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077507757 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076678066 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07236805 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066946717 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084934366 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076838608 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070309513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075022262 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069024406 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070266816 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097372552 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067350225 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066160954 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067897616 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069417458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069831798 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067455823 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0778784 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066446465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069838208 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085637113 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066639986 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067217353 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070780726 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06853719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066253854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076232062 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070429667 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06819019 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076554278 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06790243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070222239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079946258 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073581375 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065762385 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068065718 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069618981 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068217162 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068053467 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070428839 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06859984 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073411032 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072948415 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072015863 seconds)
  done (took 10.629489005 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167883694 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156955093 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068670284 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150584989 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077448638 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081455471 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152300821 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093371549 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06759869 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068260645 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066787652 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.105604789 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10120411 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10941897 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078698016 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068530539 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093389388 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.109989689 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152580452 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14794376 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089614778 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07458608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069525368 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068902511 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068748152 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.0762613 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080681665 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075371133 seconds)
  done (took 4.416379858 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079764773 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10192273 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071882311 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089971877 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08661258 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067837238 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068819542 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069330284 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084093981 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077371943 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068030582 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071572364 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071058856 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070324035 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068031973 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073606325 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074007303 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066516655 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071446528 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072365489 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077403194 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091865877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071860111 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067327173 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069478795 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067538656 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076018208 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079498629 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068033247 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102142852 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065099201 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071708589 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080858853 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067804731 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066735976 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067422847 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067297173 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067494288 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067668438 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065785855 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066110824 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071485571 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066197604 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075901293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080191932 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073659409 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069192268 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069779215 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070216208 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06543763 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070155488 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070111228 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070143168 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075491451 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071263396 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070850889 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068278104 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093076166 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073070188 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066971181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066379405 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065752964 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069553007 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077490793 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083369436 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069896563 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065885647 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067470729 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079167471 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08022256 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066920831 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071611245 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0646549 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068216617 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069666646 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069657664 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068281811 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065953902 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066857961 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067262994 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067397735 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066932619 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066801472 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069626854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066090843 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065889298 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06991084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069342682 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07642721 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066839528 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070796215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068454427 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066194322 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069836659 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072275204 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069829758 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077671944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078089205 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068075891 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065863211 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080770913 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069747275 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066634016 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072912845 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071521151 seconds)
  done (took 9.249808846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093631244 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067776374 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08383186 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089972377 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077483293 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072566386 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077672585 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067131395 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082957397 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072973736 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075271422 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066129884 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078225301 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077273434 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068076361 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077472451 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070095829 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084415016 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081964732 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066367903 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075779785 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078986 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079204149 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081286633 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080523473 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081646749 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079163787 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07692807 seconds)
  done (took 3.867639964 seconds)
done (took 38.205106721 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.750903796 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.905333814 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.73637449 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.929890558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.871679776 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.744587783 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.960840192 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.732572189 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.904806078 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777559854 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.069318173 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.286421187 seconds)
done (took 65.453101426 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.803712212 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.880004991 seconds)
    (2/2) benchmarking "String"...
    done (took 1.976713574 seconds)
  done (took 5.515302158 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.961457217 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.387122208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.988958628 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.72689897 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.727371524 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.153023599 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.468103254 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.174963385 seconds)
  done (took 30.286859314 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.738260822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.932795338 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.34408972 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.366017214 seconds)
  done (took 15.077854348 seconds)
done (took 62.385823646 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.768655217 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.721615136 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.766796368 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.753702577 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.730827394 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.723269919 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.722955403 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.724633412 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.750247538 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.677783788 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.722658635 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.726636412 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.723061176 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.728083324 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.965516522 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.770205135 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.737178914 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.733365911 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.72526391 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.74168266 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.724947289 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.72331454 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.135335219 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.874748474 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.337787959 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.89425558 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.125806457 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.124816831 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.731154154 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.723467761 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.924439836 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.069021321 seconds)
  done (took 202.960419896 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.730642176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.703487665 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.796614243 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.733642514 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.098906822 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.92090505 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.835518648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.143903507 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.732255689 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744473169 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.992981596 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.725502371 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.99919958 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.738924816 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.764403187 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.821416108 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.937936231 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.97919725 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.763796887 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915976071 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.746877155 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.840371012 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.771861554 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.937426277 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.756627062 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.729776468 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.733294833 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.748180009 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.926141779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.915897642 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.728207642 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.762730398 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929674067 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.603673857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.728951749 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.749149842 seconds)
  done (took 168.348608799 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.914232585 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.735741904 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.726526255 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.780022233 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.849688122 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.728082727 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.399788744 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.732772608 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.280126053 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.731560985 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.727971332 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72812817 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.729710031 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.729134676 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.744259577 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.791380242 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.727566355 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.74510296 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.731204826 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.755116126 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.724764351 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.731293869 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.730375578 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.727330357 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.732082257 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.731027865 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.730170676 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.336337958 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.973757786 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.728830052 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.732508057 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 10.976016183 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.743389278 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.904912759 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.73141728 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.823576749 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.779276694 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.800108553 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.726426076 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.949851781 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.766648148 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.727713409 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.732908844 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.794110257 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.738369945 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.727414864 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.732153868 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.738294726 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.792322001 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.936383582 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.72831537 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853665285 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186151487 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.728188035 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.732636073 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.732459183 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.221256287 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.727097343 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.733551044 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.738848337 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.73592213 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.73019585 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.732715286 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.113816591 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.798493849 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.961178109 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.520357884 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.735028592 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.729872974 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.920558599 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.985900875 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.729392891 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.73151679 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.732718764 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.73255872 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.734357538 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.733342993 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.735210109 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.853066957 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.739374148 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.828031648 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.815624482 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.849998746 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.73494288 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.737309818 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.486779105 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.804169111 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.76306218 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.73697109 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.480114619 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.731046209 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.108950691 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.456037078 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.736045074 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.73120238 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.747858337 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.72997641 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.732397199 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.735414152 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.814781067 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.73071238 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.853608618 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393313856 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.524046246 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.732416209 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.734330777 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.736107858 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.813261954 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.850259055 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.736385992 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.797126061 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.736343373 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.737630145 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.785232502 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.731367948 seconds)
  done (took 395.774571019 seconds)
done (took 770.705233598 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.311219004 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.295217368 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.381481546 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.297198539 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.28019371 seconds)
  done (took 13.228730381 seconds)
done (took 14.893746553 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.748001493 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.739383876 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.794467462 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.814380759 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.749604552 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.752969004 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.813285962 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.752159964 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.783782925 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.790677138 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.816398741 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.815670597 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.759159199 seconds)
  done (took 24.794575841 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.74199195 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.884498432 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.96386923 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.772473734 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.742897145 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.976146106 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.799964556 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.880116942 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.880170293 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.977948411 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.971230976 seconds)
  done (took 22.26096401 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.742479803 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.886384477 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.961941589 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.780704886 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.744796616 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.968849673 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.803798489 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.888229023 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.887133826 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.96931936 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.972732913 seconds)
  done (took 22.281450581 seconds)
done (took 71.004263058 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.740028714 seconds)
  done (took 3.40638795 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758538602 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910097794 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.739372664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.737922183 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.739703455 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.736912953 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.737267477 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.739340021 seconds)
  done (took 15.765704678 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.739449171 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.740380408 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.740950509 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.740387829 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.741141693 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739146127 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.738142146 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.740956703 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.740179404 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.736788002 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.738697819 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.737265688 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.73787656 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.740225853 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.741871421 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.740277316 seconds)
  done (took 29.501261356 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.741646571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.736943112 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.738663825 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.737982149 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.73797143 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.740340423 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.742525768 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.739944913 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.737305477 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.73939969 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.741571852 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.739503072 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.7406573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.738284154 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.737591852 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.739177412 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.738917919 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.741132515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.744325952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.739163902 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.740967134 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.739810644 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.739975594 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.740919209 seconds)
  done (took 43.425707594 seconds)
done (took 93.776142996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.388393246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.316663915 seconds)
  done (took 9.373814097 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746873145 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.74038686 seconds)
  done (took 5.218753496 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740160795 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741155293 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.739074926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.743249544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.740030204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.743532196 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.742587507 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.741869173 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.74305969 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.743743161 seconds)
  done (took 19.087263445 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.741407409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.741193444 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.742838266 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.74415246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.740425938 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.741206942 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.743955633 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.742625714 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.74068903 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.742203668 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.744006604 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.742141631 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.744666706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.741688584 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742121267 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.742563928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.742613706 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.743738057 seconds)
  done (took 33.035713504 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743858578 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.742857705 seconds)
  done (took 5.156162023 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.743599341 seconds)
    (2/7) benchmarking "second"...
    done (took 1.744615526 seconds)
    (3/7) benchmarking "month"...
    done (took 1.741689262 seconds)
    (4/7) benchmarking "year"...
    done (took 1.742253031 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.742180991 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.743682791 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.742057463 seconds)
  done (took 13.870748633 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.745096097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.888922384 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.94705404 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.414256928 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.742593613 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.746056026 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.680557173 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.74291881 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.745444874 seconds)
  done (took 19.32434092 seconds)
done (took 106.736579137 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.487441872 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.746130728 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.009243921 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.800658497 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.764039928 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.046313783 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.758387304 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.2790657 seconds)
done (took 42.563672638 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.812728552 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.740808358 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.764930705 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.765042708 seconds)
  done (took 21.942087441 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742475536 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.048580606 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.758542697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.608799379 seconds)
  done (took 21.845352521 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.100665419 seconds)
    (2/2) benchmarking "read"...
    done (took 2.126047082 seconds)
  done (took 5.902859124 seconds)
done (took 58.179145144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741881028 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.742302148 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.740611281 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.744910435 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.740656872 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.741285165 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.742485427 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.741536429 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.74358312 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.74583297 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.741971655 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.742246378 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742619598 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.740798582 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742947959 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741481986 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.746829268 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745950404 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.745137783 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746156277 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743993141 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744868548 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.745338926 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.746588989 seconds)
  done (took 43.514482736 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.745426352 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.747013584 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.751118153 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.752148079 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.750250622 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.749790189 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.753929998 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.751296291 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.75274365 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.748181042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748874496 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.749260803 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.752479509 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.751754834 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747515648 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.752359972 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.754447315 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747772563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750261804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750503934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.752369148 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750271472 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.754476934 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754700506 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.753680963 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751864424 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.75219293 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.75038683 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749598367 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.75189816 seconds)
  done (took 54.203473231 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.746679419 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.753933516 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.750980819 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.748935058 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.748057118 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.750293094 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.751459915 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.749163297 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.749721254 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.751447415 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.753095313 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.748741885 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.750081844 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.752079154 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.750176073 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.750410706 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.751663202 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.751942515 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.753994694 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.75132304 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.749838636 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.753179175 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.750187713 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.747938247 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.749249773 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.748543152 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.749089034 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.749676668 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.750823079 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.748687237 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.749175674 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.749395565 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.749463051 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.749437205 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.748658862 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.750592875 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.753510568 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.752807933 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.7504904 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.750892673 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751193356 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.75131199 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.752522385 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.753490896 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.754098084 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.754026046 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.755389803 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.7560267 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.755096377 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.754905837 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.75575279 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.753663665 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.754855014 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.755860486 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.755338199 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.75381156 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.751774933 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.753329411 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.752443756 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.751929622 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.753063118 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.752686995 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.755009016 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.753968186 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.7525528 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.752434222 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.754509063 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.753058436 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.753874279 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75174336 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.752876585 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.75491625 seconds)
  done (took 127.816767705 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.753154335 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753771572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.751578193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753044651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752163731 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.752706435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.754384274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752350876 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753282925 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.754561658 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755729656 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.754369661 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753389301 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.754417868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754704537 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.75466693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.753214508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753720545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.752908792 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753432601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754491736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.754243389 seconds)
  done (took 40.263831064 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754356516 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752598365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.753343817 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754145685 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75350417 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753878371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.754254894 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754663245 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754856157 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755081657 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753753542 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753825645 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754378638 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755987109 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754194139 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754842408 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75396361 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754882741 seconds)
  done (took 33.26084629 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.756051051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.755548136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.756414742 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756257207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.756808124 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755046095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756007817 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.757689225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.754552602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.754927182 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.760037908 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755545811 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.756984415 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755575893 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75755441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.756495199 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.758682864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757205618 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759464932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757380757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759235404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75715163 seconds)
  done (took 40.33508268 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756021713 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75651409 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.758524427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757582805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758885095 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.756851696 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760092809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.760487315 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.760053447 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.761606614 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759486365 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.760448088 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.760766628 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760012426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.759653066 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757647658 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.75709785 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757559473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757612371 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.756197337 seconds)
  done (took 36.860162505 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754302462 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754963359 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757074324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760514355 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757423043 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.756643809 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755297195 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.755961419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760612302 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.760708144 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758421396 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757158664 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756494339 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757368409 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758060161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756962463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757925709 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758507133 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756489642 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756035471 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759594935 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759112216 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758349008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.758159252 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.756332743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757391683 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758161362 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758587331 seconds)
  done (took 50.899888058 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759700576 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75837913 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.759406111 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.759351866 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.760301832 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.758600552 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.759269754 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.762160871 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760289491 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758310121 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.759569602 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.761420344 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759742698 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.761369705 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760266936 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.763599399 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764165812 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.761783445 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763007601 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76215839 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.761427886 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764192541 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.762650606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.762938811 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762291702 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.761058782 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758275098 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761888166 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763020979 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761294707 seconds)
  done (took 54.522017703 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.78109873 seconds)
    (2/2) benchmarking "in"...
    done (took 1.781870069 seconds)
  done (took 5.251935564 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.76115607 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76442779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.763618269 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.764388556 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763885524 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.76358579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.763390476 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764461596 seconds)
  done (took 15.799272188 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.765190334 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.766046241 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.76160706 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.765272248 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.764965685 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769373481 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.765832684 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.762055083 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.76192881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.764726762 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.766708141 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.763629319 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.770019372 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.766888938 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.762442863 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.763634761 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763303996 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765075431 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.763331399 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.763049139 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766782542 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761813233 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.76748083 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.764285771 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.765822803 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.768798533 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.77249967 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.764550537 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.763124617 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.762534059 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.770004358 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.763881103 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.763312123 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76406015 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.763872601 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.76389086 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.769062864 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.762920105 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.762344032 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.762710196 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.764697447 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766090913 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.765834768 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.769210041 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.763750024 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.762922953 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.762819817 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.764506039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.766790003 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.76636663 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.772389069 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763945236 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.763970529 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.765924355 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.764575899 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.763035139 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.764274002 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.76400315 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77107979 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.769202178 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770949905 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.785634566 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.773392089 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.765043417 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.765691199 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772764155 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.790172479 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.763766487 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.764705728 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.764947257 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772249078 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.765673024 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.765612305 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.765116472 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778014468 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.773287934 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.764971237 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.764308664 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.765174343 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.766039688 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766659584 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.764035248 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766045701 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.76598273 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77547486 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.792763764 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.766032956 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.767211168 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.767405095 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.768718195 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.771058633 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.767485971 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.767064778 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.766101446 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.766391011 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.770200663 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.766190048 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.766271407 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.767062254 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.774794278 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.766464332 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.766296607 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768198754 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.775276911 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.765741447 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.766566529 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767134938 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.765462913 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.772157167 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.766578811 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.766829442 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.766629173 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.767876574 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.770263343 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.76629493 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769677041 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.775664811 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.77412242 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.7700026 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.769663988 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.76929627 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.769651719 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.775650999 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.793806565 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.768106123 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.771738812 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.773218543 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.78199678 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.771833479 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.768779377 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.773225239 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768312727 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.771361647 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.771200831 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.769116503 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.769920376 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.770666821 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.772270035 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.769641051 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.769879306 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.771850545 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.771201495 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.77118698 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.767995137 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.771583342 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.769952611 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.772750135 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.776295358 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.771259 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.769812319 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.771164947 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.7754651 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.772260905 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.773382779 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.772717471 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.771846649 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.770857247 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.772819307 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.773317099 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.771218555 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.771640334 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.772882494 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.774949209 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.770560382 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.774499993 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.775516558 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769229314 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.771636312 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770733609 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.770452683 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.773544217 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771252003 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.77526024 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.769312387 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.772277791 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.771470671 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.771057633 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.775226603 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.774884771 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.781539209 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.776098934 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.780971287 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.771456774 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.78160397 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.771949789 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.772038804 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.771361299 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.771268938 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.771962257 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.771851512 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.773446794 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.777295223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791778801 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.780705356 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.773347004 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.774734939 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.778081186 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.776581018 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.776378262 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.772758644 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774020283 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.772700819 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.7728717 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.773082684 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.771639564 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.776625107 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.774724024 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.772046899 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.77968954 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.773585211 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.773552727 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.77271077 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.773141042 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.777383609 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775526352 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.777163601 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.777228211 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.776304933 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.783338216 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778914459 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.774002614 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.775463524 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775794632 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.772558475 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.775078288 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.774425266 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.776883828 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.773479478 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.773266571 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781758872 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.77794156 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.77679239 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.774203143 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.774882592 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.775996903 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.775980118 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.777713331 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.782532284 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.780014335 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.774276888 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.778409444 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.773971822 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.778207975 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.773659176 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775973908 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.775141567 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.775582881 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.774872628 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.774849813 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.782439196 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.775124838 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.773980942 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.774500815 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.778658436 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77739281 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.775371736 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.774116957 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.776845084 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.784532211 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.779743429 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.776202273 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.777492677 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.77718004 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.776454773 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.778543311 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.776002947 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787374797 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.784477652 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.775320199 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.774441155 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.775564329 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.778239859 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.777006671 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.776171992 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784592997 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.78021338 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.780942854 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.780356938 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.778326064 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.776836717 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784951787 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779143269 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.77969406 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778617892 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.781879444 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.779321804 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.777012173 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779843623 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.774390039 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.778749753 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.78307689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.775618483 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.780365645 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.777316478 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.788319867 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.777738764 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.780695123 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783182662 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778553413 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.780445354 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.778915333 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.777922951 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.776111938 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.778907884 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.777527164 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.781640593 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.777716429 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.780093504 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.787751177 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.780217437 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.788846692 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.782560374 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78821728 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.779203836 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.780014228 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.779918599 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.78172538 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.78734481 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.779633212 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.782595525 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.785833139 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.783119159 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.782314734 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.786716018 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.780815421 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.780664065 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.781928179 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.781576805 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.783640739 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.782017785 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.779988917 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.780285386 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.781880145 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.781210953 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.783904301 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.783435868 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.782466163 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784522592 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.780400318 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.78156518 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.78192666 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.778536535 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.781130543 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.780992584 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.779838476 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786854912 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.779084475 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.778127846 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782704324 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.778958128 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.788975162 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.779807315 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.778390764 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.783288493 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.779864855 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.784269702 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.777939546 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.779820252 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.780809093 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.781912963 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.786454659 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.792455747 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.790578404 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.787681231 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.783806338 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.78247517 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.784308588 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7932927 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.807623475 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785358397 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.786824161 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.786783096 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.788648285 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.784115263 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788151896 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7854519 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.791101583 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.782463924 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.785260814 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.787262938 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.795156144 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.780905731 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.779932832 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.78146598 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.788657901 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.787463374 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.783266326 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.783640157 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782130811 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.784333557 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.79483118 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.785377819 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.787865853 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.783086641 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.783845169 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.783769104 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.784860064 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.783160272 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.783945139 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.78061183 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.782162155 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.78629352 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.785719762 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.785414431 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785844356 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.790180064 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781927729 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.783455887 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.785525522 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.782500087 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.781701367 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782026591 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.786831078 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.785846034 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.785461433 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.787132432 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787161857 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.795911194 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784680159 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.78443174 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.787803706 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.78826498 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.787792064 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.788054529 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.787619696 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796107303 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.789146963 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.796754662 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.792343632 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.783371162 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.789567937 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792232548 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.793916472 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.787358548 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.787828982 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.7829373 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.787420294 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.78517218 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.785143916 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784731 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.78651991 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788896015 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.781704231 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.783950614 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.785762065 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.785502543 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.787701043 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.784808145 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.791441708 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.784111624 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.787694586 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.78849739 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.788372845 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.788703903 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.79038343 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788527159 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.787559738 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.788152969 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.787741496 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.789720383 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.788767657 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.788908164 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.791304586 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.789313867 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.78779693 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.791412761 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.790277384 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.788435449 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.792463848 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.797036941 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.78847998 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.788434428 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.791549447 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.790591687 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.785755166 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.788973539 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78835226 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.786747173 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.793151453 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.785065413 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.787220774 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.787026623 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.787414076 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.790634226 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.786866931 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.791259201 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786141326 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.788807708 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.786446109 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789602637 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.79676706 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.790753085 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789635021 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.795398649 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.791913254 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.786414229 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.785665514 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.78518422 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.78703804 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.788580712 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.790736556 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787570027 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.788343784 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.786764616 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.788257697 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.789011088 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.789825219 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.786644653 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.790795688 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.791980887 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8001296 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.8000106 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.791136447 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.78865289 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.789222443 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.791399886 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.799346343 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.786874068 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.78861927 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.789272868 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793538835 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.791695023 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.79491665 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.798375687 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.793007079 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.786604163 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.792806319 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.805120125 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.791317927 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796656572 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821695538 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.791911288 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.792304562 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787412112 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.789565159 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.788208286 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.790399563 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.785663777 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.795357149 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.788037583 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.789038934 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.794683859 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.789823468 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.788300073 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.789009639 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.790560728 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.7949882 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.791453676 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.796271118 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.788769409 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.790323002 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.79310853 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.793553749 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.791805822 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.788511639 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.789713023 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.792255128 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.790134256 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.791590963 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.798768418 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.789820606 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.79039598 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800388414 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.802431512 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.790280428 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.790164613 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.790119658 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.792172043 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.793750711 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.789656582 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79462599 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.800735134 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.791572212 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.798084035 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.78948142 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.791389296 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789872878 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.790500253 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789599823 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.800889678 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.800159769 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.793219472 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.792518104 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.798526916 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.795333938 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.798429545 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.797090419 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794533689 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.793919486 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788731441 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.791460628 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.790571408 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.788439145 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.795198459 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.801275592 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.79032429 seconds)
  done (took 1062.633897123 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790319937 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789864201 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792554393 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791534398 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790676299 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793329616 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79311943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789717525 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795669025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795010434 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793420235 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79318543 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793021005 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793582605 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795048163 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792194655 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791055173 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.791196629 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790731089 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794077682 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.791638946 seconds)
  done (took 39.360486103 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.790602029 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.791822205 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791795536 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793910882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792499705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.792436901 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.791308054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792565888 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793071899 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792110667 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.793849933 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793141201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.793348191 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.792372851 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792094238 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796202689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.793799617 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793033794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.796834817 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793582595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79316076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793671075 seconds)
  done (took 41.167882558 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.794931508 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.793946028 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.795226451 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.793131259 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.793765989 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.794495933 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.793969775 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.79604843 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.795470977 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.798102257 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.800112544 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.802486641 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.793115552 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.797850942 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.793213213 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.793643226 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.938373605 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.794136409 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.794615302 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.79222476 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.79480179 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.799694872 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.795657003 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.794016734 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.793180961 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.793565454 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.797500302 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.794936269 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.794699994 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.796520674 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.797541417 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.795117888 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.796024596 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.797470836 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.79549077 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.801578169 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.799805062 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.796464747 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.793919961 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.796003097 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.805754289 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.823427639 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.794796776 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.798198714 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.805829912 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.797964942 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.798155631 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.802478695 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.808026605 seconds)
  done (took 89.930280226 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.797572875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.797308137 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.799552078 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.797667893 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.798765399 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.798152951 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.799717928 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799121429 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.797142092 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.798132351 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.800036495 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.801227634 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.799062154 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.800902799 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.801526366 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851770317 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.934859942 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.936678175 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.938638346 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.935435406 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.9384932 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.935679273 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.934812216 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.93565464 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.934767121 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.933729882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.935597433 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.934906896 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.936049733 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.934448077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.93315543 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.936073754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.934228097 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.932850956 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.932746601 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.933968421 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.933215227 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.932569465 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.932894052 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.933072718 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.935813257 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.933074766 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.933353106 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.933534476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.933040351 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.934714174 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.939923209 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.929163293 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.929159594 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.930030852 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.929786791 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.929740992 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.928849582 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.928522082 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.928362628 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.929661902 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.928388747 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.931583174 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.929975789 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.929393881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.928404075 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.931061868 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.933427045 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.927555047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.928686547 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.93019307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.928905275 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.929947922 seconds)
  done (took 131.061404662 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.924771469 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.922444315 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.923269899 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92551722 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.923336229 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.922478392 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.92291129 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.922957889 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.925200508 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.923525385 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923110025 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.923599413 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.923408359 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.924156174 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.924813154 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.922942369 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.924339393 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.922724484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.924522648 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.926907597 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.924297368 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.923886849 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.924073936 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.924455513 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.926895391 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.92419764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.925260692 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.925581299 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.9236692 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.926481258 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.9250128 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.924777903 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.925130395 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.926719999 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.926017279 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.922019592 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.922081612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921830337 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.922897801 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.924958791 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.927118585 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.92358116 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.923819265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.925262846 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.92304458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.924883264 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.922704522 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.925206074 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.92265118 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.921888905 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.926883074 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.922559634 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.923968451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.924190045 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.923761335 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.92446435 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.924265925 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923779345 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.924276441 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.922616621 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.924803758 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.924838551 seconds)
  done (took 121.147862123 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.922954025 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.9208879 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.924460615 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.924229954 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.923628651 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.922698107 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.920762922 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.922440102 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.922605977 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.919837298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922643037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.922295481 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.924019257 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923750779 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.921452189 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.92297526 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.92316167 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.92148434 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.921366999 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.921416361 seconds)
  done (took 40.293957227 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.921438245 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.922029501 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.925792641 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.920161443 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.921445605 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.92032608 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.923514931 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923395253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922822206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919997936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.920882401 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.922398597 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.920141285 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922401205 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.921348747 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.921255155 seconds)
  done (took 32.592825492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.920482465 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.923478688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.922573759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.920808779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.921291266 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.920565572 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.924516249 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.921099512 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.921958573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.922159695 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.920347502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.925908449 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.920434233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.92095189 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.920566457 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.921745027 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.920084756 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.926166254 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.924595191 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.923750935 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.923206875 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.921795884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.925198551 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.925288981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.921362619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.923209642 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.921822323 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.924493337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.923593054 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.922072862 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.922475079 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.920636648 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.922367124 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.910775167 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.910970063 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.911189015 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.913005711 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.913220414 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.905426889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.904095783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.904404093 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.902931408 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.904704331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.904429024 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.902440872 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.904288213 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.904375533 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.902641481 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.903501331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.902394562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.90304977 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.902257275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.90493995 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.903978752 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.904621374 seconds)
  done (took 107.210888975 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.903704744 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903687184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.902913302 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.904428959 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.901472996 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.900850994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.900688217 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.901819092 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.902053596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.899405121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.900032651 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.900189268 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900183177 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.900584071 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.900783457 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.898315167 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.899525113 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.899735298 seconds)
  done (took 36.046951551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.899881797 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.899294586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.898163321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.899666143 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.89979052 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.904698817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.896513366 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.89604005 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898038267 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.897173008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89873884 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.896379172 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894532138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.895049759 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.896641351 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897188284 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.896122987 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.896460052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.898285852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.89375603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.897018894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895316044 seconds)
  done (took 43.568282251 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.89567159 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.894411788 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.910753786 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.927957366 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.917460291 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.933365448 seconds)
  done (took 13.301685007 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893940407 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895216568 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895497265 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89455228 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895355172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894964165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899217416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8981983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898674144 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897664258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897471815 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896490167 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894923106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896650021 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896548228 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896869993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896362315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895385298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896476422 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895945662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894988372 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895473789 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898037959 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896185846 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894537678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900352208 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896790329 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898964709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896370187 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897360623 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895948386 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896357623 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894366474 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897707093 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894520912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895594739 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895399178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894709588 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897363213 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893610336 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.893943862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893678676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893488966 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896230245 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893165513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895213333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8944901 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893641616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893120316 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896543584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893518387 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892878834 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893055776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893475093 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894593275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894362873 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893407376 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892579262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893438002 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8935029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894161027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892879447 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893012083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893788141 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891934708 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893112441 seconds)
  done (took 126.909877987 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890581133 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89339401 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894956433 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893360888 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893001412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893584138 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891935009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893520218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893647756 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894830573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892927893 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893291119 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895717887 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894508819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892932545 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893880341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895108511 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896287178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895696155 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898791323 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893224735 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893879744 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895349485 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893528975 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896691059 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892400807 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895218445 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895263617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896239071 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894993929 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894318476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894681138 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893280377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.896021612 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898507664 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895081104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894644701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895067544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895297714 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893152056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897008918 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893418555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8948776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895280087 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89353488 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895759551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893339562 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893258342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891866171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892579705 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894564916 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890639981 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891465233 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891290646 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890563859 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893116425 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891200984 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891220969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889939234 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890960228 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891345357 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893015156 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892950081 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890865966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89181617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890490134 seconds)
  done (took 126.805512493 seconds)
done (took 2516.437818209 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.956698666 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.909310388 seconds)
  done (took 15.683831525 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.058572177 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.007483422 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.892361789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.94127982 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.890757888 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.894009748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.914944803 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.891789288 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.894499631 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.893666925 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.894901067 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.077875818 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.90363147 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.891834239 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.89383583 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.986139938 seconds)
  done (took 52.74977455 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.896558519 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.899028855 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.906112844 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.898964268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.898302422 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.907750126 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.928307241 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.900653517 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.93055592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.909928242 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.962679314 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.906156019 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.896930391 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.944690721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.908098206 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.912979632 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.988215912 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.969012355 seconds)
  done (took 36.383992531 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.974029486 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.903800637 seconds)
  done (took 10.704248046 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.920294904 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.929024336 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.972932206 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.913403304 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.903584418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.904485493 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.926138282 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.915103927 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.895033073 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.102925066 seconds)
  done (took 71.208733335 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.915228936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.916046437 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.90890131 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.907739474 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.907239667 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.908766274 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.908450596 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.906778129 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.588395295 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.959672978 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.917255674 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.915613504 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.909970632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.913202325 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.910294435 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.933869389 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.024336254 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.908065224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.909481777 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.915541134 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.908272528 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.968604442 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.924142137 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.916577431 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.941035495 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.576530641 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.915764884 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.916789008 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.022839606 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.908696425 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.910284618 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.095052031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.91341889 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.379266665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.220444589 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.914085659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.92189375 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.917940774 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.907996481 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.022668939 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.913734544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.914600504 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.83351766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.202905885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.011650986 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.956402948 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.257455962 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.930768638 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.910580124 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.941180907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.912874283 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.91174955 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.931123274 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.414266618 seconds)
  done (took 135.163979093 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.909273218 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.270328282 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074842189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.910419058 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194757114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118024562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.912604337 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955685588 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.911380215 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.154121393 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.13260001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.016917794 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911596527 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.90814257 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.910553361 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.907228516 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062201733 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.980794994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.912829433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.910971079 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935867662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154587258 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.054866711 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.910901485 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.930496329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.125106231 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.032671943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.01424551 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.401711438 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.910062317 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972722249 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.912667919 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.913740155 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.908103425 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.073306787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.003884826 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991365079 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.913388781 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.909967443 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909873747 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.574304602 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112660517 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.010503017 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.486837061 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061284203 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.121506871 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.690570274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.910517753 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.652787696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.070690123 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.137096974 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.16273771 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035178411 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.913748726 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.432801289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.910675631 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.911997087 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.164132865 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055452752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.011390237 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.915260847 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.910566795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.912898808 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.156236362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.912740915 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.005434405 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912541043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.908562014 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.00892527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012566832 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050979463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123741909 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.942981381 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.645735733 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.126383545 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.160319005 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.977230089 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162805197 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.913363865 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911758433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991318379 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.757940673 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118373815 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.156998764 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.170957336 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945544099 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.645509857 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.913993931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.140459377 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.130639103 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.160942472 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062949746 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.071855229 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.31822223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.915331208 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.912942053 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.123353013 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.035822387 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.91806918 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.253243643 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146013174 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.471199726 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.931218446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.217812721 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044922985 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.916283601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.547167899 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.917667732 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.137136119 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.958090826 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.916061744 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.914683995 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.13253216 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.905189333 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.918020126 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.562746533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.973924223 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.91689033 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14903608 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.917902382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175362713 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.914939444 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151248807 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.43480661 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943433938 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.143707399 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.059275138 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.916584153 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161025704 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.157557009 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028453158 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136312268 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.656989601 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.914674995 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204187766 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.915736661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.914407668 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.082040155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.918700284 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062302339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.918219946 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.199000018 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935600731 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075092623 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.921089312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.186242466 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.947383901 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963274404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.917366435 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040059509 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.919840041 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.757810084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.075283043 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.917848148 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.916088263 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.810998363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.914426383 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064275892 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.146975731 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.937365804 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.990994299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576263516 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.917623631 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999963477 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.939083248 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.319742353 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.917093519 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.130442523 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.917120584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.916564896 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.915090114 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.157400653 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.101398233 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.919222621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.918851838 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.812682837 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.91829029 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.918407598 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.100440629 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.273739492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.918033491 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123555728 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.92276913 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045567914 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.92352683 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.991462579 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.255506236 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.91736147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.920799491 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.918468523 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.918313947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.917605079 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.181042143 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.949399131 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.445420254 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.052940749 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185775058 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.227291495 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.174966085 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.960575291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920953098 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.170855254 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.921917221 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.980547628 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.921984974 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.939905704 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14926036 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.921972488 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130023797 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202547995 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.78949288 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967955489 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.923332691 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920358141 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.918939424 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.089005469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003745616 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.920774227 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.920644447 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.034318226 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.059804206 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.127180045 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.921410312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.132504617 seconds)
  done (took 912.38458237 seconds)
done (took 1236.098702042 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.924214328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.920199953 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.922881626 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.924017172 seconds)
  done (took 29.534805072 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.926812512 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.921593992 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.920420469 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.921914526 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.921946047 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.921910787 seconds)
  done (took 13.381242598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.108558929 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.917763158 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.92180508 seconds)
  done (took 21.793100746 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.99127698 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.305050192 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.059044685 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342163951 seconds)
  done (took 10.542624604 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.92408335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.922806521 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.923164863 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.922507107 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.923867845 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.922671428 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.922251927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.922646018 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.923279018 seconds)
  done (took 19.155693508 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.191572135 seconds)
done (took 100.443177566 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.260529481 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.938113959 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.048614022 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.988249001 seconds)
    (5/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.709920144 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.868958196 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.028968107 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.985145817 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.107395538 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.233963644 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.945279304 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.48572404 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.09915972 seconds)
    (14/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.011157966 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.132915216 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.94722923 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.025060576 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.010136418 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.319899395 seconds)
    (20/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.014383161 seconds)
    (21/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.674173348 seconds)
    (22/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.819871225 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.061889905 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.136477585 seconds)
    (25/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.84544381 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.165094403 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.953168022 seconds)
    (28/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.093885994 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.072188255 seconds)
    (30/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.033391792 seconds)
    (31/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.098036964 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.542688381 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.22718242 seconds)
    (34/309) benchmarking ("sort", Float32, false)...
    done (took 5.620007542 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.94013973 seconds)
    (36/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.334367141 seconds)
    (37/309) benchmarking ("sort", Bool, false)...
    done (took 2.169187948 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.117173629 seconds)
    (39/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.599013654 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.926739821 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.203685805 seconds)
    (42/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.800896581 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.078508951 seconds)
    (44/309) benchmarking ("sort", Int64, false)...
    done (took 5.645314465 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.036188364 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.176370882 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.01166047 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.016723726 seconds)
    (49/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.088824424 seconds)
    (50/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.943881244 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.285648615 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.017823933 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.017028845 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.962722656 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.925391382 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.409104525 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.022666731 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.073718664 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.316410087 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.187277292 seconds)
    (61/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.042021447 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.255825694 seconds)
    (63/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.950440354 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.235040191 seconds)
    (65/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.947064666 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.204126862 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.926461543 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.626356746 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.438130852 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.064580453 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.926560518 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.141095614 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.054250515 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.156542281 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.13702541 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.069776072 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.764451892 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.940923615 seconds)
    (79/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.035761463 seconds)
    (80/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.549812526 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.931799896 seconds)
    (82/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.057316846 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.930278149 seconds)
    (84/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.109311824 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.248599296 seconds)
    (86/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.930755852 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.067470875 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.087246365 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.93770398 seconds)
    (90/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.942512464 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.278413116 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.929265043 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.424289626 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.9340106 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.053644832 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.137961932 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.929691048 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.150537346 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.276846232 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.720297403 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.245607799 seconds)
    (102/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.031956012 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 5.674069816 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.239769075 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.23734931 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.067323908 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.9547318 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.162213016 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.044206306 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.590853828 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.267664591 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.929500291 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.706866201 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.18366797 seconds)
    (115/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.886039275 seconds)
    (116/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.063034819 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.928047061 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.365685394 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.249299736 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.156041159 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.829818191 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.066778828 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.277140344 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.960572205 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.950068526 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.934899975 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.969909953 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.928986811 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.262884916 seconds)
    (130/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.020146472 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.233627254 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.932256783 seconds)
    (133/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.059003176 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.417149555 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.932955645 seconds)
    (136/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.038511003 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.17864264 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.600024548 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.883331209 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.189074077 seconds)
    (141/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.395276013 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.011169002 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.252943801 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.956422578 seconds)
    (145/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.112628223 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.938559475 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.016371415 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.045131001 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.930658528 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.936790958 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.055932865 seconds)
    (152/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.10099169 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.352020172 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.932760296 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.931349863 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.948208662 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.242265284 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.932565721 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.114092855 seconds)
    (160/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.806731656 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.933928435 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.028086671 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.04240059 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.948651621 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.215069983 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.931879981 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.138983988 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.992068506 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.931886694 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.143069972 seconds)
    (171/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.310712866 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.063730339 seconds)
    (173/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.190643383 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.332454216 seconds)
    (175/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.064933843 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.345167293 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.939135571 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.351440823 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.083731264 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.163736425 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.016031843 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.934550699 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.931717406 seconds)
    (184/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.015054359 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.395487337 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.09368418 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.362176415 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.292326411 seconds)
    (189/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.239734293 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.051373661 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.41758747 seconds)
    (192/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.313211969 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.550647337 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.190597296 seconds)
    (195/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.043378517 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.470283967 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.942131329 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.935935433 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.783254985 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.795039374 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.068261505 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.835649893 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.936639804 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.804190163 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.936775444 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.016069787 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.067933722 seconds)
    (208/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.456443062 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.168193923 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.301948933 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.041627002 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.936356534 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.936011416 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.765601089 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.27357237 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.995150025 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.935697095 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.861947829 seconds)
    (219/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.05233678 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.689198566 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.065986709 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.937859939 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.33742382 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.959427709 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.835757082 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.101766723 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.294647131 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 6.941347319 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.176235488 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274497746 seconds)
    (231/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.02003427 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.252916356 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.069203158 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.941128536 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.491519001 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.941764993 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.284637065 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.942603288 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.756096415 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.36398047 seconds)
    (241/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.940557495 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.243041341 seconds)
    (243/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.841536414 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.401517827 seconds)
    (245/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.945149096 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.134044639 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.306892366 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.941146415 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.377158525 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.075364224 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.061758887 seconds)
    (252/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.030402201 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.074984767 seconds)
    (254/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.049334084 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.941845279 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.024853795 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.248371583 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.106215728 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.075622523 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.971632413 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.289908977 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.938217745 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.035880948 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.939934991 seconds)
    (265/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.778566054 seconds)
    (266/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.097667828 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.338359827 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.939864261 seconds)
    (269/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.396385771 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.963111909 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.782157109 seconds)
    (272/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.021779207 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.003820145 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.111691589 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.952999326 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.044501827 seconds)
    (277/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.468374811 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.977499746 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.942162581 seconds)
    (280/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.76837831 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.938818004 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.063343242 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.09588573 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.214342 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.115465889 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.397780782 seconds)
    (287/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.218076872 seconds)
    (288/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.105035129 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.037084385 seconds)
    (290/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.961880048 seconds)
    (291/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.147411423 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.808715908 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.936624098 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.049919298 seconds)
    (295/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.366399582 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.945245137 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.429074355 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.02583063 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.041888188 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.255378588 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.35403583 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.928291027 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.939584875 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.117842083 seconds)
    (305/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.949077608 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.286269876 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.287653973 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.305130453 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.460943539 seconds)
  done (took 1025.356783911 seconds)
done (took 1027.266856946 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.978855106 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964472998 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.9543583 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.974711982 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.05643988 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.989405938 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.967633568 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.95778525 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.004114771 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.003838594 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.942359678 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.987573705 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.947932951 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.94484463 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.952475145 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.962190696 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.241810155 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.972801303 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.962458213 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.963689371 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.962148318 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.942116583 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.006074202 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.988307823 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.957205839 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.958524464 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.947543608 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.964707516 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.059435492 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.948778395 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.958406715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.959254257 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.243489182 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.976479964 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.95272107 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.965570944 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.959473732 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.965002818 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.958854981 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.979721245 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.331351478 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.979645085 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.949440145 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.95538225 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.954680674 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.962688908 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.947743147 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.964518383 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.964561861 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.965684953 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.329058715 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.99868508 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.953915117 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.959308317 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.969865444 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.948171962 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.959469089 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.96599949 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.967424838 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.965230598 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.233961981 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.987212176 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.959538764 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.965272416 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.956535851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364893555 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.988844432 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.963673131 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.330877239 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.996910518 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.364595124 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.993137621 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.958595889 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.962983618 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.980734972 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.244441214 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.979226193 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.956830858 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.959240647 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.947078925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.969983153 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965397494 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.962765659 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.956976709 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.965308557 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.994367783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.969962045 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.950978976 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.968430094 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.967593542 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.956794767 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.961576225 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.961470168 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.954954026 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.968582054 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.962482418 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.951850594 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.952750252 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.962058876 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.969169218 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.331374399 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.003466169 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.957233864 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.954871322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.958452564 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.96516841 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.333403097 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.989290543 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.981663277 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.00833089 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.960836879 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.23677608 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.979277274 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969709845 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.970426488 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.961061633 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.957853893 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.240350218 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359344928 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.001016328 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.959751217 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.9493492 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.974930212 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.961490349 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.956567698 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.248448584 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.986353374 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.970588655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.074233844 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.972273849 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.984781498 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.950018957 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.964538221 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.997225459 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.971026705 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.984609662 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.962770449 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.97015044 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.970880004 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.958118348 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.964690193 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.974268886 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.96145631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.969399646 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.959911898 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.000162859 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969665179 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.970361164 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.983176146 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.077762563 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.959495359 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.241780056 seconds)
done (took 306.542345225 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.029871036 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.950625725 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.043315423 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.951262825 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.041889042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.024867618 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.951003868 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.952268179 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.950971405 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.453163832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.952561128 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.95660127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.951874772 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.952654159 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.022183277 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.951507821 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.951424587 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.398160295 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.953167586 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.032578694 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.949492413 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.952317156 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.951212135 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.488304212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.95318023 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.950829797 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.031543781 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.951834777 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.402601965 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.95363403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.951964859 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.404937468 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.034122279 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.980238261 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.960726162 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.958154078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.041849202 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.962395213 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.020873317 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.020112674 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.043883333 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.985561757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.951185344 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.952774023 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.954409097 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.95748632 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.953262091 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.984725794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.95237638 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.958118533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.399644325 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.960280064 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.958632706 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.954137208 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.954254237 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.980998706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.953927444 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.955725086 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.034504757 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.955049518 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.021519457 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.489269868 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.456388489 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.955078634 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.954942707 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.953498682 seconds)
  done (took 190.896679284 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.020199456 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.031915469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.01885912 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.957369782 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.003708552 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.021238419 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.957865837 seconds)
  done (took 15.886149579 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.963532045 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.953941107 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.004367693 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.00616788 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.954209322 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.136889968 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.96998832 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.95957776 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.981409421 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.954816863 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.593102629 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.003902616 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.960689321 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.954708261 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.966706016 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.011314222 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.958725227 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.955142024 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.071769723 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.103532912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.960449253 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.96210673 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.983112297 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.967512327 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.955277238 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.956348943 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.955479709 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.962266998 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.954294796 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.953367128 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.954621052 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.006987557 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.957839014 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.955138184 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.956214931 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.958241067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.956813972 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.956586425 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.957264534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.955119337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.955512174 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.956970378 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.957709379 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.957486227 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.95700806 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.979985654 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.956842488 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.959191838 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.957856555 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.957406495 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.983531053 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.957122658 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.957356386 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.961006033 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.998491703 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.960333029 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956871211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.956066482 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.961697455 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.958515658 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.95789433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.10632406 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.009342652 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.960672585 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.008065617 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.111614512 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.957999876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.957971961 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.959333908 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.046357951 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.95746084 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.008584301 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.958000823 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.073437564 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.958181606 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.137936519 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.982121518 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.961461404 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.963165915 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.958767575 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.968590225 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.959524305 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.962174391 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.965340053 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.963617336 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.958222731 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.960420713 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.959975876 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.966765694 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.959675456 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.007509677 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.960457946 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.959567789 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.098937755 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.95919252 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.077603035 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.98672208 seconds)
  done (took 214.525244517 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.966985138 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.967385895 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.96319805 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.976069282 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.962209064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.961302958 seconds)
  done (took 13.676732031 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.961961118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.963426421 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.95860708 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.960365039 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.960009033 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.96079616 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.963439035 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.961560134 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.964566748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.96013644 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.962394416 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.963117371 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.960591909 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.960841902 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.960314612 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.960212339 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.96025464 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.960511815 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.959833055 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.959657873 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.169397864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.961616748 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.960786591 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.964673208 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.965326931 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.962617055 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.974778041 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.962524207 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.961715193 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.968569019 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.964025533 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.961747124 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.966429724 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.96900897 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.964904616 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.966373497 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.966040912 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.96308103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.961540174 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.962833501 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.963166258 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.963479053 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.961802162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.963327683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.964020465 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.970797625 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.968931954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.97447421 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.962273532 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.964029022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.964211019 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.963009451 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.962557295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.964647178 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.966814532 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.96941152 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.969773682 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.963029764 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.962432834 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.967063485 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.967433635 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.963351097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.965336386 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.96703478 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.969544192 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.964653273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.968467048 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.967812491 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.962832571 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.963414431 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.965226048 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.96410378 seconds)
  done (took 144.501737258 seconds)
done (took 581.378916362 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.530472828 seconds)
  done (took 9.413370035 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.974397353 seconds)
  done (took 8.97055704 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.286698854 seconds)
  done (took 10.174192097 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.973259723 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.967030245 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.970401861 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.965748621 seconds)
  done (took 29.774657485 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.332419438 seconds)
  done (took 9.218329727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.986412846 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.960252145 seconds)
  done (took 15.892501995 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.979600842 seconds)
  done (took 8.874699697 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.346966015 seconds)
  done (took 9.241549948 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.987220472 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.000871704 seconds)
  done (took 15.895748107 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.969566277 seconds)
  done (took 8.857907603 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.156901003 seconds)
  done (took 10.129467582 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.981241703 seconds)
  done (took 8.937072352 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.050885529 seconds)
  done (took 8.939965325 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.901635054 seconds)
  done (took 9.790405299 seconds)
done (took 165.99536002 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.979681906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.967361014 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.965225602 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.966181534 seconds)
  done (took 29.766173658 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.002694348 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.002805359 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.01101914 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.002144912 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.992602064 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.992619151 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.002169473 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.001370546 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.994728332 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.000791694 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.003673592 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.000707827 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.002223099 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.011744336 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.01411653 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.000194318 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.00361084 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.004046324 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.995005232 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.013045844 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.003455474 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.002711636 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.967552286 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.967336899 seconds)
  done (took 49.883128639 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.185139431 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.053903669 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.13728984 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.042860125 seconds)
  done (took 10.308866925 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.967766031 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.047114547 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.03826755 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.025916874 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.028945563 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.083634978 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.037967097 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.106920802 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.097264843 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.101241705 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.976775173 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.989408769 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.992105794 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.026626302 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.086102174 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.970007349 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.969307898 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.089052426 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.04563182 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.27918591 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.97042959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.037514995 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.028945488 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.03787111 seconds)
  done (took 50.923332649 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.970027029 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.978025136 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.979032358 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.97149827 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.972503356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.970442778 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.978310957 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.973592624 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.994924092 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.975111725 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.970817206 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.976035081 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.98008988 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.974080065 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.972956744 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.988439239 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.988456579 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.975024471 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.978828018 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.983704629 seconds)
  done (took 41.443141428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.972937847 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.234101773 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.317054284 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.224108181 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.974048511 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.973125004 seconds)
  done (took 32.58917193 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.985381523 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.978940507 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.973980973 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.028379727 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.112143166 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.980215576 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.973837558 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.98364642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.01710756 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.034894446 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.994589351 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.999646719 seconds)
  done (took 25.956899605 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.973250513 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.979117298 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.973691219 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.370092513 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.00098198 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.985460148 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.986141974 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.977128791 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.991134634 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.997346318 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.984154355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.989890575 seconds)
  done (took 46.109466688 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.685441929 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052324789 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976704268 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.003475896 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411945251 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52593241 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.869505872 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.693759512 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524019156 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.902925032 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180754888 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.977018914 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064510952 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.978697406 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248243055 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.453122696 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183503369 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221543746 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976311869 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.06593317 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.181377625 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183520262 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.260787224 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977419477 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978850946 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.986413001 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.54212168 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.763326758 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083657575 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.204004788 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296493704 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933866207 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026055093 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.982604552 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.991652551 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980812063 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982980335 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249773876 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.986624215 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160757684 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048532451 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227966052 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984286791 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392558258 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.683862949 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.287806519 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.090821815 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979537714 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98162063 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979635822 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.904680619 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062229847 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.981181117 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985269205 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.680187899 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.979913969 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054921444 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.982505882 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182558342 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.787852556 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663446774 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.981457767 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982388611 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.540776545 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995696116 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.169729347 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609244826 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425835059 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404009428 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.07682531 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.983010004 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982078664 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.226305297 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.022531765 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.607730939 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093254511 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.118629058 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.995503565 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623459396 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279537272 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.415774263 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.547200436 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.901932165 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242352287 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832611263 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04006098 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197231684 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.855867925 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.908921776 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182373668 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007951216 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986533947 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.246074211 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608601767 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167335654 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.995037888 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423446289 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0018689 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98887509 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985783337 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200508948 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465355112 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.074794059 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104670248 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997161932 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066563646 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911391211 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.994085226 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.984740144 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.86736769 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986893904 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904987121 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.105639781 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.883760829 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098774798 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.923980392 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985940528 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997375803 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09876658 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.932347758 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221039038 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.272667125 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.646080025 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94148103 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.192896766 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.360799519 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216219203 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986845823 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198578859 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516484279 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.381881491 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.036572698 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268440378 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.038834576 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269457502 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409279216 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048384422 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.672174912 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588576629 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.200496797 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998483964 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.985586536 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987365609 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98976145 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92015873 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.856102736 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.345001195 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.151243121 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200396038 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.448725195 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.040176647 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.914068718 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36989029 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122929837 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971978445 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.618666014 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.312770939 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.766803562 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.068980783 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223506869 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324120128 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.020832779 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998538504 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076346137 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001744727 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.066273335 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.297603315 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349683147 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.987771447 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.990019255 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93560535 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991914922 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.986138315 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51079101 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953660294 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.994039025 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.99780266 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.86485065 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04825071 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98852923 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989909845 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.546496382 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.502878991 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.993377555 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.658324848 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.000828234 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128375625 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249204112 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.340693794 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112960976 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.689625026 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.374439645 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.095859235 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.687890269 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915454091 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.98722224 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.928259404 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990161195 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.988683334 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992364837 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.178229668 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257717395 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286795675 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.460210396 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.047347563 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191751387 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.612678895 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.012815659 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.989080022 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993854888 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.99042793 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988890846 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.488322406 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.596499043 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989972485 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087552569 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994391849 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117812397 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.999679607 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.914403739 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991061278 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99048227 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492797728 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.080438459 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.942405875 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.302460623 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.72836186 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187282357 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034374239 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.99954623 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994886572 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.654225178 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.100219588 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916317151 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527777394 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102537059 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.614609533 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.73489019 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.55519732 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279934952 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294376924 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.304418241 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.058411156 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.204629277 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075517646 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047294262 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079245181 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928135913 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.914903373 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.625980803 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317823127 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323489687 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000073439 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210007765 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604281283 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290568836 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020633979 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.901124921 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365742358 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966417993 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007284032 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.518034709 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176298583 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074332454 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994658421 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.945159361 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313330405 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024530597 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.697807653 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008560668 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345659238 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.490139048 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223356003 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.337103221 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192240391 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.999992867 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33950458 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299099434 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1066887 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997614712 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.96586798 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.214678845 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571032111 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.849466116 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999495706 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.214334844 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358289136 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.897446307 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.994001592 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203462496 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327592223 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992621426 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.30644944 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328372848 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.104987951 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045220165 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219407259 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.752643064 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365974547 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543948403 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.466847877 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003419933 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.920020759 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.693652127 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.197298743 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.999790155 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960323616 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188133896 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219864029 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670915992 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212964898 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238494403 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.006114731 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255893305 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066157667 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.090696082 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.27351295 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.417920833 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.231627325 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220608963 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526948617 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21049234 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445274111 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.136882984 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.997994215 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201207823 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212566575 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210060789 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.343059666 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138626499 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.703758656 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.00105819 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.201980117 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279838013 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052189574 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.338098431 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152761589 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.091664154 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001814715 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071842796 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001189744 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005578891 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.339295885 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.50698559 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.009742362 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072537397 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999655088 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.562976699 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.006411714 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.001497782 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258829681 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335912959 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316764921 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.977922754 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.994492605 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996364792 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125832251 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.923706984 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003237412 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269395869 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.000396183 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470874284 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224220967 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011219155 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.268516422 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.368998315 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811717784 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106445633 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001923903 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200096481 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278278705 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276002701 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189772584 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269796973 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318569736 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.02364014 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.342596271 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225089802 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000553901 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 3.021538036 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000706002 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119657136 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.196720856 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263065622 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.505188899 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66104904 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337104021 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855705332 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00235279 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.611346311 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343501472 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260970589 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.048119312 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073484769 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00547133 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487936865 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.797045784 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133064419 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.871510058 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927210037 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.008057491 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268642573 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.241497757 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.709908442 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002912398 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266709638 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302916239 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263688207 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.048057496 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.868728482 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21593111 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001959068 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.094831717 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.217576103 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207556722 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23860709 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002682224 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.005527397 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.807420806 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927457022 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.000395428 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04694288 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.227318394 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018870558 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.515149588 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.701653567 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270218774 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040968521 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003798536 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265538321 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.523380977 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.542230183 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011962937 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200509228 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.982383978 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382209385 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.00339357 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.492566151 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.379978501 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.003286799 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.591233369 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.326271663 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272298542 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936786977 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009556822 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21688383 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.860684991 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.002724712 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002924238 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48514733 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313262922 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.739176249 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559653608 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.001657178 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.004710637 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.516356637 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116947977 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.521119529 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.101343792 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023276351 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.521554726 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.705680766 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.28643622 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246786155 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.612271489 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.726698437 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.00433703 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.00287339 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006487951 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.923852049 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.18941426 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.191155672 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271653766 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028179565 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.520520378 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114452723 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.354627338 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104212249 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.223817981 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12037884 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.525919395 seconds)
  done (took 1726.323201244 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009477067 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.037579832 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.053406618 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.051705425 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.114339444 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.114539609 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040442978 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.105870488 seconds)
  done (took 58.451607371 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.004883959 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.137952738 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.010541563 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.006960479 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.021141605 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.004108896 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.159823149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.015633922 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.064135978 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.010405999 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.007202553 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.003759034 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.94713334 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.029407068 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.005357286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.012359648 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.012508826 seconds)
  done (took 77.453985935 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.006974273 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.09437716 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.043459222 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.009838905 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.632620014 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.008274444 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.30078148 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.055072244 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.009230637 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.275358712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.298575916 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.016525212 seconds)
  done (took 91.677456194 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.018691242 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.009580902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.009855657 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.009741492 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.008814299 seconds)
  done (took 11.993501317 seconds)
done (took 2254.851219526 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.239001669 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.067892567 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109578857 seconds)
  done (took 6.103589584 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.156873963 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.19984887 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.312819428 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.079106465 seconds)
  done (took 10.685368219 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.321645197 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.387550695 seconds)
  done (took 6.636639556 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.341204967 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.038323634 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.386020086 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.010465516 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.012080928 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.011199309 seconds)
  done (took 22.966562839 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.009258753 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.009030047 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.008685153 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.009901445 seconds)
  done (took 9.9654361 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.00909836 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.740953973 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.005860704 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.018209976 seconds)
  done (took 21.7008569 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.162913659 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.123690283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.152229175 seconds)
  done (took 8.366364712 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.198519052 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.23137246 seconds)
  done (took 7.357548949 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.153917918 seconds)
  done (took 4.081524511 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.037590989 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.279882279 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.521979903 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.530332661 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.619199607 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.9153199 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.328045719 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.234964506 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.455881344 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.481953101 seconds)
  done (took 26.335016468 seconds)
done (took 140.131686389 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.355704835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.040585093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.220746531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.376285558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.251589785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.224570367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.227297975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.394653561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.078729326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.042748622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.380038791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.238621698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.177547602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.035016676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.187390585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.03313322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.252008145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.37808053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.075827991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.339377062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.238609857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.015034938 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.213009241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.029065443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.25289076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.170517468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.560541428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.03505369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.227080374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.571837853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.170870719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.482617024 seconds)
  done (took 173.206960331 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.013223102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.011472761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.010515529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.011431019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.463896715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.012947226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.010267708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.010854821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.469296313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.459513566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.011179522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.454938071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.013437914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.011425389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.012344403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.010478398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.639014363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.011922294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.011982855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.010134573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.011253458 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.288908703 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.012080401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.291401901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.631637493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.01325266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.011433538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.01240227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.011681026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.011808818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.012429834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.012113375 seconds)
  done (took 213.914953468 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.947319134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.013121738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.013101967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.011196788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.013596397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.013980605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.012773514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.012510397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.613389873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.601257103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.012784175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.014350452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.014502503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.012255842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.014193799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012885363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.013059814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.988345082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.013532802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.014874584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015079447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.806870231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.013702208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.835756607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.014051277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016151724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.012465418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.014171407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.013035673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.01475634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.015223653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.013060651 seconds)
  done (took 225.081343746 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.257590275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.015687869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.017640192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.922973655 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.018479567 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.016078178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.008948268 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.262754818 seconds)
  done (took 20.457536604 seconds)
done (took 634.599422184 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.439093662 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.269872095 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.184396616 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.039592724 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.34604409 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.089857287 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.037581111 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.104500514 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.877321106 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.114618836 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.678932712 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.06001204 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778105791 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.065972906 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.144431528 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.096069475 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.594848949 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.694368783 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.162589095 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.136403504 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.206464858 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.964656607 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.12277107 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.90573189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.700164311 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016364751 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.060132777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.596373657 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.048765501 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.178276535 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.739740242 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.337736291 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.052301856 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.035878174 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.093804255 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.070780568 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.254688598 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.051141891 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.14349512 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.750394657 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.159326402 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.784595013 seconds)
  done (took 109.122564177 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.031247884 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.026385581 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.025716976 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.026087186 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.035501106 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.025550187 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.025534552 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.025993548 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.025601775 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.02540005 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.026615514 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.034401001 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.02501024 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.034990789 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.025931136 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.026694636 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.025144453 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.035837833 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.02665852 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.025933774 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.027170564 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.027007276 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.020046856 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.027273831 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.025839186 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.026244452 seconds)
  done (took 54.668104242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.020102652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.192394131 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.269576274 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.041472275 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.022659167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.025332213 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.041140096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.025818671 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.024337226 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.023770912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.111820037 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.02649276 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040510398 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.268327399 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.037905884 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.020344934 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.020692578 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.021781988 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.201472589 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.037157452 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.041438681 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.026660519 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.042564266 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.034357378 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.024460724 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.02249695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.025937458 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.463668949 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.031672517 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.113279658 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.069973163 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.047681893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.430331401 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.279267653 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.078229298 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.031657548 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.023675288 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.117868989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.030470657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.026469068 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.044596157 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.029012381 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.272123119 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.562251328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.040392122 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.024614683 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.475034004 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.12791778 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.0642276 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.033873897 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.275534632 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.044403991 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.024480172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.025732423 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.061012163 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031582281 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.025688348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.357944991 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.038973988 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.044512241 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.029550298 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.026410836 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.208883929 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.034961536 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.194143623 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.036425406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.03223709 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.026938915 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.27491392 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.044761564 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.576262705 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.03948834 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.025420919 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.115696713 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.200411572 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.499428006 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.036437314 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.210729229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.451824339 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.051474827 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.034571234 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.457571996 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.055795345 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.034953625 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.031752475 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.027863887 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.027607779 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.074070712 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.044442882 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.483836132 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.572287997 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.377830418 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.054320631 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.043038931 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.028839033 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.359412073 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.035495573 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.027832632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.266891595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.58011494 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.044285931 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.034997089 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.556803391 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.045967609 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.047175466 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.035696801 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.280910355 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.042835456 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.071914601 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.026990663 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.034367454 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.030683633 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.04726204 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.03471275 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.027635595 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.546040462 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.138847024 seconds)
  done (took 250.764017834 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.029476121 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.025860034 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.027109664 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.025859265 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.026438638 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.028394371 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.026794857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.026250843 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.028984089 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.027638322 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.027664641 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.029976651 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.029746465 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.036071023 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.03265939 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.029206658 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.631886222 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.029114657 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.027192302 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.024459915 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.671680734 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.031813896 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.028668697 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.027107705 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.029779965 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.032113807 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.031840899 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.030856407 seconds)
  done (took 172.004017029 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.029663476 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.143069798 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.047344495 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.058960273 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.036233904 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.028559151 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.128285323 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.045633922 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.035810121 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.029259554 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.030244684 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.09087716 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.040086243 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.1284765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.059764532 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.136925717 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.132826102 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.035425229 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.029655145 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.030020687 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.059663617 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.040109457 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.090089479 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.152550287 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.047787725 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.143606373 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.051839849 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.031076808 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.030552253 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.143050335 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.048693804 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.091884268 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.059701454 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.049271887 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.149945026 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.14724499 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.134836986 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.134004082 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.036637175 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.031849535 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.031361769 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.033089631 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.144357701 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.052067449 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.032840699 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148422173 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.049472899 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.032622587 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.032250496 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.032403686 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.046052702 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.050475415 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.096254816 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.164418115 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.066883151 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.055533024 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.131602987 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.166022373 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.033405149 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.129830521 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.039631092 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.146841447 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.052343661 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.03372218 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.034576716 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.037009157 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.061137591 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.140328453 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.137252801 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.038765183 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.131760538 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.068281955 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.04241001 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.03300273 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.034215945 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.1473935 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.149865427 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.068187376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.070863943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.06472535 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.044391607 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.034135014 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.036007824 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.051519407 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.039340488 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.148442312 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.1498541 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.040171378 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.034073175 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.034882712 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.034908544 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.059702799 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.156110542 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.069909858 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.140343791 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.100069196 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.110577747 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.048972865 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.048124706 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.039890227 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.098531017 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.050459619 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.045420084 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.35760752 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.094494329 seconds)
  done (took 220.051043561 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.405863472 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.082518681 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.091601971 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.358018598 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.423052075 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.008924583 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.084323917 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.081139316 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.105543687 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.267165231 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.15647204 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.099502983 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.069461499 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.057117475 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.07962955 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.102008449 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.09103479 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.422949183 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.29225778 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.578959883 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.076090492 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.370255632 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.425037633 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.658050751 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.134514548 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.514116715 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.672997979 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.211098735 seconds)
  done (took 67.87933312 seconds)
done (took 876.425044592 seconds)
SAVING RESULT...
DONE!
