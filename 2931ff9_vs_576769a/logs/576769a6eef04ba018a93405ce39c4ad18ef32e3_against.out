cset: moving following pidspec: 28215
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.64220715 seconds)
loading group "shootout"... done (took 1.238730985 seconds)
loading group "string"... done (took 0.4365984 seconds)
loading group "linalg"... done (took 8.142093699 seconds)
loading group "parallel"... done (took 0.154301936 seconds)
loading group "find"... done (took 1.428075718 seconds)
loading group "tuple"... done (took 1.983966311 seconds)
loading group "union"... done (took 13.100076309 seconds)
loading group "dates"... done (took 1.375347314 seconds)
loading group "micro"... done (took 0.20881347 seconds)
loading group "simd"... done (took 4.392885168 seconds)
loading group "io"... done (took 0.988585239 seconds)
loading group "random"... done (took 8.704801143 seconds)
loading group "problem"... done (took 1.670771322 seconds)
loading group "array"... done (took 19.795312423 seconds)
loading group "misc"... done (took 1.555224241 seconds)
loading group "scalar"... done (took 40.22756625 seconds)
loading group "sort"... done (took 2.984277245 seconds)
loading group "sparse"... done (took 11.874586058 seconds)
loading group "collection"... done (took 17.728723419 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.552221296 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133906557 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146011621 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130717916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.162981387 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12346626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130015998 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088406328 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.91925868 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157961717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118938483 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479636303 seconds)
done (took 5.576454548 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180149941 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098861152 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086568896 seconds)
  done (took 1.280096748 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069471341 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.137029049 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071634293 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071792387 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072107539 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071621681 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071128757 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071768423 seconds)
  done (took 1.66179818 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079344185 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07419633 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074505877 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073518994 seconds)
  done (took 1.398029353 seconds)
done (took 5.697943112 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.261008124 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.115941447 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.319562334 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.372974718 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.493465592 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094714919 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.076544524 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.07367518 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130347111 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344383516 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.123906537 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.204112771 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104017639 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.189143534 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.037689327 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.137958022 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088352767 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.13039582 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095749544 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134563825 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.395868712 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080454842 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.089903097 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.074743528 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.072202473 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.656039344 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668100338 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1582469 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.089279705 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.107608485 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.119391675 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.651726127 seconds)
  done (took 10.830371722 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111771998 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104569559 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07195553 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129111881 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104439118 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072746459 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078501652 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071966301 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094022567 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132768895 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095780387 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114489782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069069497 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072549776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09008462 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202280274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084081223 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085469764 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071528248 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082711901 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111861462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082087975 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083643972 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083507441 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133322483 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173076662 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100625595 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101215736 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070045918 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085766841 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118603322 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133155365 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070146613 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073107546 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131493625 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097839452 seconds)
  done (took 4.730550843 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.187340571 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.098708881 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.117171755 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.660447885 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070813866 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.172382959 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258425826 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.079890746 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.517345259 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.170474457 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.160133034 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.158692096 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.128866551 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.073946543 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.376159089 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.129115789 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.439811537 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.07563793 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.074018429 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071216673 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082924066 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.074411246 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069792949 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.085098314 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098253343 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.098110412 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.213120769 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.069703052 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.331395725 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.074909842 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175082906 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.092465692 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.373335408 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.074243985 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.101403686 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.419971501 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.131145905 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073758455 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178310412 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.137534446 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068169614 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.125418019 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.085065002 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.074482006 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.076143586 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073133867 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.085268492 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.085351429 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.107135833 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.072490332 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069604257 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179244561 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071051135 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.074210301 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.075369287 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158299583 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07255848 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071632411 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.168063343 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068568205 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073257648 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.10060068 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.075957179 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.096312266 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137569551 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.339129878 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.044542073 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.072635534 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.199927746 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081783426 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.070673536 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.090299871 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.07078552 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.073887966 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100442485 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.074752595 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.087450904 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.077722881 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073052908 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.114765712 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071150143 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.074269986 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.07048805 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07642846 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10453078 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069602665 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.481784105 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104289029 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.070309207 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068440909 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.083474035 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.110946846 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.071737844 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.079019422 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.072330114 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.076115683 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069573 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071902247 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077778227 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067890265 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.204215484 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.075101227 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118282238 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.039779615 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.078698299 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.073532821 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.079644153 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080403674 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.077318773 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.073982537 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079592887 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07662577 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071947573 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.135572295 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073518667 seconds)
  done (took 23.318036031 seconds)
done (took 41.163671556 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.280983879 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097763153 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096161557 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095244813 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093984032 seconds)
  done (took 1.862357289 seconds)
done (took 3.041773191 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.120808702 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.070939543 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.112597823 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.112096868 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.069039135 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069009126 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.105720453 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.069128768 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.105989618 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.109835635 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.112287501 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.111461758 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.069110554 seconds)
  done (took 2.439718583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.078772299 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.089216812 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092149465 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.068948988 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.079035727 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08962562 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.069384483 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.088092387 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097208432 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.087146471 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.086612231 seconds)
  done (took 2.100791636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.077082265 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.090023021 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092617303 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.068811535 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.080651406 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.089977475 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.069774532 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.089743247 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096415551 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.090916559 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.0902483 seconds)
  done (took 2.101651449 seconds)
done (took 7.812556929 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085186173 seconds)
  done (took 1.241480118 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.612743928 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.961829173 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084683135 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112405893 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.217904464 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.128029377 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.296190834 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094531718 seconds)
  done (took 8.868121322 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.107383059 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077146908 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09140069 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078553061 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079285779 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077752999 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078910178 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077517032 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076813429 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078210327 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078641204 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078997566 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07900662 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079151475 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080090521 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079771656 seconds)
  done (took 2.554802266 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110526086 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108964608 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.084701636 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085917711 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0824771 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083131756 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085805765 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.084197407 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079014377 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081193486 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086069812 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092533651 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076513895 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068663251 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08008335 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081812542 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076084068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079764535 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080055797 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081733767 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081066954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069119503 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079320947 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07982526 seconds)
  done (took 3.293443764 seconds)
done (took 17.129288353 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.128146048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087835359 seconds)
  done (took 1.38838369 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085526991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087160615 seconds)
  done (took 1.361585054 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086943937 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066625744 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.095001761 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081839666 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068410115 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067375738 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093231363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068223942 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068043786 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068171097 seconds)
  done (took 1.954203325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070782895 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081606171 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075702502 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085266368 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076859108 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06919131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075485534 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06993758 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081890566 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067707276 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074172054 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089335147 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073997142 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091217679 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075661158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074542989 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076597832 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073290227 seconds)
  done (took 2.575309499 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069181169 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070086866 seconds)
  done (took 1.339153066 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073095216 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068980901 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072240541 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073029516 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068940101 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067087698 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068632789 seconds)
  done (took 1.6849302 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397083384 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.132222886 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.354155021 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076478463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.087276693 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271424582 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068989815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076151763 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076061873 seconds)
  done (took 2.783562537 seconds)
done (took 14.292714116 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087484228 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092172778 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10559274 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469983932 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098223776 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071951424 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120317407 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.198626029 seconds)
done (took 2.459688246 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219536734 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.5342986 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.851102604 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06872978 seconds)
  done (took 3.657568914 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354995024 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094032965 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082102801 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072003941 seconds)
  done (took 1.814065547 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071837751 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075240289 seconds)
  done (took 1.351875367 seconds)
done (took 8.257180245 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070313263 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096225556 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068468332 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069493036 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069248924 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06873157 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.068805941 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068999028 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068881989 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068848373 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068960182 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068735897 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068768953 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06899955 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068820608 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068706788 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068844142 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068782272 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069015383 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069325629 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069130238 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069191364 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068962698 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068996616 seconds)
  done (took 2.920216918 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090154641 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071321477 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073551278 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073027276 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074319719 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073057275 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07403514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072067049 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073532156 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071662056 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074173117 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073639567 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070959945 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07400329 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071279972 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073710371 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07373956 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070991761 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070741791 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073756676 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073193172 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071298695 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07350092 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07334099 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073537817 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073783927 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071402178 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071496305 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073674592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073958165 seconds)
  done (took 3.425053389 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069966418 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065686042 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066550149 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074982978 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065693918 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.066527567 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06650204 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064839942 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065645048 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.06721965 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066347692 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.065485233 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066867399 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.065256848 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065421131 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066913519 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06963126 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0834016 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066287727 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065457902 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07012494 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.06575167 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065530691 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06564235 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.066138719 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065062179 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067746571 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065595614 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.065044622 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.066728204 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.065065157 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069326411 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070174499 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.065157553 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074455976 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069403911 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.065342777 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069161962 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.067247302 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065065718 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064969225 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064917545 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.065519448 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065463823 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074559126 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.065474019 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067052895 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.06594108 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065545284 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.065076268 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065327366 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.067940587 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071195187 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.06756892 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.065584942 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067090848 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065315396 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066042549 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.065331046 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064748358 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064768987 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068000549 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.067220783 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066221604 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08324617 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.067271513 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074500812 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065479981 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066487378 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06859562 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.066392503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080852125 seconds)
  done (took 6.090015217 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096017618 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095550675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070903895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071111149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066131013 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066155624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075500789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066560447 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071744499 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086757697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066134396 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070874339 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071457077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071834489 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066238634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071212857 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076187968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066410898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066443747 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071120073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066961333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07520261 seconds)
  done (took 2.843594989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.166257659 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073327012 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112887576 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079164204 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076938018 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079382003 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072818817 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07288426 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073069514 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073394687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073926703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072960184 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076181973 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074645835 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073813793 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073194292 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073747103 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073485248 seconds)
  done (took 2.69486107 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084260024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072055062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093125686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072446773 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072289521 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07180252 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07688361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078974585 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072207404 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072108285 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078274893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07188281 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072024397 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071731754 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07175782 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07192251 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0721713 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071610156 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078435651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07723186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077142985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078113715 seconds)
  done (took 2.881701899 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085234181 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071440174 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088382445 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07355677 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066418921 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066641196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073224042 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070953086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07344108 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070610446 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07091691 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066955056 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073793968 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071650966 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07400634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070938341 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071364366 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071653556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071048923 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066016287 seconds)
  done (took 2.672840874 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091018212 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070368555 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070214183 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07806145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06973054 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079149787 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078135824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069777358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071183233 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092327641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070074726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069833218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078007005 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07489811 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069898957 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078958446 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077939715 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080321995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06978646 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069961324 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092025161 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069964661 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077940643 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070483412 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069811351 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070223642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070237636 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075672625 seconds)
  done (took 3.332693534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070614236 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069184511 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068793462 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069135704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068750214 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068678442 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069298538 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069040249 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069381296 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069416479 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069059711 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068807056 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068522948 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068484963 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068675586 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069108932 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069439105 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068877017 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068899683 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069320461 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068430147 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068761942 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068157484 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069317809 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069707091 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068822431 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068841684 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068809246 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068291894 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068944841 seconds)
  done (took 3.300089088 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081026421 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07802538 seconds)
  done (took 1.391602374 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069006214 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08551346 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065088781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076904529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07562821 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070164215 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076976986 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076365776 seconds)
  done (took 1.821814127 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.083882295 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.109232749 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.070130799 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071854308 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081354948 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131518826 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089976707 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.07862529 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.081453404 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06915963 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.069809677 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09033301 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.068400572 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080061705 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071347714 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076177986 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07668561 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080843639 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080525388 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065787997 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08325744 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072478564 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067423739 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070818023 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068610276 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074236789 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084263566 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08020286 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076946272 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064839472 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.090464128 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066311367 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068794429 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076548114 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080262125 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.067588829 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108010813 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.068483086 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.074516931 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065655731 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.080095947 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091100349 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080400558 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.086845153 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069395095 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0704861 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065546292 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.069660278 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06981226 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077163171 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066160796 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07404919 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065865208 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.070637166 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077366911 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068307163 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.075767994 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07627116 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083519823 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07866335 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07578491 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082634647 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076254348 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.07973026 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068884195 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087228528 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.070036722 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079110644 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.08136318 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.069894633 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084449949 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065802444 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064947497 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067230933 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103754517 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069651693 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.069145735 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.068259552 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066925921 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.069916893 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077118039 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.075739275 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074443466 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.072864118 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085252076 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078534701 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.067274824 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080052963 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.087936067 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0690368 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067854678 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.085228767 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069435766 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066507765 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090317509 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07604845 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.070104467 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070631492 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069574517 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.082538165 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069633318 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064966737 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075237093 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.069887502 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077851962 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.072939562 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074421091 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.066708775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.077661563 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.074497088 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.069459169 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064358863 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070469377 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.06785397 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064211917 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075411504 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.066613862 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.082062434 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071599233 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.080923315 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.08167438 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.076720406 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084438987 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.066922804 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06397143 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.08712053 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075612557 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.068658581 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086342922 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065301406 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075614885 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065122625 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06958196 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.075188032 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064603412 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.200935563 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068368898 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.078897381 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.07107646 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.070478837 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070280698 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076276032 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082293016 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.070259755 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076987198 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069735779 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083694076 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077469098 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072027386 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.072996747 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.069327842 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080267407 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07341215 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079095936 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066112054 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.069098735 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06784541 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078377843 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077921463 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070172881 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080786238 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071096725 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.069503868 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068699046 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.069443528 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069500217 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072696543 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068701491 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075766303 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.077482746 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.083016878 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079388413 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076536703 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0663695 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067003988 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.070703763 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066878204 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072516706 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077993314 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.082706799 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.080625465 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089302197 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.067965248 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076183146 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070336576 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08571743 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079653966 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.066032662 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.071793985 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063388632 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068189183 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074765376 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076173617 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.079896395 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079009797 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069612848 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068591893 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064919782 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078939329 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.066176936 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073061542 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.075606814 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072205673 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.065820262 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067686625 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073814473 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068486236 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067007858 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.084046827 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078216053 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06625036 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.080679681 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.068541147 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.079590722 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066283892 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069343248 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07149656 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071411669 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.077567283 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085916249 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065382779 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06953735 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08691757 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.070403462 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.071055159 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074385167 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.083559228 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071820191 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075377725 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077437807 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075620465 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070670749 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074737179 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06910659 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.077984569 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.07311831 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078921799 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.067841225 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.085949689 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064902153 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.084439779 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066815582 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.077679677 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068722207 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076437524 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.068507339 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.084444077 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.070300658 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.068602665 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081165638 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064367242 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076759611 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06511868 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070043681 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07136412 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.077000357 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069995277 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075158284 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068749599 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07469138 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069441039 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074388641 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.076549161 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06961332 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064921067 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075603094 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077665007 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074076461 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.069133587 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.069008126 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067892435 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07716333 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069394226 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068163987 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07585904 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072046591 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.208371787 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.072100491 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.072896923 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.071209032 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080379806 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077848296 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.087890786 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075999305 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.075011449 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.078734726 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066612769 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087602174 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.067269053 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074446243 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066235251 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078183849 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.078647455 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.068594864 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08720627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070629725 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075225253 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08324191 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075919265 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070493314 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088586778 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.073716367 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.076918631 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075116819 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071780094 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073648003 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070828772 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075564306 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.079566599 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079989296 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068637141 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074202635 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076821106 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.070374485 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.079849291 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070804519 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.075814687 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071758568 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065711992 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072127011 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078770209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071151654 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07250574 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067897374 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065000115 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068810415 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079204652 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.071816003 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075443006 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.082400265 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065673143 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.069465215 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066893373 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070287486 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086954537 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078365659 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.074744562 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072454441 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066116996 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070129055 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.070509246 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.068198089 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.072953936 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065783523 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066473465 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077815257 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.070871966 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070472857 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068409585 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069948432 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076074688 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.073902286 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069247681 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073133181 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.067372686 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071327201 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065754315 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070061338 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070804435 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065823237 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069909015 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.077279165 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.084215138 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072685289 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075179204 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070771568 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075393738 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083826225 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.078260313 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070165528 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076691528 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06581489 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0884468 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076474467 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076138674 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077065874 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070561074 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08580535 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071110645 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078230392 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.086536823 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070363996 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.077882567 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066710996 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.087269428 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073804401 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066373101 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075063345 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073300212 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071618099 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081603611 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.06814061 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07501927 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074507492 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068716689 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.068963636 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.069381237 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07526264 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083297844 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.067692079 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073214345 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073745337 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073882768 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069831445 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078059551 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.074013379 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068096584 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068763838 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068394604 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06767844 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.078517477 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067083475 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070809738 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069857353 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065361263 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071596897 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081474853 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.216310549 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076804818 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066768503 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067524842 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.088970246 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070557839 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.073428136 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075996248 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075758521 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08021473 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.078365358 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086372796 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068917066 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072478647 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080258644 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.069292353 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.068480531 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070436643 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06978306 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.078405297 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077439152 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074965372 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073048706 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073637188 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08026982 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.070390942 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071570605 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.076933374 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.069856645 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.077649296 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075200211 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.075675135 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070899682 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066007656 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070436407 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.078541047 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074906125 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.078142754 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069648518 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.07993724 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.083178443 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074916611 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.07402307 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066809991 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.072766888 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.077220875 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.074619831 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066857798 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071339464 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070218317 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.078299597 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0777618 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071322655 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06687453 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086151137 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07527876 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.076943057 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.071117865 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.071028058 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067801649 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0664544 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07832971 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066727141 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.070302228 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071357404 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.070702647 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.085905592 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075532209 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.087132838 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069927064 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070471804 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066845521 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077044978 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071037325 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.06776691 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077451133 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06598289 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.086794469 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.080512401 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.077328011 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0662111 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071207929 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075469661 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.083314688 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077742099 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.078054093 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.073238195 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077917607 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.070076564 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.078372016 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066805765 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065432394 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078684313 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075393818 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078820801 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066892329 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.078042156 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.070294464 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074863089 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075384905 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070588297 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.070234808 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070709065 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077381989 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071187572 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077419296 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071241787 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086300903 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.069247623 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078390847 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076291383 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.078429311 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081683118 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082500235 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.078706329 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068720798 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07468743 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075208277 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.068439265 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068023002 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.072759097 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.093076665 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0696888 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07086307 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.082515465 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.077029454 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.066268484 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075449463 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067569608 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.073565005 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.065351859 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.073341124 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.070645099 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.066845325 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068347548 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069141006 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064508494 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065663577 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065882382 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075992597 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.211943754 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071187274 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089283309 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.07194137 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.077430537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080013133 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074096884 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.070420941 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06604694 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071266042 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.079402369 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.08261489 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069897849 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075779076 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071000549 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.078895163 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066446678 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076265236 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075513021 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076131313 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067117422 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06866097 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082534225 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.083012098 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071266778 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076861193 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077336937 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070653051 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.094685297 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076829348 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070303547 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07951669 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071134168 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066258325 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066865416 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.071273212 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079876868 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067548175 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.070813346 seconds)
  done (took 45.988276863 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108607478 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068245768 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067172826 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06720126 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080604097 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06771077 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066693788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068500143 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068054963 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070711648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067124565 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066372367 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076541777 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085199857 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080029451 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072631361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06674369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068173742 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066755156 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068314961 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077551713 seconds)
  done (took 2.87053607 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076815944 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084138453 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080526842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087122001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076855222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073329922 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080883178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07297182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082477937 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077980886 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08205832 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07294061 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07816938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078486478 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078186293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073764963 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082116505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076606294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073352379 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081211423 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073145022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080685582 seconds)
  done (took 3.04999866 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070151023 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068673584 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075773087 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065753868 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.066275803 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072509128 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.065942968 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.070227488 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.069959757 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.069713056 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074756486 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.067797138 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.066511321 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.070914356 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.066018502 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.067466678 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.116072723 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.067525469 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068603342 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.066232871 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.070153355 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.078473634 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065857401 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066735089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070417152 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071311815 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.066302624 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.070158112 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.067338303 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070299691 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06841383 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065810944 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075232862 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.076701725 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070231476 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069630647 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.068211278 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071142844 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066303743 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065901579 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.075661301 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.067944609 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.06633739 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069686921 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.077519805 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.066498357 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.066009697 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074935098 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065723122 seconds)
  done (took 4.781408325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083646007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.119477543 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073501385 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098520681 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083476114 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076021063 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072653469 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100516212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06885759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069671197 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084602296 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0852194 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071124333 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07392905 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074612875 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071324485 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072001971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070153144 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07500119 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070670185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075396798 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074507114 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083939704 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083625925 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072372576 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070222067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071121021 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072799659 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083376728 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076062812 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073171824 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074290039 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083766192 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074842956 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070321986 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070406666 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084897796 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.071071153 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071461165 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068415141 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070819936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073120478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074251759 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085503715 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071169962 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074926664 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071042671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067700525 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084633042 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070848867 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076861643 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085593378 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07310793 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071674782 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073188716 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084601007 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07199169 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070018403 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071633693 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083641596 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068478152 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072449973 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08507399 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0705534 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076297267 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085186409 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074827702 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072380304 seconds)
  done (took 6.703479466 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078432398 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101240323 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088229911 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087896397 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079170428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079773956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079627668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079562697 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079015498 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084480272 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079629316 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122259482 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073429478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081720361 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079949137 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080477887 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080198523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079584079 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079592859 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080406958 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079883379 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087215031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079425452 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087038063 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083857301 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073902453 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07923486 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079267141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088047864 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078888482 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083427278 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079297003 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079190288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087449425 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083553929 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079377561 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067429881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0790134 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079951493 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079435762 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073944063 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08748129 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07922476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073764453 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079498556 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079105509 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087339061 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083854938 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082213137 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084872745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080021228 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087937462 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079861873 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080081185 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087714349 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092203009 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088259339 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088052081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080712001 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087460784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087867914 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09256213 seconds)
  done (took 6.493274962 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086593581 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076201553 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089420636 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069103632 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06641378 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077934145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066359869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066311159 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076049369 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076239681 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079649229 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078382374 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080826856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078341655 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077954092 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081058221 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077657391 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078184464 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076291502 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078185274 seconds)
  done (took 2.897354586 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081559465 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088618478 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072125326 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077460196 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07267207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077265676 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07182397 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073014818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0727795 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073043148 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080056837 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080585031 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07261969 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077759269 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08015539 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077533592 seconds)
  done (took 2.578547288 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074364603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077270452 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083301592 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068341562 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072638665 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067950535 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06798382 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066549463 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06702572 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081765502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068017711 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079786449 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067911477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066666934 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067267616 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074078984 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067021201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067565287 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068055306 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081854511 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075179986 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069457476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071953446 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067781993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.074230021 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076870249 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070537581 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071865324 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067598948 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068476459 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074156748 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075404654 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067655937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068633302 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067308972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067642994 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068375424 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068388559 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074360139 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067973004 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066146623 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07347363 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068583886 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069530509 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067204895 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069399166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066854348 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074056789 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068433162 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073655313 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068574295 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07117295 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068632215 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07743745 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071553975 seconds)
  done (took 5.252680304 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086251925 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072666487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065848645 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066051053 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072118529 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072472075 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073011894 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072270962 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072806711 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084448137 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072671114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072084879 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072746575 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073572268 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072651544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07253952 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066187451 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073175421 seconds)
  done (took 2.676044843 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078256143 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071739607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077260175 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072158407 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071793861 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071683074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067008675 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066535164 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066660451 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071512839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071149904 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071148124 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067013615 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071123768 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07158811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071505714 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071248812 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066264801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071243454 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066674805 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071431042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066739253 seconds)
  done (took 2.906751868 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101422252 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088911261 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.151630151 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084039998 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093945044 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076336142 seconds)
  done (took 1.952499507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098069524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105559949 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071650184 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071931868 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079560978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075845708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076114386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076260985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081875944 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082489742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076788347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085325695 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081944477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085237461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079349016 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079338529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076463538 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076433486 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071799704 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089314931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076676164 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082152791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077064099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076845988 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076906848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085206837 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082234489 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082897435 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076496361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082673192 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079672327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076828647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08253936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082989737 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072286338 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082297344 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077372748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08958168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080102874 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084962101 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071875811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079617054 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081575987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079251996 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079241024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073888014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078677678 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074957958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074111522 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091944232 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077265868 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081990909 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078047569 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079755985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080604186 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088180068 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080319947 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081916356 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07709645 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08005865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081942705 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076903695 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081910381 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080183353 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07700887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084614868 seconds)
  done (took 6.66023557 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114179922 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072962923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077530877 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083237617 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084387541 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077155161 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076658156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076569412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076645559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072407442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115945949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077039297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085209373 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085084029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077258882 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076913395 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077450371 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085016906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073025172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091790844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076853937 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084542568 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085127846 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084636724 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08304563 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079492831 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077246687 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07663612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076985364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077171302 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081880814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077413167 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084838081 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07234988 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085161825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076982282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076901239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082102492 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076952524 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079891833 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085042743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089131236 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076729209 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077033171 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083017381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077248347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076788113 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072409667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076553074 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072663528 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083309327 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082860215 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082921458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084495015 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076864018 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076745254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076961524 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077169275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076932412 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079638032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084753941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076521945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09192606 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076586372 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076531826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08486173 seconds)
  done (took 6.707699329 seconds)
done (took 136.099118967 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220664685 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186563996 seconds)
  done (took 1.748106375 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.079782802 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.111850499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.088201337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.139243144 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073163597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.109791515 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.107444025 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084940654 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073323044 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073706133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073441357 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.077199921 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.141681324 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07295171 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073256063 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.078878113 seconds)
  done (took 2.823070574 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112204832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.229232893 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116083504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.074009152 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111550294 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082906767 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073607173 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092982646 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082059159 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.075315562 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.082776289 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081425945 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.075312341 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080349446 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08038238 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081583178 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.075560878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.082787268 seconds)
  done (took 3.059631727 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110838681 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.099871355 seconds)
  done (took 1.582492279 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.182966364 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136392128 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207586994 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.363844062 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.160837915 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.432188945 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144527978 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143243885 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116220077 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14011428 seconds)
  done (took 3.39198645 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.111342577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216543761 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312577461 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.131613212 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080826362 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123703505 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.131400816 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086369327 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087936359 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087520152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087372935 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083460838 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107343186 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.082881423 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080831143 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083529023 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11113187 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079668746 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.081047128 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08201702 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109837929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074934852 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.082479977 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079855604 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084948097 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084669532 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.075482677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074135498 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08194566 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080900219 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.085700449 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119243362 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082140629 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109195861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07607425 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111649912 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081468396 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078508304 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080923361 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078926913 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083455977 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.083723213 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08320879 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083240038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.075770742 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.083351176 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.076155601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07405093 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.086257718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075604028 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.086667522 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084789433 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.112668685 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075862817 seconds)
  done (took 6.548399812 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.118775962 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114821165 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076369845 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121358568 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112951127 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079062858 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.115364335 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108792185 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.118314781 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078853463 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076609695 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078957427 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090323079 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.092932425 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.129312189 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.116325267 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079774184 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076321703 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114743787 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.114269354 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074536813 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110813545 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107354608 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.117975587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07572579 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079055442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0764788 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079149372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08325759 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085778035 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077697706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.089483085 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.096244864 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085035615 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075271593 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076687696 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076891097 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.087155729 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086507827 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085939126 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084442877 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075354791 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076405094 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077059132 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078440359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075446231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085560791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.087675024 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085266022 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076751124 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078760136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07672374 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077604991 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087229663 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08428039 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.088562896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086833702 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076608658 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075779792 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.081572477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087450485 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086807244 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087260336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079489237 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085394533 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076554635 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090713835 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091977326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07664198 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078206404 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076237037 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077443047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077615103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083317557 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084302675 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078312994 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077301584 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076072586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086530576 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084827015 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076660296 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083662181 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075101635 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076662806 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078945213 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.078467649 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084318573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087147905 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.078598336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076298261 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077072931 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076302872 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07505366 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083221895 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086883745 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.086596217 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08481255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07773109 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.085060945 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08506686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077939513 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08465827 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075183449 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077003082 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076485198 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084438541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081993918 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084301594 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076687083 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07544678 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08278094 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085720054 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07565588 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083951124 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085028811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08455423 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075349462 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.225315928 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077767155 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08710067 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076299924 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084896022 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076841011 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086993528 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077748852 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.076000991 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076296615 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08604368 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07936426 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077464464 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077698396 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077203959 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085792881 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088945184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080003456 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085197538 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085857271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076860622 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083387556 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073630009 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082361331 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074505074 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074856457 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072150123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08845127 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077119306 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077122342 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077591077 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087209375 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076943102 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086916943 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085708886 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075694076 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.091336818 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087099209 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084559303 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087042967 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079291653 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076958986 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075616726 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077921185 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083694128 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.087302865 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078993462 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075930693 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084402321 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.087222039 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075672689 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085321716 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085698782 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085580575 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0774411 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077101534 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088187381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0864768 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.086286865 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084846076 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085903648 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.077619541 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084842592 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084525688 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077569034 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092419412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07698938 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.09004601 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085612024 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08281739 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082379074 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086331227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086488057 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087755818 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.091155062 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07541572 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07515459 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085281937 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074964894 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076278798 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.085561537 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.078774847 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.078619034 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.09168271 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074057105 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083553793 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072764918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08364275 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072510363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075419694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088934349 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076966316 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078633825 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086810808 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.079892908 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084413103 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087254774 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085238453 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076000526 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078830296 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086884902 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085448361 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076141092 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075911828 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078497248 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082785465 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082472595 seconds)
  done (took 20.25984827 seconds)
done (took 40.797033663 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231649358 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174696375 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202041635 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.126265655 seconds)
  done (took 2.215826558 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123178373 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111587565 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096973598 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070298917 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105965391 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070109307 seconds)
  done (took 1.993657784 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335370924 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.223323335 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198207069 seconds)
  done (took 2.166461534 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.23049959 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.224391353 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.484064219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.530591519 seconds)
  done (took 2.989682198 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15701923 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093770431 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069577325 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088214416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141626042 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166666923 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.106642159 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130930699 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081002589 seconds)
  done (took 2.50978051 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.165152917 seconds)
done (took 13.475110419 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.214441477 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.229572737 seconds)
    (3/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.241167136 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.105601448 seconds)
    (5/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.080050895 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094654771 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.081460436 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074079288 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.185141811 seconds)
    (10/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.196310843 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212045626 seconds)
    (12/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.208884735 seconds)
    (13/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19416428 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.082911169 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161435291 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.138901898 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.157917586 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.225477201 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080363844 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.073238509 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072241328 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.188999647 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081286282 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.189169199 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.080030711 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081982385 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126930093 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092025123 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.153759619 seconds)
    (30/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.084844315 seconds)
    (31/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07157484 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150584574 seconds)
    (33/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.116768482 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09141718 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.211831433 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.254108884 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103500165 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071255432 seconds)
    (39/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.084547119 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127018599 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100476154 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.189577681 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078410327 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192260444 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080893171 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08375625 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070246635 seconds)
    (48/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150552719 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097646089 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192933631 seconds)
    (51/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.148471078 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.080956878 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.150492141 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.083439584 seconds)
    (55/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.180795123 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076986396 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.202899829 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087005333 seconds)
    (59/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.218459449 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.071935128 seconds)
    (61/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.209032879 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0945755 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137832105 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.168347858 seconds)
    (65/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071589483 seconds)
    (66/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.14393697 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067753515 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077459486 seconds)
    (69/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.183122779 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068323107 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077881805 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076204189 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067118498 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.097932249 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.14780931 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185844825 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100753769 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084716245 seconds)
    (79/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.071767273 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099654409 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077582999 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081644352 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217109126 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078723567 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069962717 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173289769 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069457653 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100246224 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.128475696 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189990512 seconds)
    (91/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147513291 seconds)
    (92/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.081610742 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.236122267 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084258203 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079866055 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 0.182408723 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072323607 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231667744 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.090848801 seconds)
    (100/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.130607653 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077786543 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071842169 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080371288 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189873146 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075701763 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.070045732 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076362046 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.189086336 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149925207 seconds)
    (110/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143943816 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097515904 seconds)
    (112/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.069476479 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06948855 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.100238081 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069568259 seconds)
    (116/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06970616 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097203228 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166492997 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067894014 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095718872 seconds)
    (121/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069692736 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069097228 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199902747 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091352959 seconds)
    (125/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.077381133 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080223071 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068707197 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077777617 seconds)
    (129/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069946764 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067745561 seconds)
    (131/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095055622 seconds)
    (132/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067752738 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069798492 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071262866 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173208351 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080290211 seconds)
    (137/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.071142838 seconds)
    (138/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.080530623 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082238561 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08339582 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070723135 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095962359 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20586 seconds)
    (144/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.188649138 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132799274 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07973245 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178649243 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082438464 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077613506 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097997688 seconds)
    (151/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.143216932 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068837225 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068901088 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076488974 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175827475 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095058205 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.069166179 seconds)
    (158/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.182097407 seconds)
    (159/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.079922654 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069924722 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142473714 seconds)
    (162/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.072241031 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081026411 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.164057057 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085680395 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069970981 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070454301 seconds)
    (168/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.102815677 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.210542981 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078019943 seconds)
    (171/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073565484 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073337185 seconds)
    (173/309) benchmarking ("sort", BigInt, false)...
    done (took 0.261898294 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069588489 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068024557 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076545912 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067726061 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072487922 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069516805 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173157456 seconds)
    (181/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.068476406 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093328131 seconds)
    (183/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067721738 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124570037 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068805391 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06820762 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068204806 seconds)
    (188/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.069072581 seconds)
    (189/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.096284664 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076684997 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068810214 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.166617464 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128582813 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197902818 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073817605 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070397398 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.100370089 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07114672 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.100306415 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127569995 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078035725 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074232098 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070059594 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077800695 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070242926 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089345106 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096066637 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06929414 seconds)
    (209/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.134201298 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06826499 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078440703 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.249602259 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150978323 seconds)
    (214/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.071775817 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07395873 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.101594008 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071222827 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079631292 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078529095 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.095761784 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070172352 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072024767 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070635279 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086072772 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069409381 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071263743 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073174616 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099629109 seconds)
    (229/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.07173411 seconds)
    (230/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.086583274 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.210858311 seconds)
    (232/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071591232 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071670929 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086308675 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080881172 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13296358 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 0.141277835 seconds)
    (238/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.080450503 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072315143 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.102574504 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071072023 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.14130374 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19031069 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072031427 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071410469 seconds)
    (246/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.206385731 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073046816 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080256544 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070954235 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070501003 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 0.140657007 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071756784 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173085553 seconds)
    (254/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.069025704 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.0851547 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071242851 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.15397667 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.179155214 seconds)
    (259/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.212969898 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079114224 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069829157 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.097346834 seconds)
    (263/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.074925178 seconds)
    (264/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.069416293 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071877732 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071112693 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072969876 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135534978 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071131604 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070576105 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070848349 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078700275 seconds)
    (273/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.073774465 seconds)
    (274/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.072850901 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071762891 seconds)
    (276/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.072748936 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071889977 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070417495 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07541404 seconds)
    (280/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0732604 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072683783 seconds)
    (282/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.071294953 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07093962 seconds)
    (284/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07254796 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137598569 seconds)
    (286/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.072420554 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070871865 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070805619 seconds)
    (289/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078526641 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117830198 seconds)
    (291/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.073006959 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079726553 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073803852 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.081658148 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079911302 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122408933 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071503038 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.099795919 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.132441994 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.070577607 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153087355 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078294794 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073643498 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070351001 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074081232 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071302278 seconds)
    (307/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.075555643 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070795137 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.130007496 seconds)
  done (took 34.954042668 seconds)
done (took 36.381284545 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092182736 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107522506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078358011 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098515993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086852303 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102559846 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077911932 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082749174 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085474284 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08407798 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084202338 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075187356 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079204413 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079429289 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07753431 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101896331 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083412857 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077497482 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078342942 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068264907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077829965 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069130093 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068387995 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074924455 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0809713 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077328687 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079173161 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078597247 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069134321 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069008848 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073451303 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077721311 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069139253 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084693176 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080764101 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.080553642 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082119718 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.084756933 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071529348 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072202593 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08227501 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.072068752 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.080325243 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078690714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076505872 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078303177 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081006951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085170358 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106648322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076833303 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082570783 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083852392 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084322107 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077384852 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077367969 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.080695555 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077537468 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105783374 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081085798 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076613218 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082062733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080930107 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07793669 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080422319 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080837963 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082757514 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08416291 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077835316 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08236777 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078600552 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071577854 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079868842 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075580837 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073387039 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082505202 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084854473 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071175313 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075624409 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079723796 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080276968 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071931348 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07599057 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070802921 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076271606 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075715833 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.078216388 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076369585 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079057959 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.071264054 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08030789 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078748592 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079552988 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070835405 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084604084 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072133404 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077498676 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071454894 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07147329 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070906587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076627174 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071647764 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07600578 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080073252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070664966 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076211078 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086193112 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071448678 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079129134 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070630388 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.071328697 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083963707 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082674329 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071130595 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076012875 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070371538 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076292799 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070529164 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070954615 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.07086794 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071162944 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075499091 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071381911 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075427462 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075958839 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083919848 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070730171 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075355137 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074973979 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071447421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078199692 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071154466 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070920113 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070268567 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.085351764 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074812011 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070802309 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076117065 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074714958 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079081744 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069563432 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079697326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076187988 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074658791 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076236018 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069456096 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081796824 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074809762 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073849237 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069622893 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069811616 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069065215 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070069338 seconds)
done (took 13.393833834 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.076155723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131491953 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10382311 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103359003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092051555 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071774163 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080316098 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098912813 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072174352 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101491242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090705778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091957481 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11643498 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068304293 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069266667 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071868631 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07319085 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086180851 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102640763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.098122885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119155694 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07202472 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095282719 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095740284 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091292233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.0974779 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071059682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07301073 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074888311 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096869414 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.100762769 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075407209 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.073499312 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101951296 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094740481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089656125 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.073153821 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083387485 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072745003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072026619 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073864578 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098401838 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083142315 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084000453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073715018 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080261643 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073791399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090703476 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096298977 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083343781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091128455 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103883676 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.077891292 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.090343826 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068831161 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086987377 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082150177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071574804 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07301638 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078278973 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.073204671 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07517621 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085906571 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08267763 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0740861 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085565259 seconds)
  done (took 7.139943735 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.095418622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101472745 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090591611 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090909352 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07138051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072461527 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072966655 seconds)
  done (took 2.122305786 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072795514 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.098046954 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.100158989 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100472417 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.091404787 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.099212013 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072779916 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108381308 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071585497 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095819673 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.132985279 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102973415 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07761488 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085498852 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072340403 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.089785759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072276828 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082233268 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091460814 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100865619 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077982247 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101486528 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.086199981 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072392781 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.112425266 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087200659 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.072245933 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072583482 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073589722 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073772408 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073601675 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.119381142 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086354161 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.088060107 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073714682 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.072258921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087321539 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075791261 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084324401 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083732287 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087008445 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07382609 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071445249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073596132 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076327209 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084413835 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071319453 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073958105 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073766309 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.095472258 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071580229 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086953355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077681497 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079505532 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.078756023 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078732847 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082629623 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.074354811 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.095823214 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.081854171 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073847967 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092340989 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091065527 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086847761 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091529874 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.078474733 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086361686 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087142871 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073403259 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.074986463 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074028119 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091376032 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.073593687 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.074705019 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.076063275 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074384405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084957337 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.10145607 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.101044486 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088454324 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073467235 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074028376 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085121366 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.101080909 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079100917 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073670111 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076060938 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071508978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076748839 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.074013462 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078362244 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074481303 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.081813731 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.075504174 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07754083 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.092031626 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07236074 seconds)
  done (took 9.607129161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076526125 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075115647 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07974782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075932246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075540924 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076048395 seconds)
  done (took 2.015348861 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102514514 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075219964 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087773188 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074458635 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.118564891 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090349438 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091790024 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085990877 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087281875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.087336225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090744908 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095376078 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096502185 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076243394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090661447 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076385055 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09116178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079699725 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086720802 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077830907 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090457971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076500256 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077317242 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.097121945 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077554014 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076169967 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083783849 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.087657175 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08695697 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086005181 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07623189 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07795861 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.084964718 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086230517 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091116263 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.087271656 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074645098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081641256 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077266685 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077789131 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094422139 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076770608 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077558561 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.08176508 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.086189756 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.08443232 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081861877 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083179683 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090113643 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081983083 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081448231 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076087749 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07803783 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081464398 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.084289016 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086463886 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081504312 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090961344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075943382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.084603603 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074936954 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077663294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084573834 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077059082 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080540485 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078140942 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079914406 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073625396 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07418149 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072077911 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078217481 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071912898 seconds)
  done (took 7.519853888 seconds)
done (took 29.957284536 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.949137101 seconds)
  done (took 2.44924238 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.676420489 seconds)
  done (took 2.211777101 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.517277253 seconds)
  done (took 8.052891685 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.46831685 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.534631739 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.799647556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143373067 seconds)
  done (took 3.511327274 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.717399102 seconds)
  done (took 2.262976868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251316688 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233178172 seconds)
  done (took 2.037536279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.369290706 seconds)
  done (took 1.903781731 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.124332395 seconds)
  done (took 2.663465836 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.282674691 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.170899407 seconds)
  done (took 2.001294016 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.481054594 seconds)
  done (took 2.020525109 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.347502721 seconds)
  done (took 5.891503203 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254311216 seconds)
  done (took 1.835000305 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.249699265 seconds)
  done (took 1.796216812 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.777230841 seconds)
  done (took 3.318889874 seconds)
done (took 43.505480757 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091886214 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.092514041 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089575249 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085439163 seconds)
  done (took 1.877555522 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.082014865 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.077118184 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.081342805 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.081673354 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077801078 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078186646 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.07918703 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074823688 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076938444 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.077209576 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075671948 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.077008495 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.080498594 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.076868311 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.080031492 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.081875639 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.077517096 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.077218354 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080476445 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.076844342 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.080588727 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.077532739 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.075147723 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076272817 seconds)
  done (took 3.423657785 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086210938 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080093722 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08190823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0791051 seconds)
  done (took 1.882380363 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.084074883 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.096152712 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.097958006 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.103105622 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083545827 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.083903437 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.094260417 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.094651574 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07241359 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.098215117 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.075472749 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.073484228 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.073455121 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.094852121 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.090796066 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067531429 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068906632 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.080855842 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.079885356 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.082266493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071848914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06999774 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080261764 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.079966011 seconds)
  done (took 3.546257111 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093442448 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.070919997 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089562469 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098134012 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098817746 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069481592 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.0888615 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098508479 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.143625231 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069779803 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075004774 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069698369 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109865262 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06973559 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088020006 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113048956 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115648624 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073557913 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103079408 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06947857 seconds)
  done (took 3.369000337 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.091483495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07649664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076385457 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070427781 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081079557 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076469077 seconds)
  done (took 2.032557004 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075068194 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074448152 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073847853 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073052576 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079544053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.076783646 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072385676 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.074739576 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074898748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074224757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.073476377 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073118901 seconds)
  done (took 2.450663843 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.174620566 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076563839 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.075466581 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069836218 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076736077 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070762957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08755825 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072642282 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090010638 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070352488 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070182793 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074017457 seconds)
  done (took 2.565969896 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129626004 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230144609 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118741746 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080846866 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255042953 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119763384 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.101241845 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.145456843 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109174717 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.074656756 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119050426 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150909459 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116460727 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150242417 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111545648 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17684581 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191665558 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119268725 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139487626 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094536516 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.076135869 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168572005 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0759446 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106981955 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149908402 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.114950051 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127402638 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149883165 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103556662 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.099829303 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110088227 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080991322 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182102041 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.089659339 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.120137217 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141287958 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152542958 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097044576 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.09095931 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184704208 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18167122 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151915969 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147606782 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151133869 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084763372 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.122642884 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091149951 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11909234 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167460158 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109966838 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080857294 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118597385 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122435051 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.307791656 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116112374 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092265459 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200348335 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143641717 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137333567 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087632556 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118956303 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122276601 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122019951 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194331716 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161783456 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112699825 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156798937 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133993013 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115568224 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114964959 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131775594 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099678089 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13301348 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139614992 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158504144 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1350406 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143891151 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120877795 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090363862 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122573743 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140774756 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110426329 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136020395 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180584247 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12693582 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109033975 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132701481 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.148636824 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077636376 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180869991 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103457723 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135452631 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11794001 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162083402 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115214283 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.094613138 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119875316 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172145923 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112739526 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152577068 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115833708 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137462521 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110136565 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153179243 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088007355 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109178761 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119725186 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.10530054 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.236976495 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126040371 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181127512 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131454605 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085034223 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128539809 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111699522 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.087073139 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137904793 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161247745 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090601416 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083219916 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169780307 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.103896381 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.128724891 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125294193 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109477088 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146581435 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165512123 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106769286 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103989294 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082398185 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210580906 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085374625 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161427665 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091642403 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140483304 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117610955 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158756186 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160739599 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109372825 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085345315 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118379694 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.126029837 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114784804 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130888644 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083055322 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124714433 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170100205 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.113270348 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100125273 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.103387925 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.075536719 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135858634 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086771252 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114330209 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1097516 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10589517 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.101153402 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166578791 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.111583266 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125223446 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106238426 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.072713799 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099088519 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1792775 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089236015 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.121109461 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147919006 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266174428 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078867011 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.148287146 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085330354 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178582849 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.136875402 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125733851 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089758068 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148876852 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078451548 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083758347 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157578382 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121008095 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117634664 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.161247418 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123582285 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.140429568 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.13006756 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.12131136 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114995021 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120828364 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.126320124 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142285452 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102996208 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17783904 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107826513 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085643245 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100752631 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084827522 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.083574062 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149789606 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181358565 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128671463 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112512811 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115647355 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140154175 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.115700741 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101488684 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085887186 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151079183 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082450301 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081744001 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133556059 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12356682 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098925241 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157274338 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.085904143 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158065138 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144634019 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103914193 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146889185 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077498483 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079988346 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098662741 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130772554 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137531995 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085548124 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085677886 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154449303 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1473818 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126756663 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275852109 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076460228 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123301173 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158390181 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.121513638 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091315578 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124937636 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095659556 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143840957 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109485387 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193730672 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116396981 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125988481 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.098198661 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.086729367 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080594591 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106693219 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150193251 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10199319 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089746678 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.073191172 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080566719 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146608637 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104962646 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1331859 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130609319 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15855409 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081155222 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121737993 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123555043 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12182296 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131727125 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12245138 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.103016285 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100548867 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123387134 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140627991 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081864655 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181352776 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151428543 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086366041 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117343002 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114698553 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123395007 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129429555 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12929589 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121740749 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144027895 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141978898 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116903467 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104781033 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113731689 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115881984 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.109794401 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088010662 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116671662 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133340688 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112569277 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121591154 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.101805866 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.099651946 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125695973 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13195749 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098111474 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.124786517 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174640266 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.108569605 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177704359 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118323542 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119674201 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11309047 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123119677 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147069269 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166260551 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074724673 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080582343 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.075731073 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136849747 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083971306 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127396121 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081143586 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113478493 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141396437 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096543236 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070552463 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105616298 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094844752 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105500575 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154767491 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114692923 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078146654 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112909964 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115824429 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105734597 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170989612 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.105187684 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108213982 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075764767 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134576979 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079201417 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122044886 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152860311 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086451594 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.091675724 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.073485836 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116196654 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111130739 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123620681 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10062181 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107676627 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126904051 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150051636 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109802265 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128515932 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14886714 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120524709 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098625268 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176595805 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145906182 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155777342 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088207368 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.093056045 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111805327 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.38350736 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113950428 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087384089 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090408616 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175812122 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147490355 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.076335174 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119333617 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098799891 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.099753635 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135295746 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142042678 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094399033 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153757148 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084976261 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125776262 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111830608 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146625722 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140612902 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180637745 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108150045 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100166657 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087944034 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179135498 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093535556 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155877188 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145853668 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117680034 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.075436372 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10792578 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145907484 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.649551185 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121273381 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083695345 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156975835 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122385393 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188026145 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103199968 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.131545577 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131075925 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113161419 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107921102 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155533236 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108591924 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123590246 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.183426037 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145615437 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.124966264 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082029025 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.092487614 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081051956 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.099624024 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093888207 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111259061 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120197924 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121501546 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11578995 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100163576 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120593883 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300416188 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129518795 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.116007431 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100286694 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158611804 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122277248 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147703212 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144268162 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085493799 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082462703 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128818586 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166295172 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11340031 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103068765 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.088596155 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.113726427 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18492248 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172425561 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117717473 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112684283 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.098338871 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120344812 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13187193 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13735031 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129209833 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105932071 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.120117203 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115591193 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087330051 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082077447 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108881253 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.078621669 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104456941 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154128496 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121808838 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104151669 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118474274 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085550172 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127199555 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123883623 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121811326 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084383563 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084319166 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085989441 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.127833923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114343103 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124041721 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132793486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177266696 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117978194 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115390766 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.087040752 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.232615768 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09982168 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106735784 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.121261253 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.084489941 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.143557786 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100986712 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101594537 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108441476 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111904417 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179847704 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097462755 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123648797 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128516977 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127865718 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114226233 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118364722 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105368481 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105061915 seconds)
  done (took 61.478546293 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116060414 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.153099184 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.157402746 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.087244981 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.100586841 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129851634 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208022657 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197545672 seconds)
  done (took 2.906974896 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.084311589 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104384702 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108773344 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088596202 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070093671 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.080302181 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.252219673 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.088910571 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070128043 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106146032 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086217227 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072401739 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.47501362 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073265322 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074418479 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085314384 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070779413 seconds)
  done (took 3.691185404 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.412777595 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616220962 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.382022163 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078588904 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.908233201 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093856299 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.258260155 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142745514 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084788363 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.508202095 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369818242 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131587815 seconds)
  done (took 18.703182026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08904158 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082859073 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094657757 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094374039 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081362571 seconds)
  done (took 2.151932422 seconds)
done (took 111.63546315 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087968577 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.213384105 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072437923 seconds)
  done (took 2.027775215 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.099382896 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.097661643 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.096885077 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.0945443 seconds)
  done (took 2.107886495 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082001029 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082697748 seconds)
  done (took 1.878946188 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.249857055 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18065133 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101720577 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092687451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084648889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085322455 seconds)
  done (took 1.984534651 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080118894 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079959965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077211166 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082872424 seconds)
  done (took 2.033561955 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077859369 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073524347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.075126475 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077572037 seconds)
  done (took 2.01750291 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092851229 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089587006 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083639197 seconds)
  done (took 1.98061162 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113279436 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097477179 seconds)
  done (took 1.924303151 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089975212 seconds)
  done (took 1.808795729 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103305021 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106757763 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.144825093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.124577402 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.152815628 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.129923982 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091345767 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09702793 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085585872 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092610897 seconds)
  done (took 2.847417226 seconds)
done (took 22.944657598 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087229941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.383255525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365037334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096610598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67725022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360811318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992491429 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099819851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11623378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074396483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091429198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651862479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982648053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336973763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971999608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333933347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65865519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072992574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072056038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073343701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978716685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072095673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072812935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072738168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655632054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378195031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074356837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328168303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072548998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077904126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363268365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074815085 seconds)
  done (took 16.412793182 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078267762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129144697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078732295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090011714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074880294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074336814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075479598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0730739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124891374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07330285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092396864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072235866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077163247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074393386 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094757102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072473841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076831937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073837846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073549059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075107463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093178285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072811809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07389989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073655386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074630332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087778833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075406623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073071651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073378847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078412911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079267163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074773451 seconds)
  done (took 4.321002484 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125900645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136379649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081806417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111498047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1245648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078202309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156043396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102842475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133459378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078250408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095676453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072949913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107681913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076545777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09543847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073349464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077412917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073531963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073283262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074498457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094521046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073005242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07404758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073949348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074873164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088895849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075246404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073168595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073194634 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078646708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080179795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075145349 seconds)
  done (took 4.622684514 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077437154 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080059534 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088622266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075454277 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076143441 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077979113 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075073737 seconds)
  done (took 2.380769411 seconds)
done (took 29.469350634 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085880972 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074332375 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078294141 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09461941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080957788 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087614363 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072161644 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081616807 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079895534 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079267026 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082742229 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072075838 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077280279 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071173617 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076253288 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070550012 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085392335 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074836853 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084325156 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.087594795 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076275311 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079415569 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081670758 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087743902 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.088945017 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088364153 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085087943 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078284114 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073877892 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076353753 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075826243 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086557651 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091320554 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.091316483 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07399485 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073651402 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077343198 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074739107 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086082913 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081012558 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072848611 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081267796 seconds)
  done (took 5.082167976 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093555677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095610038 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087500326 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082706264 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103272959 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.087002329 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092595522 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081004057 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081135836 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091634782 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077517295 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08404705 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082045316 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076166988 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080224212 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077860379 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083065563 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078796933 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080875626 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081461856 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09306861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07649081 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092211182 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083297261 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078442773 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084767039 seconds)
  done (took 3.948489053 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080721176 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.092275006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097597275 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149156361 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11947083 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.089092109 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085396343 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097029794 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100238827 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071809009 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07641621 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097157335 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096856878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077831941 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.115177548 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08879261 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084343801 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074152635 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079315836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101648775 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093480287 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088992457 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099342494 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088006521 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071377756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074322616 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076605126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087216596 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07417099 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083499307 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075054448 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075560735 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072426437 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082110821 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074908985 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071075197 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092049995 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083359163 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084612187 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.110097495 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081229779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072737544 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097291931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131749732 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070522298 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07528533 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075032666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083177415 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071030992 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099575153 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083253349 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071632814 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072520754 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070994215 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071765938 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074702144 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073149631 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073444884 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082091718 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078349431 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090606934 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076746157 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091446396 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072056628 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082659176 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072100118 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074694042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073889432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104349547 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075621542 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118472208 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075466837 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072131317 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082915067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081837516 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077087352 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070983408 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091289745 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082389569 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075923724 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080552694 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074177755 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075480997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101840718 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071966289 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071027753 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07300366 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075076201 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075015923 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072146907 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083742453 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070724417 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075473598 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091979559 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071186742 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072022095 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075250219 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073798154 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070598027 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082562951 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076191771 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072498981 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081605403 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071828462 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.077255386 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084757499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078339828 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070439463 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07401028 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07538582 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073054155 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073583729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076866996 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073890582 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07814989 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077922054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077907186 seconds)
  done (took 11.359922102 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.184787091 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.173252399 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074400228 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161501875 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083272698 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087046618 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.164861915 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10498739 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07394463 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074091444 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072740813 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117647285 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11858935 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.13198666 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.089283325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076479985 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.103733595 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.126723678 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.171205874 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.167269958 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.100065582 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.084756177 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079419259 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07854537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.077524895 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.0873533 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.096237226 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081826185 seconds)
  done (took 4.901303105 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08905395 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11265307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077079165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096561421 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095091412 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0735346 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074902381 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074679281 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08994441 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086245245 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073537544 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079041476 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077034524 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076452585 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07399988 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08002374 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080731978 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07247689 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077015433 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078747751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08590112 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105375696 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.083730942 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076281986 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078936159 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076304094 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088643722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092702199 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076580246 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116548936 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074413013 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.082220466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.092582364 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077154948 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075816719 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076427207 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076059672 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076239672 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077019868 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074602576 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074837093 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080817693 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075173235 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.088586173 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.089426931 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081776458 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075428023 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078767528 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078329505 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070484883 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07644822 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078789188 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.080043829 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.085013894 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.081854426 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079642772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077392063 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106658252 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083546955 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075661322 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.075381567 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.075062669 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078719477 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090069753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.092094774 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078852231 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075656387 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07604613 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.089841831 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.089067137 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075645044 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081132493 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074068111 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076852539 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078731902 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078889901 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0768845 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074851634 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076392139 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076895242 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076487549 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075568595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073869665 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07613354 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071099955 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07199183 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076063061 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075062145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085977846 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072062638 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077140877 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074062098 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071829976 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075623903 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07853374 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076127704 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084615146 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087408526 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073640102 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071487946 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.088475417 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075394917 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072370289 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078548329 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081315677 seconds)
  done (took 10.205437809 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100177788 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075443766 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090294372 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096729721 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083131504 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078511355 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084142651 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072824904 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089584364 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078029241 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080960122 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071205798 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083440599 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082579178 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073992405 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083054463 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075988043 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090691456 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087474225 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071977377 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081721831 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085863953 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085645026 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08762854 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086550888 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088892511 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.085061338 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083268382 seconds)
  done (took 4.130349467 seconds)
done (took 41.362193795 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82748057 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.004042156 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.823402273 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.043983373 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.883642393 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.148780242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.901094394 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.815860389 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.983906965 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.864689962 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.145046848 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.346240842 seconds)
done (took 66.664091285 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.864819853 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.962761005 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056590644 seconds)
  done (took 5.759491236 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.107393724 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.469475383 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.071682678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.809974711 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.814066698 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.236054579 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.582548261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.252764881 seconds)
  done (took 30.977179166 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.944763948 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.025018591 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.494502572 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.518770414 seconds)
  done (took 15.766612724 seconds)
done (took 64.303892522 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.862778558 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.80985811 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.869757096 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.837881319 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.816642329 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.815095083 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.812861229 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.811146077 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.85175956 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.871625903 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.811853544 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.818893698 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.8094463 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.852766371 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.323483089 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.860582034 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.824607219 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.821110751 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.81794004 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.876278386 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.811021648 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.950943421 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.260652105 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.007886865 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.429493789 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.936710085 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.125664614 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.276629858 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.816195949 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.809891063 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.890497397 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.898966726 seconds)
  done (took 205.129945937 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.81183127 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.870448547 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.930978981 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.8378578 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.398627683 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.981975383 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.907454782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.452395665 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.810686067 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.814465278 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.945369285 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.808476076 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.946759177 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.795428023 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.848820378 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.818558745 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.99518884 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.963605979 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.848183452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.959069542 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.82728454 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.765542039 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.760306315 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.929114235 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.841061014 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.825431645 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.815920241 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.824230416 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.998393751 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.987081504 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.819857476 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.814490668 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.981297629 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.683011613 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.819235146 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.831311622 seconds)
  done (took 171.010693977 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.003055388 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.821805318 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.812049842 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.86678244 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.935179692 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.814534567 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.484805145 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.819948778 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.947440539 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.815955851 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.813537381 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.812966256 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.816652647 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.827875841 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.900625591 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.812389515 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.828357095 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.818058328 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.839441599 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.814784873 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.815097569 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.81457804 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.814389305 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.815396001 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.814848158 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.814523428 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.124829384 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.057664414 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.814089745 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.816102915 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.555887505 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.828078984 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.927123918 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.818105277 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.908696582 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.865339873 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.932210059 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.815656299 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.034065721 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.891478955 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.812499117 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.815833952 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.881409107 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.825274773 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.814264028 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.817160761 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.821030073 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.87973521 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.074287298 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.815678442 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.937194591 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.299295982 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.81639522 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.815486085 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.815853958 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404501635 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.816539086 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.816084675 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.816800648 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.82343685 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.820849949 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.81570007 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.818787782 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.203903563 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.884286202 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.005488936 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.055217695 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.813923652 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.527626558 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.06673955 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.817608884 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.817093391 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817839381 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.818475833 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.817891199 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817468929 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.820182991 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.938059917 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.824491413 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.937177954 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.899741692 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.937115667 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.821021512 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826847361 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.635942543 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.888698176 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.84963858 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.652862894 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.819604784 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.819066611 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.192442401 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.590808853 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820055888 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.817767681 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.830960343 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.816921874 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818132643 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.819562098 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.898808673 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.814587195 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.818813514 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.941162349 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536393396 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.292645379 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.81752355 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818445531 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.824758947 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.900181346 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.937533658 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820099171 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885890783 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.821124563 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.820125573 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.903221728 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.817281025 seconds)
  done (took 405.526647779 seconds)
done (took 785.465151372 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456899533 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.429808175 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.517845295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.442298675 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.418760302 seconds)
  done (took 14.010698307 seconds)
done (took 15.75511149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.834399002 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.824494591 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.878348312 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.904257798 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.836807362 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.838676835 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.902113573 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.838293447 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.870636627 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.873299103 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.904800599 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.904963084 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.843467059 seconds)
  done (took 25.999657672 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.829074093 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.980412337 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.043138004 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.856839536 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.829950621 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.055424406 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.880754182 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.966022558 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.964207951 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.051552767 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.052831596 seconds)
  done (took 23.259696443 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.828648969 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.982261486 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.064596144 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.860468617 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.830313328 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.056793466 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.887245665 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.965918431 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.968137407 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.051331454 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.063370429 seconds)
  done (took 23.315155577 seconds)
done (took 74.322354273 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.82406121 seconds)
  done (took 3.57081273 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.844427447 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.000688752 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.82459697 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.826249392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.825922045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.835519321 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.826250885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.825245419 seconds)
  done (took 16.56031375 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.825948779 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.825416174 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.825087403 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.82459675 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.824662316 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.824954204 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.82488254 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.825548721 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.825901112 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.826248571 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.825435935 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.826278211 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.826077179 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.825093101 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.825330622 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.826160351 seconds)
  done (took 30.95629431 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.826737678 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.825928388 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.825997821 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.826328302 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.825652426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.826703526 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.827286048 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.825977734 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.826648902 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.827289204 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.826959263 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.826930559 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.82557836 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.826352342 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.826449175 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.826483723 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.82716201 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826443619 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.830768682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.827456059 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.827220088 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.826881789 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.827187017 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.827351706 seconds)
  done (took 45.599663973 seconds)
done (took 98.443679617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.761155294 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.657820723 seconds)
  done (took 10.169838655 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.832228957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.827448468 seconds)
  done (took 5.490922218 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.828289698 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.828474255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.827567606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.828141724 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.827403777 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.829383196 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.828202814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.828710869 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.828811467 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.829356367 seconds)
  done (took 20.035215751 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.827755733 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.828706559 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.827947278 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.827800499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.827867672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.827625147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.827752845 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.827791252 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.827393619 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.826895838 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.82838603 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.828594284 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.828642297 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.827764541 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.8285777 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.828415923 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.828807854 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.829388784 seconds)
  done (took 34.657722704 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.828724961 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.829263885 seconds)
  done (took 5.409042811 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.828147978 seconds)
    (2/7) benchmarking "second"...
    done (took 1.829569636 seconds)
    (3/7) benchmarking "month"...
    done (took 1.828899265 seconds)
    (4/7) benchmarking "year"...
    done (took 1.828802479 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.828547673 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.828667851 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.829276285 seconds)
  done (took 14.554258683 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.829622603 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.984216892 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.048209616 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.509914754 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.831153732 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.832562478 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.714387473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.832704493 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.834035265 seconds)
  done (took 20.168770035 seconds)
done (took 112.237526154 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.616312485 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.834519569 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.131582184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.904194226 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.905173464 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.13463876 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.860971524 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.140838716 seconds)
done (took 43.28241836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.917839374 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.829944327 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.859068134 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.858744227 seconds)
  done (took 22.302935151 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.833752414 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.171820116 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.857909005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.740899696 seconds)
  done (took 22.373078315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191839391 seconds)
    (2/2) benchmarking "read"...
    done (took 2.219948843 seconds)
  done (took 6.171664183 seconds)
done (took 59.522824886 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835506594 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.831799106 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.830452138 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.829920343 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.831799344 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.832232498 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.831555093 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.831046515 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.831177594 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.831928424 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.831389332 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.832472975 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830802666 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.832335827 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831881628 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832015982 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834686834 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.833173499 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831237682 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.83179916 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833034489 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836100295 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.832966442 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.832397816 seconds)
  done (took 45.728455229 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.831643832 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.832883502 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.8352923 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.831740378 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.831479925 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.831993025 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.831621818 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.83617978 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.832257583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.833011969 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831273608 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.832406214 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.83182466 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.837666003 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832093147 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832422747 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.83236328 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832825286 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834545504 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.832165142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.832384189 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832709357 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.832506943 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833024844 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.833211626 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832836508 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.83277185 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.833808623 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834148447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.835205648 seconds)
  done (took 56.745775379 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.834120876 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.834499861 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.834765937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.834559637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.838073641 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.834747416 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.834251281 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.834916272 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.835285882 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.838671046 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.834361846 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.835626862 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.834882265 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.835646726 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.835952927 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.83840743 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.834695322 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.835481984 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.835174259 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.834848087 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.835656002 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.835065701 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.834930205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.835332057 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.834597986 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.834733519 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.836046055 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.835404541 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.836105949 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.835683369 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.835161513 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.835964038 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.83666094 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.83513694 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.836332699 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.835910956 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.836290889 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.83599538 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.835763228 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.835021533 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.835739803 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.837126634 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.841154437 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.836045582 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.837216472 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.837115188 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.837601059 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.838422032 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.837149594 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.837110461 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.836854372 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.836896993 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.83741137 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.840640564 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.83684487 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.837289713 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.838311457 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.836471278 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.840503273 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.837150392 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.837578351 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.838328334 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.83782324 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.838336104 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.842588278 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.837833983 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.838311014 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.837700791 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.837755864 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.838964291 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.83853293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.837539528 seconds)
  done (took 133.994734054 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.836404591 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837110067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838284592 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836633086 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83712762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.83647848 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838222938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83829234 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83802121 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.838161889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838451958 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838063989 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840154358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838828152 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837067204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837602617 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.837981215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839291408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.842199147 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.838867312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83797527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.839205166 seconds)
  done (took 42.200981743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843454758 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838752803 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.839980565 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838162539 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838764545 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838729057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840118575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838767597 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838387019 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838864915 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838757693 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839062975 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839981299 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839397468 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839406688 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.83991159 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838956649 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843509005 seconds)
  done (took 34.874659667 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.840407038 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.840252276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.839516669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842537838 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.84039159 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.839554368 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839094053 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.840057986 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.840002394 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.842334799 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.839791778 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839085619 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.840383638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83975655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841029577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.840035586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.840293356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840083796 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840662971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844006553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838689833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839958963 seconds)
  done (took 42.251313088 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840288766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.839980662 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843430274 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.841966503 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.8394757 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.840495993 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.841030517 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.844911264 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.840690257 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.842205367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841017477 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84112352 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.841169245 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842844141 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.841354873 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840294129 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839846758 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.842369596 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842148999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.841478827 seconds)
  done (took 38.590910766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842102338 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843111204 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842943925 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849719029 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843089425 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841672987 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842423465 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.842813544 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846827166 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843425949 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84244605 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842364007 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842594765 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842652079 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84357781 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843111444 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843000016 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843710513 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844578818 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846909219 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844291707 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841887379 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843404603 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.843364723 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846881326 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843641981 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842885505 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843203822 seconds)
  done (took 53.387297777 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843446262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847570192 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.843005769 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.84365917 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.84354727 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.843754651 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.845314272 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.843747274 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.843126647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.843869591 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.844111987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.842672585 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846372679 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.843827398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.843772769 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.844949128 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843034244 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.848461026 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843220767 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842628027 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.844413703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843866184 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.844383481 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.845175766 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844163012 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.842888583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8440613 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844928949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848601182 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843897232 seconds)
  done (took 57.096326377 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.8644459 seconds)
    (2/2) benchmarking "in"...
    done (took 1.864761259 seconds)
  done (took 5.49676584 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.843667915 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844358274 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.843763277 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.844977979 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.845664476 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.85067443 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.844781627 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845661324 seconds)
  done (took 16.534596632 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.845466598 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.852765007 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.845209699 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.84552892 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.845689824 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853551884 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.847890177 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.850192728 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848455229 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.848500126 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.850739012 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.850624345 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.860213302 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.85131057 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.845876427 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.847835761 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.849497337 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.849697286 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.850151979 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.846158373 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851384249 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845510521 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.846746562 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.849946786 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.847022275 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.848897824 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.857720106 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.848494742 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855019316 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.846637759 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.856321085 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.847180624 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.847316655 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849231315 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.847887513 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.847045435 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.854929007 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.84704904 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.846093906 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.849360737 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.849790866 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.852598873 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.851674456 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.855889406 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.849365186 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.84882399 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.848171769 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.848456121 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.849155094 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.853420132 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.858937979 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850526774 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.847824142 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.84906773 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.852216506 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.851407295 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.848726358 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.852479645 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85700851 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.854832514 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.854961668 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.873330275 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.860563246 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.847542014 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.848400456 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.859664602 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.879706671 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.852098152 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.852643071 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.84909621 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857813645 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.848755649 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.853282317 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.849426841 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.863700129 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.858511442 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.849457995 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.851907805 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.848783126 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.85003221 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852691251 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.849724354 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852146252 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.849978396 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860995197 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.879495045 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.850630415 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.850230575 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.853633104 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.852928627 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.854498206 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.854331925 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.852246849 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.850639301 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.853573186 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.853261683 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.850126664 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.850762202 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.852045346 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.86170458 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.850998347 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.850164529 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856392653 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.859849746 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.855290684 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.851412231 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853560768 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.851526513 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.860394414 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.855221867 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.852478306 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.851449815 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.852788556 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.856646774 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.85187837 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.861242018 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.861291503 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.859275593 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.853854967 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.856307167 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.860696733 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.856400641 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86443429 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.879922518 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.85237213 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.858538679 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.859561176 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.865679841 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.858009072 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.853012003 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.856752148 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.8532013 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.853548018 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.856417756 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.852984401 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.854414452 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.854393142 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.854122379 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.853457118 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.854362333 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.856560541 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.85776396 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.858460257 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.853541096 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.858403177 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.853816919 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.858304272 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.861969138 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.85756303 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.854358031 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.854779586 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.859152036 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.856882895 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.85645107 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.854283874 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.854929723 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.854408748 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.857116901 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.858420034 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.855336346 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.854439427 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.857230905 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.859840945 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.855516586 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.855366064 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.856687691 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.854864933 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.855429692 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858012677 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.858460517 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.859288547 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.855362621 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.860039391 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.854898699 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.858866554 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.855859822 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.855064725 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.856643788 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.860385559 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.870864699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.86025042 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.866928115 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.85398846 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.86220697 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.85713424 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.863200468 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.859074808 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.856817496 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.855593947 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.855114239 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.85867977 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.861199126 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.878857316 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.867770431 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.859408803 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.859021071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.862784433 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861119785 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.863313534 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.856971059 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.859547522 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.862694507 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.858000946 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.858070652 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.858386545 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.861743497 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.859548177 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.85726906 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.863528212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.85749815 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.85793127 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.859111434 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.858680012 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.860049719 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.85713677 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.857675297 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.859678902 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.857981362 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.865675418 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861841738 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.857346094 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.857757878 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865084178 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.857553631 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.858000741 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.859969013 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.863179883 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.859160092 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.864207504 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866014717 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.860386044 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.860489483 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.859498974 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.859735286 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.866003551 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.85879689 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.862464978 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.868144121 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.867862283 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.85801544 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.865139712 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.858048123 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.862354342 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.859848406 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863892996 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.859744326 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.862881891 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.859619104 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.858793507 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.8686144 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.859703303 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.861351732 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.859965322 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.862703051 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.862571997 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.864811459 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.859551254 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865218946 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.869044941 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.867220478 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.862638619 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.863586717 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.863591827 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.863050881 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.864603717 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.863669534 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.874604513 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.873528818 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.860233057 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.860361961 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.861283308 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.864722121 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.86055031 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.861890063 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.868787234 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.862861664 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.863289409 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.865030231 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.861406853 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.861019027 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868099462 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864941596 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.866881854 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863280131 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.866435648 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.8633405 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.861340299 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866884376 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.861190674 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.86444728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.866197841 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.861377191 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.865040139 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.861391919 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.870648501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.861955798 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.864442677 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868726417 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865262844 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.862888233 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.864442045 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.861553552 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.864318048 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.866040311 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.864012589 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.863891637 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.863791725 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.866777544 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.876469628 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.867827573 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.872564077 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.865262589 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.875049747 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.863674074 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.863867844 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.863687752 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.868342519 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.872361004 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.863435638 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.866861613 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.872125526 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.865288058 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.865241161 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.867218984 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864478404 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.863856281 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.864182604 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.865831406 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.871950267 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.868004321 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.866621613 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.863324849 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.863560913 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.863977189 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.868281389 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.871446911 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.86698757 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.865683033 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.86367852 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.864964116 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.866862174 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.864978527 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.86467431 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.864829209 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.86434343 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872240401 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.869368911 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.867069651 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.868365787 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.864887674 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.873491363 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.867461234 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.86514042 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.86715259 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.865284472 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.867302323 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.868958568 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.864906937 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.866157727 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.864920584 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.867965669 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.876034804 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.875048093 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.868977043 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.86895434 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.86573869 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.868095473 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881067174 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.892800499 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865256871 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.869079822 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.870955994 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.877840051 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.869487663 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.873343556 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.870555944 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.875093095 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.867862065 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.867641825 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.870133766 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.880922183 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865774665 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.865829081 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.866323379 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.871901287 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.867655717 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.866210002 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.868545839 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869367824 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.868113567 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.878282267 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.866907115 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.868772001 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867317936 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.867139569 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.867493324 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.865516873 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.870322101 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.869232227 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.86727098 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.867302169 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.868183265 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.872715375 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.86662564 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.871685599 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.878108911 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867088151 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.867500078 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.869213553 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.867811753 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.871083161 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86856148 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.86834868 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.869949756 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.867825302 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.870388565 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872500392 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.878365408 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.870471036 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.867237146 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.868827406 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.873826753 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.868996592 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.868965513 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.871643027 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.878187598 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.874461958 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.88226834 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.880528596 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.868600807 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.871400672 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87959082 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.878640325 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.870403756 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.869528348 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.870591496 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.873192131 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872197541 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.870463247 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.869427883 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.871092124 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.87620675 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.869289078 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.870423958 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.869156702 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.869394352 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.873067101 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.872595454 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.877142357 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.870558188 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.869572152 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.870296165 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.872879521 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.873887936 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.874339639 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.871173822 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.870215035 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.873818529 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.874275432 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.875310738 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.871465409 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.87153488 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.874174044 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.871662443 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.870976198 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.872343847 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.872904765 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.871236045 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.876691854 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.881306855 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.871555353 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.873372006 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.873978717 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.875794931 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.870555223 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.872140209 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871620846 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.871629439 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.879286871 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.872342697 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.871785072 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.873937498 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.872060079 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.877858393 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.875492194 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.879653414 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872712605 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.872798223 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.872006972 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87666571 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.882970077 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.876324555 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.876760416 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.881391236 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.879173391 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.875518513 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.872067409 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.873107982 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.873113347 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.874166395 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.878660883 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875319624 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.876715165 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.873541799 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.876049193 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.873114359 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.876176657 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.87274715 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.871783801 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.877418591 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884565058 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.881924544 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.874280262 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.876189656 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.873538735 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.878006871 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.886073396 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.873981647 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.874141276 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.873344478 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.876389733 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.875588534 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.882689508 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885317479 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.88012139 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.874343451 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.881548325 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.895255717 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.87824891 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885489005 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.909829625 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.877460391 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.875116576 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.877365269 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.876346386 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.87417752 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.877358698 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.874774303 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.882836786 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.875610136 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.874436763 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.883793059 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.87524533 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.875237326 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.874896099 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.877773953 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.882053592 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.874510597 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.883168967 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.876603974 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.875144766 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876572622 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.876876497 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.875438794 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.875355727 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.875462751 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.879079002 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.876278025 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.875484391 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.884941365 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.877697178 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.87941528 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890215786 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.889054168 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.875496776 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.875871112 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.876156525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.881521397 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.880263238 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.876082557 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883085247 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.885613765 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.881243293 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.885623014 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.88023945 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.879827683 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880005478 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.877275543 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.878104305 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.890903786 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.891995104 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.880691456 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.880651074 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.88645831 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.878018987 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.885565488 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.885179458 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878570026 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.881517955 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878239283 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.878604392 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.878727592 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.8793138 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.882687304 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.888534673 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.879386088 seconds)
  done (took 1113.530189312 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.878977055 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878039287 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877457499 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.878450313 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878198978 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877964958 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878425085 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.878340457 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.878086267 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.878031997 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879391197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877118676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.877094783 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.876354125 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877556592 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.880881962 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87595208 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.876141281 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876438974 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876581516 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.876563196 seconds)
  done (took 41.23222942 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.877049303 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.876920591 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.876665389 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.876392276 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.879087282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876659338 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.876090368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875105108 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.876814387 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877279996 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.87554962 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876391692 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.876266011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.875819319 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.876455872 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878671707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.876967098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.876904436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.877301413 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.877466665 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.879574054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.875167429 seconds)
  done (took 43.089414972 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.874639583 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.875435017 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.881345331 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.872132512 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.87497263 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.874459815 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.874174369 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.876279444 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.875957419 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.875750784 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.883031399 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.882753886 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.873479192 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.879638673 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.872400628 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.871756756 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.017343478 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.872290947 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877670205 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.869652178 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.870159654 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.876742681 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.869208764 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.869541674 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.870965437 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.869472193 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.868507205 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.868654661 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.869702574 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.872784053 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.874610858 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.868962633 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.871427558 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.872644915 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.871461909 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.870876664 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.87518181 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.870058842 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.869534414 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.869414308 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.882060202 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.896195481 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.868732061 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.869357223 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.877732342 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.87136227 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.871046195 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.87425972 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.878333747 seconds)
  done (took 93.760355611 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.870542838 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.86909844 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.869236456 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.870023109 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.869930645 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.870561155 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.871151032 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.868985638 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.869521034 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.869057172 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.869077898 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.873692188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.868372518 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.867756107 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.867533175 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.867637193 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.868207497 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.865656955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.865081195 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.865594861 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.865145734 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.865680304 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.869618895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.867356832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.864396523 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.86501863 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.864287833 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.866350086 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.865850369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.864576835 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.864289748 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.865437855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864832152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.86557158 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.865069135 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.864702879 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.865323223 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.864890537 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.866744054 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.863849968 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.864486142 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.864057244 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.863981671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.864709315 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8657324 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.864901142 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.864239813 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.864222916 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.864292723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.86587684 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.863774388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.865662926 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.864727306 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.866267195 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.864688502 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.86455628 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.8662562 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.86602337 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.865404487 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.87001539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.867919113 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.866142377 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.866606438 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.866372131 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.865599855 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.869878357 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.865997947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.865355454 seconds)
  done (took 128.716242959 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865541391 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.868499307 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86609239 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865825512 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.867050711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.866308396 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.865389111 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.870694558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.866937622 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.865815705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.865232324 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.866186867 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.870748071 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.865129918 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865785614 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.866638059 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.865696377 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868844115 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865224926 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.866144545 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.867092031 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.867001557 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.866144901 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.867855563 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.867204579 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866349296 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.866402605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.866359491 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869772456 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.867459099 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866337889 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.865871747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866419126 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.867500312 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.864013229 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.863416465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862155474 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86404212 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.863954022 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.865840926 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.861736949 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861935143 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.862345161 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.86244151 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.862693813 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860955893 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.860523424 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.860614862 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.860773706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863641703 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.859967983 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8587695 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.8592746 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.859222614 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.858712382 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.859870336 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858781243 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.858302517 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858273666 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.859143542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863172806 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.856290661 seconds)
  done (took 117.371004429 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855548628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.856095845 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.856978055 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857244058 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.854294493 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.854273083 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.855475395 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.854595731 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857948273 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854641854 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854691282 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854569882 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856577326 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858178658 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854173863 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855780012 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853914003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.85404758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853768031 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856455598 seconds)
  done (took 38.888693997 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.853105641 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854415951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.855166545 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.854776269 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.853519188 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85358864 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.853303726 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853943791 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854599968 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855269422 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853045707 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852112484 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852535241 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853430895 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.853626787 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853592111 seconds)
  done (took 31.436042636 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.85317245 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.852871454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.854781946 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.852266503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.853308893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.854617518 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.852710272 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.852087794 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.852013187 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.852454156 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.850964849 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.851956529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.851972579 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.855065751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.852517128 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.851689844 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.8514578 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.85134988 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.851906654 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.854926039 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.855918885 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.85360465 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.850391228 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.852164954 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.853012733 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.851571788 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.850494141 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.850311796 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.849481663 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.85124047 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.851046922 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.851988612 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.851228871 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.851166372 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.851605572 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.852025151 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.850520481 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.850250233 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.849784075 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.850236523 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.850865525 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.851047694 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.850178251 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.849126676 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.850991323 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.851011134 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851194891 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.850774552 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849410313 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.849860305 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.849526507 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.851155886 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.849496134 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.849531839 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.849585022 seconds)
  done (took 103.612908203 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850239927 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849838969 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.848895951 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848953841 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849406231 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.849633917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.854005496 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848781437 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849300332 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847682842 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848047916 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849264016 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849385863 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849124896 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849280906 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849759783 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.848998459 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.849471719 seconds)
  done (took 35.063699922 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850093855 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850028988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.850028605 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.852257745 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.849571572 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850005393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849113766 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.849068002 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849871287 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851039462 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850450388 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.849512346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849470261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.850080042 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853827435 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850623158 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.850157323 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850126566 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850552023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.854698821 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851435662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852857459 seconds)
  done (took 42.487819063 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.849851081 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.850640687 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.866551206 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.872260731 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.869218143 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.884597084 seconds)
  done (took 12.96565412 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85363324 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850784744 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850553905 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850765446 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850295828 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851629758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853066682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849349476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849897916 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850255492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850622016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849738151 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848900282 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848909625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849574815 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849296892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850520524 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849245713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848969493 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849088687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847905746 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849003073 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848897594 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848212372 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84903292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85033542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848904829 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849720095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847952904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849450805 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847968467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848401372 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848846335 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852710058 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849598929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848690286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848066464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848096368 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849592169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849608289 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849500704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848896496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849615091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851623549 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849045194 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850113023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849936668 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849552681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849675447 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853436998 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849652091 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849952515 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850418858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850400235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851339887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849229677 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849552915 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84957665 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849303219 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849264594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850944725 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849602894 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849356796 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849945632 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849119339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850463322 seconds)
  done (took 123.860076808 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849505352 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848375982 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850744925 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849362699 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850654404 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851154141 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849330051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848694019 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850303459 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853333059 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849952369 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84984401 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850375659 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850378376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852908621 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850078881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850372189 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850911012 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850044194 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850489758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85331324 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851039176 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850697703 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850741913 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851208029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854530219 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851096617 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851026782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851339203 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851813919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851472776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854056553 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852394459 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852236687 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850977028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85170777 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855194583 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85198952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853023151 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851060973 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85198708 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854025854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852406465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852547349 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852715309 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851952076 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852523084 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854192249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853623979 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853145877 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852880233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85367325 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856665523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852996907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852968306 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852416407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853183699 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852395038 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854539445 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853616056 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852892149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852774848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854147458 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854874491 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852806682 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852993907 seconds)
  done (took 124.006924874 seconds)
done (took 2578.683113426 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.924027675 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.859642596 seconds)
  done (took 15.558154485 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.018228714 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.970192791 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854949306 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.900142368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.850445815 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.854922039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.868130377 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.852521539 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.855549513 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.856013134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.855461035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.042726549 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.88458221 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.853058664 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.857381671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.94960213 seconds)
  done (took 52.109063901 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.858319623 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.860127449 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.871106669 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.860502946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.85832633 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.870487824 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888739504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.862619092 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.892017785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.870487707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925920336 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.865229167 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.860145758 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.906712542 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.87026203 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.873499651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.949213927 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.929356377 seconds)
  done (took 35.65007327 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93410819 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.879933819 seconds)
  done (took 10.602055795 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.870746003 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.87398285 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.889646911 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.850496977 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.886044972 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.868127331 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.894331452 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.884797861 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875010374 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.896164674 seconds)
  done (took 70.569522203 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.864628489 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.863134495 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860779628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.860527565 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.857766824 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857234393 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.857982727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.856906698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.512738662 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890361293 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.866294327 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.866837839 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.86005852 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.860722983 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.856796536 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.881207078 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.975168158 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.857328577 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.85713332 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.86486162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.859757779 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910511062 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.876400342 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.861014245 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.890490344 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.517061975 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863960574 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.868990895 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.96277769 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.856350471 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.860607462 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.046349019 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.866538083 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.335893113 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.168556998 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.861005986 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.869015703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.865846 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.85760914 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.976673982 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.861080242 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.865416122 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.809974149 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.146328997 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.966387966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.901786931 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.213301859 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.877626367 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.859525763 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.887855429 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.863892888 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.861225199 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.878083547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.376366354 seconds)
  done (took 132.357207169 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.858714311 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.218138962 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022330511 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86043092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14087643 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063190088 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86400549 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90415482 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.861101264 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104049133 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.093211121 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963665563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8594792 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.857770135 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.859233454 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854061353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007854868 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929711152 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.85797701 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.860492653 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884782891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101674112 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999471754 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861578813 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.874192745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07301028 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.977729532 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96348468 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.345710363 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.858124438 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.919539849 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861836171 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.860935239 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.855894554 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.023714525 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.95286113 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938096758 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.858991389 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859362763 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861679356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.523063482 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061104251 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955022858 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989366497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.421325899 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066514555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.639449677 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.858860555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.610071462 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021305126 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.086045245 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.110190409 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.974863258 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864909981 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.381049052 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859122382 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861623925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10827822 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001175669 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959317151 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861416505 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863789366 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859276732 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100494188 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.859866294 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.952176526 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861545568 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85931347 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.956638727 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.958577745 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.99881669 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071687211 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888692998 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.593862881 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.084961101 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.107891608 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924443647 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116129169 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863533719 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86191537 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937906278 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.706468895 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068107055 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106812829 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117218711 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896454972 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.596632844 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.861999907 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.091312407 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080443203 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.113010744 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010284267 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.015422283 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.271230114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862358543 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.862072465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.11364299 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983025314 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863396924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.204578718 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093800083 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.419904202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.882720339 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168409978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991888597 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862974863 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.50162002 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86439549 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.085731702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901916839 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.865720534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862893683 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.081657101 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834380555 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863160255 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.501264273 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.92448442 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.865788054 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099538965 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866729182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124260742 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864716399 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098166555 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.409223331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893204137 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.090136006 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.008131804 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.865503122 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106521473 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10716632 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.978031096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082171084 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.600978531 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865102383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153160439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867453451 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.864699155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.03264996 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.866435605 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.01078194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870433963 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148859837 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886952884 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026447262 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869097479 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132876365 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896664347 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913454172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.867033896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988393785 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86890486 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.696992896 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019773771 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872401241 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.86352363 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.657538709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.867425644 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012621889 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.093523571 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891635538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936599392 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525487726 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.866170341 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95308851 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888543795 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.266978398 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.87321901 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.095319409 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.86776946 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.867579238 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.866557529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.108069296 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084638491 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.867376585 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.87323838 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.761406014 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.869140244 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.866475894 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.0473043 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.213547161 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.866797523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069244772 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876065084 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993900157 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870608051 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.938793994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206178476 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865504672 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.869351509 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.866460427 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.867845402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874185904 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12751367 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898794659 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.404537131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002802744 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135228971 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.176453989 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.122047735 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.90845264 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869753235 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119448449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.872043409 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.925877738 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.869658868 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891842051 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098157056 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870578364 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082552151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150253668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.900970727 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914597571 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876869046 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869822941 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.869032747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037431617 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953015154 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868833468 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.871037804 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98202383 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008278535 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.076582876 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.870989393 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.066413765 seconds)
  done (took 900.953467175 seconds)
done (took 1219.575262682 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.869124914 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.870341119 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.87242195 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.875914106 seconds)
  done (took 29.280926062 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.87353803 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.876155675 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.87271176 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.871607366 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.873348693 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.872605752 seconds)
  done (took 13.033747748 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.957861626 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.871169232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.869666203 seconds)
  done (took 21.492028065 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.94223623 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.247778139 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.003874191 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280582426 seconds)
  done (took 10.274846779 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.87287321 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.872528695 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.872230824 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.872679501 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.878619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.87356999 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.873202531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.874181032 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.874882183 seconds)
  done (took 18.662476958 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.020861911 seconds)
done (took 98.557154538 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.003476304 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281749515 seconds)
    (3/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.380136497 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.936207981 seconds)
    (5/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.894387491 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.025418184 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.997924577 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.971639951 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.872474392 seconds)
    (10/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.96088204 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.233639782 seconds)
    (12/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.337459029 seconds)
    (13/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.873882841 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.068324745 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880570644 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.848900227 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.013066091 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.313968373 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.897189867 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.874641798 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.676571345 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.321255941 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.034766895 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099707134 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.896008227 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.87486597 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.324767261 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.156318762 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.870702811 seconds)
    (30/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.149187032 seconds)
    (31/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.041834211 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.900904524 seconds)
    (33/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.490048285 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.957464927 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.230455524 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.321011874 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.877433809 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.1759002 seconds)
    (39/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.006039485 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.37043223 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491831184 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.988836363 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.952421353 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.08371811 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.044966064 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.876373185 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.978800989 seconds)
    (48/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.050990908 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.819370056 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878547162 seconds)
    (51/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.027165347 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.292862859 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.11437716 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.892032087 seconds)
    (55/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.790317324 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.972562297 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.174166646 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.519430802 seconds)
    (59/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.324536912 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.58029574 seconds)
    (61/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.281889284 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.124429653 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.910827392 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.977322673 seconds)
    (65/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.955864112 seconds)
    (66/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.960802405 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.031856559 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.8950784 seconds)
    (69/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.116708219 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.247833394 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.886401987 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134129136 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.963225602 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.163277156 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.019552966 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.87499206 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.131482758 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.183948775 seconds)
    (79/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.975820843 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.210060285 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.193600018 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.890981983 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.875514374 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.115683431 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.192461702 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.645023668 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.057616206 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.36067401 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.884638298 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.966751512 seconds)
    (91/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.120959863 seconds)
    (92/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.95540148 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.875558776 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.275043633 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.967496171 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 4.7660882 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.198715716 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.062804047 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.519901724 seconds)
    (100/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.886891453 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.995463657 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208362957 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.877214798 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877332809 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.994593619 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.928742661 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.957753215 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.914336294 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.961822061 seconds)
    (110/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.311449999 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.646703286 seconds)
    (112/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.670001969 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.170164867 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.69859388 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033463865 seconds)
    (116/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.319700126 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.573790702 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.125134102 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.218831984 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.965505779 seconds)
    (121/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.006802001 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.876200515 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.166527361 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.263071289 seconds)
    (125/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.917182688 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.880021217 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.120784584 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.905713451 seconds)
    (129/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.084828435 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072856433 seconds)
    (131/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.900748419 seconds)
    (132/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.013637246 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.135707805 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.883067008 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.218892511 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.878558444 seconds)
    (137/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 3.471943964 seconds)
    (138/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.987758426 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.908378229 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.881865496 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.336517464 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.137637546 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.210009683 seconds)
    (144/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.129618395 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.005009632 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.129309198 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.883077831 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.877159321 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.360960703 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.797185169 seconds)
    (151/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.968447238 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.99221879 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.884478641 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.022658024 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.021759474 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.496027651 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.992153467 seconds)
    (158/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.062721771 seconds)
    (159/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.257836955 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.894076185 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.882300209 seconds)
    (162/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.045583829 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.886651516 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.882095112 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.17026122 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.076557284 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.970604632 seconds)
    (168/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.919896344 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.390712724 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.899615023 seconds)
    (171/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.893305148 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.152784332 seconds)
    (173/309) benchmarking ("sort", BigInt, false)...
    done (took 7.396390815 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.179342421 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.013428702 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.888067725 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.323467438 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.941614549 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.881459401 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.120489745 seconds)
    (181/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.76418248 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.827535463 seconds)
    (183/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.003971695 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.883561433 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.278801292 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.178681477 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.304666633 seconds)
    (188/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.659153814 seconds)
    (189/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.748134344 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.031371772 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.884862955 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.09299918 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.026942573 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.095928912 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.884589193 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.191410109 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.909161675 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.883065895 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.425847187 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.883751533 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.019217176 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.942875166 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.242603675 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.121410488 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.273425579 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.721985121 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896319417 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.301191282 seconds)
    (209/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.841879249 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.884066414 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.160335303 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.251586305 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.885236376 seconds)
    (214/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.357855445 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.881629093 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.100009704 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.210225075 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.909284313 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.906778617 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.775939132 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.233913538 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.889713577 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.10307226 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.651626122 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.179416844 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.998895475 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.88862152 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.836505247 seconds)
    (229/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.562145362 seconds)
    (230/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.790575058 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.053358092 seconds)
    (232/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.260102098 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.885091882 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.299618148 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.018842113 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.88569219 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 6.854506253 seconds)
    (238/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.914255049 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.884653884 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 4.435157565 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.883482392 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.220525915 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.884276778 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.888576497 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.324635078 seconds)
    (246/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.629848205 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.374677781 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.915039557 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.888774524 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.985456665 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 5.670244874 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145550702 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.003630785 seconds)
    (254/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.561518095 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.886280502 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.988890952 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.003204679 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.039681766 seconds)
    (259/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.449629841 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.916888046 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.094822303 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.79954799 seconds)
    (263/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.015952551 seconds)
    (264/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.247514572 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.890105149 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.315620458 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.425442946 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.997340369 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.24546973 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.009731 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.036988917 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.905592855 seconds)
    (273/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207452071 seconds)
    (274/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.981689858 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.293261297 seconds)
    (276/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.047451008 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.887884102 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.354110566 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.970496368 seconds)
    (280/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17935437 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.885671929 seconds)
    (282/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.722292446 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.078682497 seconds)
    (284/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.316895494 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.992421889 seconds)
    (286/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.145409423 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.992130221 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068873774 seconds)
    (289/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.908404701 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.013299902 seconds)
    (291/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.069746299 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.899773737 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.890056562 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.316914978 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907491641 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.019779877 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.195829543 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.888744813 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.3378237 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.351427606 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.889615529 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.923885328 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.986291311 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.117873935 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.957716553 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.121961416 seconds)
    (307/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.042213835 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.102325812 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.894349668 seconds)
  done (took 1009.369522319 seconds)
done (took 1011.230379817 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.966000741 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914504339 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.899800868 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.921694847 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.006938591 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.939149672 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.917627884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.905702055 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.950479888 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.949545794 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.891355237 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.938178523 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.894552467 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.894944 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.901751656 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.913059277 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.188646432 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.918410079 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.912278285 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.913176485 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.912525625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.893476648 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.955781654 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.940691553 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.905911465 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.907194163 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.898833117 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.916144579 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.00867769 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900824115 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.908062535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.90827359 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.189578297 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.919000216 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.899537911 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.913850634 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.907198762 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.915587397 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.906170326 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.92781222 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.273491004 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.922679693 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.897281575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.902909793 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.90290663 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.909953614 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.896572078 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.911920446 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913050462 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913022626 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.271221002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.940779392 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.899367001 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.904627261 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.916723205 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.895550566 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.906304078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912038345 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.915925286 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.913714817 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.176169114 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.928190102 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.907067938 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.915911821 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.907030405 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.306577949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.930198289 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.910354263 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.275241164 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.938757172 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.30784527 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.933050054 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.907192293 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.91256437 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.92957764 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189938366 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.920046488 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.903257976 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.906728874 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.896159619 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.917369922 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914168286 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.910137055 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.904831264 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914586236 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.944075968 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.918678735 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.89808134 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.916660817 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.91892965 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.90790681 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.910048403 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.909850436 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.90357385 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91841729 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.911168346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.901764194 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.902888899 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.912151913 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.920545372 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.273188809 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943069838 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.902414931 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.902468077 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.909595973 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.914224295 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273513949 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.925686106 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.928899852 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.957299924 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.907221352 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.178729894 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.921340016 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916923944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.917589968 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.908740034 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.90516665 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.18095675 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.293067388 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.943374325 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.906545835 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.898320204 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916929307 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.907936057 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.904272979 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.192644266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.930530093 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917008742 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.022363999 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.920585048 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.93686866 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.897560311 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.910487214 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.947218585 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918167375 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.932801317 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.909231112 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9173032 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.919008874 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.903692135 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.912337097 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.920493794 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.906907563 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.914679558 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.905433196 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.946796474 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915714256 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916066239 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.928276377 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.023279998 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.90523226 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.180341682 seconds)
done (took 299.608605444 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.975712323 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.896905377 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.988886715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.89750145 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.987281987 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.971251497 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.898674896 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.897912399 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.898226305 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.401620644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.898049061 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.903953333 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.899985611 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.898969639 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.966222433 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.898537476 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.899316684 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.350331877 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.899341019 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.978320753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.897858227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.900052159 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.899573847 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.404175268 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.897546673 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.897758834 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.980128701 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.898701465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.353196962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.898360811 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.898736087 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.349882866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980280698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.925707363 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.907021327 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.904380669 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.988522585 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.910745693 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.968333358 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966963677 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.991535848 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.931620837 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.8992859 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.898259665 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.903301365 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.901606903 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.89993448 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.933028364 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.900623372 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.908470897 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.348528326 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.905202866 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.908447887 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.901530544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.900605193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.927812857 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.901493613 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.902302039 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.980173524 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.900577694 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.970363989 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.402708518 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.408798859 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.900831723 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.900202723 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.901385839 seconds)
  done (took 187.282854786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.9658096 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.977229299 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.965207439 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.903604183 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.949452703 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.966813489 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.903867543 seconds)
  done (took 15.451640647 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.909495136 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90306812 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.951289428 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.951985462 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.902571796 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.0834235 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.913775548 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.90715606 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.928907441 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.902130985 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.567615621 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.95155061 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.908788848 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.902125528 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.913553514 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.959544334 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.904520242 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.902862491 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.018120003 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050777162 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906399348 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.908884603 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.929023835 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.915028973 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.903507893 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.904741927 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.904218369 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.910663866 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902484076 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.902357671 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903333048 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.953475037 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902796327 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.90418059 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902585289 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.903830584 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.902985361 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904357524 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.902737849 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.902145597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.902765512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.903482408 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.903814979 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.903867815 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.904715476 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.926860382 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.903306896 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.903318382 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.902641383 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902852504 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.929559588 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.903631114 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.905468232 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.908374801 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.947513714 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.9122133 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.905419632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.905452808 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.90525603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.906248475 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.90479156 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.053083824 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.954367194 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.904641768 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.9542689 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.059407235 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.906057256 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.905551861 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.90504829 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.99282424 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.905404294 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.95386072 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.905586631 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.018862576 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.905232937 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.086574443 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.92849622 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.909295671 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.909889599 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.904390925 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.91289466 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.905519828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.909756867 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.912708099 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911127887 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906164147 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.906536706 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.908511048 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.913428765 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.905906059 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.956654244 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.906257349 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.906492082 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.047449513 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.907140345 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.021770327 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.932937263 seconds)
  done (took 209.353346703 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.914275199 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.913960548 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.908546032 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.922016184 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.90858701 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.908923877 seconds)
  done (took 13.301889598 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.908255553 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.910992177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.907522802 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.909145957 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.908304175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.907697447 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.907924188 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.909551438 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.911874573 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.908969648 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.909373867 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.918828451 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.907456165 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.907906911 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.908661961 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.907197915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.907927379 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907355747 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.908893465 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907713189 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.116767599 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.90775567 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908863743 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.921372217 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.912485074 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.908131107 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.923071654 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.909430142 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909150541 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.916997981 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.913139102 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.910510451 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.921568603 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.914941489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.912881237 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.921572577 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911942662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.919983699 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.909713548 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.910289981 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.91958911 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.909862416 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.909118648 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.91887982 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.911559461 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.927172368 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.923489549 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.921800248 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.910228951 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.919132162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.920662831 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.91013729 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.909760174 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.920048757 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.924332932 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915622243 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.923211437 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.909108858 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.910167111 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.922564333 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.913615639 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.910489002 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912166566 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.914000846 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.917858036 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.920211582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.923371428 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.914224224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910237546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.909999507 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.921413678 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.909973524 seconds)
  done (took 140.805508297 seconds)
done (took 568.025664846 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.431894601 seconds)
  done (took 9.260501006 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.085952062 seconds)
  done (took 9.035256352 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.15247465 seconds)
  done (took 9.984211449 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.931037932 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.924583022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.916104807 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.905380407 seconds)
  done (took 29.523237839 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.285460472 seconds)
  done (took 9.115541289 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.937094046 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.927424955 seconds)
  done (took 16.105544186 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.039388971 seconds)
  done (took 8.890789778 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.409294467 seconds)
  done (took 9.259696766 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.942841313 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.949672293 seconds)
  done (took 15.759225954 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.929358499 seconds)
  done (took 8.775211154 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.187973886 seconds)
  done (took 10.08914981 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.94929407 seconds)
  done (took 8.868207115 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.006700081 seconds)
  done (took 8.852715691 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.974065046 seconds)
  done (took 8.819524055 seconds)
done (took 164.168488641 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.929627101 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.927144977 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.92771076 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.923411095 seconds)
  done (took 29.551938512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.96297181 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.963009661 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.970654182 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.961945012 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.952603568 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.953872896 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.962779649 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.961981518 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.951572071 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.960171882 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.963811162 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.960711381 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.962278082 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.971418057 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.971389704 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.962835752 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.963346831 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.963439553 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.953509082 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.972065162 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.960060493 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.961891708 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.928213776 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.92771979 seconds)
  done (took 48.871368367 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.146829467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.013944973 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.136796014 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.003643675 seconds)
  done (took 10.147155714 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.928877837 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.007294132 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.997369697 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.984152661 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.988863227 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.042929145 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.998296097 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.068879022 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.057064477 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.06074047 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.936792526 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.951506603 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.957178397 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.984277886 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.044800589 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.929912411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.934267705 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.049997764 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.024321881 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.235789221 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.928971867 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.000215466 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.989636327 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.998284318 seconds)
  done (took 49.947034785 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.931009737 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.93998222 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.937248834 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.930586521 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.930650011 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.931206941 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.938877501 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.9337301 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.952285262 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.931537634 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.930391441 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.933516388 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.937378534 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.931910803 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.930440111 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.944105856 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.946848282 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.931142353 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.935082751 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.939291071 seconds)
  done (took 40.565574629 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.931349891 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.19057811 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.274697488 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.181756123 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.92880057 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.926500484 seconds)
  done (took 32.281993647 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.943455748 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.938439657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.930747898 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.988485646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.071626437 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.940222042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.931394245 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.943158642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.978211044 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.000650557 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.951619022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.960151361 seconds)
  done (took 25.430080003 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.931494333 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.93053535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.930863322 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.941955142 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.943431768 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.936214349 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.939255775 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.930224257 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.943247412 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.946153016 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.939507208 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.943185141 seconds)
  done (took 45.110606119 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.638977791 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005107002 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933208033 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.957514368 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375729795 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480131079 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.82348771 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.591174517 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.46991603 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.857759644 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132728348 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.932096405 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017427251 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.93283412 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202222489 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.251292433 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13301366 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175186586 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751865011 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930169288 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.133956224 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139967892 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.218251653 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933888978 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932921722 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.940705516 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.615481208 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.593138692 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036093164 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.255273717 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137871007 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882731155 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981402126 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.93685091 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.946418263 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934453035 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937253723 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204536512 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.941282044 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128695899 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001703733 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180597929 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939067199 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345404594 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.638512287 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.190608887 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.043557237 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932466653 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937389526 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932404632 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858559672 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015966286 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.934503626 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938853877 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.635169722 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.933853864 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014918721 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.935608953 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137725204 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.742891144 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617597738 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.932822539 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936133106 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488426895 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.941846923 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.128784627 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565879341 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383323562 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349611398 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.030203594 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.936115086 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940540721 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282199785 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865023567 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.565414691 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044730355 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071069393 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.951209423 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579234763 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231654552 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.343153122 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501639526 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855231308 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205266901 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871726688 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8877191 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15330276 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.768624499 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863749929 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149612757 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966525194 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946466192 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1999793 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.572390025 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125899088 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.949889584 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366907594 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954246424 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.946861892 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938386861 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152876397 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.51461946 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937939589 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056951034 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949810675 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018925813 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864134394 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.951378327 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.937241481 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.820024368 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942846196 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827818803 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.060542927 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.807717283 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058147827 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.877663993 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941492747 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966615411 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056034252 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.88861757 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187471418 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.242720553 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.615391368 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859513943 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.147947288 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.321380546 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175803926 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939728501 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152875026 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469626228 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.368666834 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.994790688 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240237516 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.993857177 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239863105 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367248405 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002273336 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.754631966 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.547919833 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.155499377 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958160195 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.940957366 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944344979 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944596059 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874121627 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.565845344 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.321929628 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.118813132 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154169454 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.365941607 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.002369189 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836530929 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323207732 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079324898 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.922903173 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.589138806 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.236783723 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.760612259 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.036023265 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.148950945 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.231087605 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.9831879 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953870591 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030506799 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955900378 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.949257603 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.268223188 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321126093 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.94076967 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.941408051 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.890191903 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946857853 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.942377671 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465369769 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905411275 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945770051 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.952193078 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.814679818 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001463107 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943503607 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943286813 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.465053614 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.445868579 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.946047347 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.584007893 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.949358405 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079111997 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217401482 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.322016684 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085722749 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.640339605 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.38288128 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.062435739 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.64347886 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868994732 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942619491 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.882884448 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946494705 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943541725 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950350578 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.132361945 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226279015 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245476094 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.423807769 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011999925 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14573468 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.607744987 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979680192 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944303129 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948361953 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.944884044 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941796048 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.439821391 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.482854345 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987415855 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055866243 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948126872 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073253558 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.954168493 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871827896 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.944805876 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946159872 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410338809 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.038299902 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.897922321 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.279043091 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.745006445 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156486682 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987817252 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.95524473 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949896897 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.652100039 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.069961914 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874968706 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455154681 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062945208 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.6109637 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.703090668 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497351908 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245231992 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272050367 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.279429523 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.016277254 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.159476351 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.031650926 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002775155 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033673723 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881906803 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.86763163 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.600897846 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277483752 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246148793 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95774654 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161923928 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592368 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256532122 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97521041 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.829569118 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333802659 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928030947 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960887298 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.42576136 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135652864 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028622246 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949611204 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902092045 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.289437721 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983447067 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.651470683 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959433695 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.299840667 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397736323 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.180339415 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.3251917 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175638658 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.955842926 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302814185 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.227264918 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070181175 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.954575228 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.922569561 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.166193028 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52841681 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.785418634 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951457921 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.13192565 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327834061 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.861599855 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.952086906 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.122080527 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292377765 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95021949 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.317685701 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326652387 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.068579205 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000730858 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176979578 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.67686224 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335782225 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.501371884 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.420293117 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9617547 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878011245 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.65306961 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.15513097 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951731405 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917016768 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158278342 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186230697 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628270071 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168711371 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.194361896 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.966337989 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226921171 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028097886 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.047049658 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.27050928 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.419364025 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196354684 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177708381 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483805613 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167127493 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404791954 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.096962135 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.953974219 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157225533 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169110389 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166613151 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.329942445 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124381165 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.661886418 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.956841093 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.159559895 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25383576 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015342092 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.337695317 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138656239 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.053723504 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960092835 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030663261 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958529261 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966939005 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.341447676 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487676122 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.968186378 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029244935 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.98765513 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.521546544 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.958431623 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.959727873 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228010019 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31181746 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291834646 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946227254 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951056639 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955719708 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081493099 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.883518334 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958863643 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225103196 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.957226607 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386535227 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.185506952 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971704711 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.265586553 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353826953 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.742902069 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.067303199 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960233934 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1711659 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253438881 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.212168914 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152060882 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227471095 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.295677441 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.987254819 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.336299504 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209584701 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961390498 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.98514346 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959983186 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077040278 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.155410438 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234697451 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.467237806 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658238901 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304026304 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.806232399 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957782759 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.603179687 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307828313 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.230259455 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.014871677 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032483258 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962065602 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417954463 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.75686613 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09339824 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.835172961 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885929193 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.964804409 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.232298959 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.199500529 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.666826662 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960257458 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231643289 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260548129 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226891472 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.004924544 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.828728439 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170331064 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960595456 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.970799815 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.17525766 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164431889 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197709377 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961486462 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.960799948 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.765294829 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885047232 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.956218524 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00446263 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184696499 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976148928 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.473442827 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.660033683 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228466474 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001098119 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961487491 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.223760254 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.46574198 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.49327071 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965947746 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161921533 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.893443373 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337679616 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.960353311 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409574651 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341129845 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.960318084 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.512678181 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.285128478 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229064589 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890070134 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964953746 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174016326 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.824221432 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.958264081 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.956577245 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415153629 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270450175 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.695214941 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516836109 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.957548709 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.962887593 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441423274 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070562452 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439908494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.056545939 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977670378 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47688366 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.66017774 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.245688945 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205161553 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.546046572 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.647249508 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.960709179 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.960556441 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963645256 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880094746 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145828075 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.146604304 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233287334 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990042054 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440497011 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072846728 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.278143514 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087223903 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145077365 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078017923 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.481426451 seconds)
  done (took 1704.7170676 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985307811 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.019339899 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.004815946 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.972141153 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.975244731 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969209857 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970177579 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.047199355 seconds)
  done (took 57.821866864 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.95916703 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.093028831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.963886272 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.960345109 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.960453248 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.959777787 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.12998727 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.967915898 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.960311428 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.964548391 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.961054794 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.956830134 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.262532216 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.977590912 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.959999818 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.957526981 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.395540151 seconds)
  done (took 76.276931613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.961788005 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.109754062 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.997536295 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.964955816 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.514216654 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.960545441 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.191446109 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.982101284 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.016265835 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.175380814 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.255054593 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.96841243 seconds)
  done (took 90.976685946 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.973212743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.963019761 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.961284034 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.963115897 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.963242692 seconds)
  done (took 11.713254539 seconds)
done (took 2225.270102152 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.192336515 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.020760307 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060541067 seconds)
  done (took 5.959624166 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.109677738 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.154348253 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.265777108 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.027763885 seconds)
  done (took 10.445749297 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.275086104 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.326708622 seconds)
  done (took 6.480528084 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.290717726 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.981130947 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.336302408 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.965325141 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.964073112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.963173816 seconds)
  done (took 22.777240786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.962827459 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.962387718 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.963346873 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.963817785 seconds)
  done (took 9.731447705 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.962493802 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.662873945 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.963340155 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.971820834 seconds)
  done (took 21.438668006 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.110011941 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.078526349 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.106342302 seconds)
  done (took 8.173380247 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.153512029 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.186018314 seconds)
  done (took 7.218105319 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.106507669 seconds)
  done (took 3.984516233 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.992204108 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.234912412 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.447058249 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.483559479 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.544006948 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.856392171 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.28849083 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.187339253 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.416802447 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.428442434 seconds)
  done (took 25.759721671 seconds)
done (took 137.649137948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.305060106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.994385412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.166218497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.317448983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.199282018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.165911126 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.184661963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.309573594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.99689975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.977966529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.311229387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.193607384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.134528054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.987454022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.137987345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.985988065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.202099201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.327644621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.025678796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.284342484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.19212569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.965134375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.157489119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.976558498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.209594543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.120313362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.508647669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.985546391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.175490702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.516295408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.121073048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.428212114 seconds)
  done (took 171.445662777 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.96676747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.963384397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.964741453 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.962731444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.463068466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.965834194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.964764698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.962447144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.39898533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.390507147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963714565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.452914797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.965764948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.963647104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.964480076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.963450163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.57226764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.964637644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.963507558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.963224457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965144636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.286403495 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.964173755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.300093591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.55924636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964206786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.962230822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.963407789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961095759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.960487827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961808838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960769287 seconds)
  done (took 212.436601219 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.906245391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.962655127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962079312 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959583488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.959000887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.959395754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.960699401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.957561693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.554524467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.549668897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.958580346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.958506933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.960152462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957988361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958772822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957507535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.956759697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.927716959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.958713844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959029567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958202496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.675403474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958647869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.684613205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.958025768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.959586412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.958591793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957527507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956821629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.956667574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96030978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.958872953 seconds)
  done (took 223.110666971 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.199991438 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.96017237 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.960828412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.868700384 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.962229084 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961739207 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.954542044 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.208250988 seconds)
  done (took 19.956261876 seconds)
done (took 628.838629993 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.344768149 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.175221656 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.115088253 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.98698196 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.259035492 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025185261 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.983124585 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.04992792 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.806510509 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.055358372 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.617733008 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.000779377 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719316745 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.007900668 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.087051665 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.040748736 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.535679345 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.636488628 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104122053 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.064479153 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.138297337 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.900944163 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.065333571 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.839245781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633315097 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955409456 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.023527201 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.540664966 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.995607389 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.119789879 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.681813129 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271055342 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.994558471 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.979599589 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.036964358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.01396056 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.1964622 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.996599351 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.098671434 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.6923992 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.080114467 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.704135169 seconds)
  done (took 106.452313419 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.973891393 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.969971198 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.970456215 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.972687942 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.983005285 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.974518794 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.974531738 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.975489858 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.974590984 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.972041517 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.970523781 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.981092789 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.969788244 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.980311829 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.973537782 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.976101815 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.975883479 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.985278323 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.975944116 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.975755771 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.973470777 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.971865256 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.966145801 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.97161133 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.971475018 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.972616291 seconds)
  done (took 53.224916901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.9656491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.11730289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.20548058 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982546327 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.968162587 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.968782489 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.98422178 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.969256864 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.968516562 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.970731255 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.056370254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.972263717 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.983980679 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.209160537 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.978706235 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.965044547 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.964968995 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.96512414 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.125987935 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979465091 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.985530483 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.969296703 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.984244645 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.979599467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.967686577 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.966531742 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.970602264 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.436468941 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.974803318 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.058517878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.015178417 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.98979422 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.361223731 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.220394184 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.018310053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.976577079 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.966730101 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.0616704 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.974147837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.969213879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.985735518 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.973548251 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.209417312 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.484730078 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.978094331 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.966134724 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.443829235 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.067409558 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.010216469 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973082829 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.212549881 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.980664881 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.968518678 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.970026209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.004308584 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971303887 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.967965009 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.290336937 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.978313661 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985421248 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.971502292 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.968692947 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.131848324 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.974224791 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.120338876 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.973826371 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.974305867 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.968479625 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.213857152 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981490105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.504108479 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.979879468 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.967149568 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.057389323 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.1251925 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.464542297 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.978069598 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135180007 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.375424932 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.991057771 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.975944122 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.424990253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.997957313 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.975866329 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.97010099 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.970861305 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.967975991 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.013678018 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.984512889 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.421471695 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.49890914 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.305294994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.993695021 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.986463135 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.970445965 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.290706853 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97726972 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.968549427 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.203974926 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.507054625 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.981870472 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.976237644 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479614821 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.98220773 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.988512241 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.977659453 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.21965923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.983614846 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.011595421 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.969795073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.97602111 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.971180647 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.989696018 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.976257449 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.97047255 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.473636355 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.07735565 seconds)
  done (took 243.725546164 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.971923841 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.966898157 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.967855272 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.966641416 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.968714424 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.970143044 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.968826517 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.969777237 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.971829844 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.968684626 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.968699565 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.971886105 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.968533708 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.968584629 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.985995927 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.981115028 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.587101161 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.981137935 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.98055745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.976677868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.633199195 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.985070549 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.980564673 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.977670252 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.982280235 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.980038602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.990892216 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.984025571 seconds)
  done (took 170.465801391 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.982023509 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095132335 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.997496471 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.011447996 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.987919029 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.982522623 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.08049148 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.998154699 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.98867419 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.983518497 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.983445349 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.043302832 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.989572337 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.079169366 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.010926838 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.088234588 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.085417422 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.986426476 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.984119615 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.983101644 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.012401424 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.989223915 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.042987835 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103615796 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.998883771 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096403246 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.999244933 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.986639978 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.984418521 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.096134491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.998144215 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.044466262 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.010269061 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.001110869 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.105246092 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.095439026 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.084797487 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.086382879 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.987212301 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.984126019 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.984781001 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.986981788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09938598 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.998848207 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.986070461 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.100691904 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.999676505 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.98451729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.983752794 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.983843253 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.996822791 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.002121888 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.047848159 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109350728 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.015422854 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.006511555 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.08208915 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.11868929 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.985251384 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.081632435 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.990211113 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.098265883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.001541668 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.987028337 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.9869722 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.987735316 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.014055435 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.089429191 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.085766141 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.989595235 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.0818927 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.016504824 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.991331122 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.985685444 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.985711024 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099295436 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098533629 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.017351005 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.022462392 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.015121523 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.995388331 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.987314989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.988676124 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.003541136 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.990868067 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.100355983 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.099190531 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.989203351 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.986182008 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.985989241 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.987819062 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.012084498 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.10616153 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.01905385 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.091886293 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.048593904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.056914958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.996192413 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.000247606 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.991361048 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.048971018 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.997545333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.999028145 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.312694223 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.047292987 seconds)
  done (took 214.890023552 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.351257665 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.032343448 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.043342067 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.305415144 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.368701743 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.202218294 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.028925951 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.035273764 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.057480085 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.232648834 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.106991786 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.054322161 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.021159487 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.010059313 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.033447161 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.054530282 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.045506463 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.368386304 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.23498577 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.239420095 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.022168125 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.323907465 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.378754288 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.606543356 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.080586665 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.444565211 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.622023748 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.163386301 seconds)
  done (took 65.378871849 seconds)
done (took 856.015752931 seconds)
SAVING RESULT...
DONE!
