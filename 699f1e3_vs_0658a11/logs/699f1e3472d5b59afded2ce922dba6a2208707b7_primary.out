cset: moving following pidspec: 10731
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.049955933 seconds)
loading group "string"... done (took 0.611457997 seconds)
loading group "linalg"... done (took 9.749456142 seconds)
loading group "parallel"... done (took 0.186339739 seconds)
loading group "find"... done (took 1.559597652 seconds)
loading group "tuple"... done (took 2.230055699 seconds)
loading group "dates"... done (took 1.536275708 seconds)
loading group "micro"... done (took 0.242548456 seconds)
loading group "io"... done (took 0.606359461 seconds)
loading group "scalar"... done (took 48.873002061 seconds)
loading group "sparse"... done (took 14.838935896 seconds)
loading group "broadcast"... done (took 1.284901702 seconds)
loading group "union"... done (took 13.786841538 seconds)
loading group "simd"... done (took 2.799964445 seconds)
loading group "random"... done (took 11.165212086 seconds)
loading group "problem"... done (took 1833.319286689 seconds)
loading group "array"... done (took 26.807837053 seconds)
loading group "misc"... done (took 1.17571986 seconds)
loading group "sort"... done (took 3.871975361 seconds)
loading group "collection"... done (took 19.647315159 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.744511263 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139889676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.21330099 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.368303273 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236630697 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161665697 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169947512 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.580400371 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.964397534 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.280587125 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150892249 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.590296841 seconds)
done (took 6.286689785 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25951183 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.385724691 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176070227 seconds)
  done (took 1.193299611 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07349318 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.184114631 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.113534299 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111179818 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098138477 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110192027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111775383 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111822951 seconds)
  done (took 1.474621562 seconds)
done (took 3.641294036 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.544690138 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.875502378 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.575006431 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.168046225 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.19930013 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.178338851 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317261855 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.156067746 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.116899054 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105801312 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.217902639 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.369634171 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.4975086 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.037886357 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087734387 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.123540803 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.094648578 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687895881 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080258314 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137294565 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.590918693 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114899731 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113261465 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123762679 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204986057 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131350833 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164057731 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092040074 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.690061268 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102304222 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.230415773 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082184 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175993271 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.253814651 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079819566 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105176274 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686224703 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180834748 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114887261 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098531253 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69133482 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079932946 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240442474 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103937718 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108834885 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186784375 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10319361 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096602318 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100784093 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082909135 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174035324 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.485564339 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10391111 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170155765 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106694862 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70577285 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094654626 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155040478 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.136237033 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106082084 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081361307 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109204793 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156769884 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111014448 seconds)
  done (took 20.131659243 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.157500984 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165767002 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091075807 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140200268 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143398981 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093454046 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096039482 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077548446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124709141 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.233751154 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138351146 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.184154829 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073249064 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099246016 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.140707546 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247516946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104816983 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119082384 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09755339 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089184273 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140942701 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109202227 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106546465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094206945 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.182677024 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201309165 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108572678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119392537 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097334617 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115622415 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138599973 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147106872 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088492801 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081075694 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.200969787 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103606493 seconds)
  done (took 5.304598082 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224289187 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11543433 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237614006 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.186754449 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197016724 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148172585 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16458845 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154808216 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.285339264 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.234702845 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178030189 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110796685 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109549598 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091851488 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078479189 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092686865 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672974621 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178000749 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148062342 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164385258 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10065559 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079903659 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095987662 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082489467 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095070192 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100944947 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122855041 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35207152 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221535129 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09931304 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.353386237 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114342622 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089049754 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130251966 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204042183 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132226667 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080622293 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140888343 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100959545 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079380561 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.235517523 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107200029 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075982305 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127242674 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130309157 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131504808 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096969543 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093275279 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246656429 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096299678 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102369937 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.136674193 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199209731 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.133666156 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077371289 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.380832457 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095788765 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103053813 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096803454 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298197501 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137374811 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080870125 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.092958769 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084944888 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.091799034 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.462459321 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090850272 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.025665712 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.091569296 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163104063 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097462162 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102532293 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099643241 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083231685 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115000475 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093781676 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076746279 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094705831 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076978654 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098309567 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118132291 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083839548 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093313991 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096578339 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144392637 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113423737 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113332025 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121381207 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082816406 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094073403 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124261674 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080029365 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098545903 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172482293 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103267923 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103986558 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083439096 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139967038 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093665243 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.215314371 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092680798 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120788343 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096668487 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110872842 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119523972 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094402531 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09757882 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076488355 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094447526 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143898448 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091072812 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077252301 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098366757 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109973562 seconds)
  done (took 24.29442254 seconds)
done (took 50.360784731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.516159513 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119848672 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11907357 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.119643943 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116857444 seconds)
  done (took 1.700221072 seconds)
done (took 2.380515775 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.379426944 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186441774 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119630907 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185402165 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104174473 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.206775437 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.173812097 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116380886 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20379647 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099299928 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180897493 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098427762 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103409332 seconds)
  done (took 2.8688299 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096768895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12291877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083851178 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112383179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076690292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112774876 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109946753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11722947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110819245 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103684307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078644968 seconds)
  done (took 1.805065809 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094557783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116975799 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083509528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108287226 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077266309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10915812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10734902 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103673865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108287201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088032035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093957228 seconds)
  done (took 1.773253948 seconds)
done (took 7.119560468 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.180283341 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.473422658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.150122479 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.200165877 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.393289953 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.247786409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.610507393 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164429811 seconds)
  done (took 12.307645244 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.116892521 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.156878264 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08625553 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100494606 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083494499 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098273184 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083509166 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097878651 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098738289 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085311084 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099802722 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083662609 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096956044 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083579409 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098918279 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098658553 seconds)
  done (took 2.323095728 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137351209 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.135926853 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091247635 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112236916 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10375175 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089788697 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106754066 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104694159 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08896406 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103733741 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110100637 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09501222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108855756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100491918 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092489868 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111303911 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101518925 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092669761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108286394 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106907035 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097157217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103633708 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108264444 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096143004 seconds)
  done (took 3.286280834 seconds)
done (took 18.597016564 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.18065178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099010408 seconds)
  done (took 0.969034335 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.147462893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.149348232 seconds)
  done (took 0.990310397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113759195 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0969875 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140860142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117596634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096518696 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083137155 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.135179755 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097569246 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083423835 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098554978 seconds)
  done (took 1.76143902 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088317581 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101736884 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110702011 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.147493301 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.096615187 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102972044 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10311163 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087689077 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104063509 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.098760331 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092758135 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121164335 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.105021623 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124511493 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088193418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.220218613 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112356918 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106029241 seconds)
  done (took 2.708830084 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083045349 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098749903 seconds)
  done (took 0.8770302 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088049833 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097423255 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088494673 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103849782 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098193824 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082669461 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097423298 seconds)
  done (took 1.351063628 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.541368752 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271583162 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373301136 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.119838791 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14233301 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.3960345 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144250251 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115470839 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115910054 seconds)
  done (took 2.957572652 seconds)
done (took 12.31455394 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089648418 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.231856944 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.58692456 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120806705 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082083678 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154798708 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.319357972 seconds)
done (took 2.286171126 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358986979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.154062682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09068032 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095255124 seconds)
  done (took 1.396844827 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077340412 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105406722 seconds)
  done (took 0.885429766 seconds)
done (took 2.993660833 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080732843 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131165835 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079338263 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096701514 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.095996759 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080043324 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.09611378 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080307573 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093822516 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079708703 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094129024 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080485819 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.093834099 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079687546 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094677109 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079715189 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095212271 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079089347 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094445768 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07927785 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094754376 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093641074 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079488542 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094499445 seconds)
  done (took 2.885889917 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105434848 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099044143 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103020705 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087217365 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103149884 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102207323 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087280708 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098720629 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102623903 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084121124 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102867481 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103058925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083114935 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104747928 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096711482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089760945 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102160385 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098682961 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083852514 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104518978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101326758 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08485162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104494391 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103019872 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088899771 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104524787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083378221 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098802045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103202851 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088224316 seconds)
  done (took 3.607232032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089555511 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092209815 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081089617 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105062782 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077720341 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097206433 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077764068 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093238555 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096553493 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080817184 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098140618 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080987478 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09313338 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083510269 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097554553 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085111472 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113291792 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093379875 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077890235 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097295466 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082970574 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093187675 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080668657 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.096995329 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080578285 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093257823 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080479482 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094631863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082660429 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09588656 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098330348 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086464107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095282008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093480053 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09963958 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08147966 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101508032 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092273726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083041626 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093502675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078031019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095114334 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077722517 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105981278 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08072342 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097522036 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077212099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098094128 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096274814 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086620489 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.092428795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077899984 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100909913 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083912216 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098990548 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078662359 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099123942 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076866525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098059254 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095386265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077529013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092188429 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085078669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097617845 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104025341 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106158382 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092412406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083595506 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097702503 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086305717 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100235206 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113174753 seconds)
  done (took 7.261843014 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096536752 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109691629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083768814 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098667613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097425487 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081627293 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105884094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08138113 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098360195 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106520255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081861433 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098485992 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083108817 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097919223 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082265137 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098461831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106713435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082356701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097241399 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082305405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098178925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105830304 seconds)
  done (took 2.788047374 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.259521981 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089286485 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150242543 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116092634 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121269792 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117840142 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086804022 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104044748 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101700726 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093654439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108813126 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102705072 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119532613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094611107 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108307986 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111558939 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086395047 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110469306 seconds)
  done (took 2.79807994 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100705364 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101465478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124816418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085552266 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101042166 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084255389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10890886 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117328715 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.1000187 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085449743 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111510887 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099304687 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084493057 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100638984 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085271419 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099151237 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098865151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084893077 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110422201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108506846 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093765083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112417806 seconds)
  done (took 2.917375519 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101629209 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100753598 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.139436422 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08939199 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098337679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097905346 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092338841 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102964164 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092586301 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09846494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101335951 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082962988 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.10871284 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101196096 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093221275 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101742762 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083853072 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101001886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099399853 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084340056 seconds)
  done (took 2.690493624 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176624368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099785387 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117456213 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128968658 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116420038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100546098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130010521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116587746 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098929472 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131873706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115385948 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113840578 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13038303 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107407405 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115429561 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129370885 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129770365 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128827747 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09968939 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114984164 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133418717 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100012782 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12894802 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116804374 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115175646 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09879014 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114627414 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125641786 seconds)
  done (took 4.05975102 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081812427 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095899403 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081526837 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096754528 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081052023 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095896668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081798958 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096853553 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080692182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097590553 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080740186 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09692545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081376587 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097519194 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081771327 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095908124 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080892108 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096558532 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095898757 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082376404 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096446874 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081504247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096148356 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081168398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097209607 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081199927 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097191961 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081730886 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09649795 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082373687 seconds)
  done (took 3.394563313 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094459691 seconds)
    (2/2) benchmarking "in"...
    done (took 0.124447355 seconds)
  done (took 0.944351637 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.090575455 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117804974 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081336925 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098900554 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10957708 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083665443 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110773947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109001793 seconds)
  done (took 1.526722254 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.150197053 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.149012541 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089826171 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11186046 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.147839845 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.141193212 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166724143 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1054467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085284155 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096452681 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14537932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077752198 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10653228 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100379298 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088335057 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110656079 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099589505 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092931309 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107666364 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085392717 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105099606 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113009801 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089608742 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109803107 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096991355 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091237612 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109984928 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.112159301 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083876727 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108232215 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086287294 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099499459 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104166178 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088776461 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099890589 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.147689347 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113994105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083544601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.105635043 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088500663 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109492183 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099139185 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089993837 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103042686 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109204433 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089077634 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105171725 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084452333 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096413844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098788223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084909341 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098013657 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082012107 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105664676 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105899123 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099536296 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101203774 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.082674126 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100581834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099426478 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087030191 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100228001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106841889 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095134194 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106705387 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087852082 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104371089 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100295163 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.085277563 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101197551 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.088808441 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122961746 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109587048 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088734641 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106959862 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101283284 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085019122 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107481414 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087723807 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107186689 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104626703 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090976843 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107512451 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098945706 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082929258 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106740651 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085397534 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102580301 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094768347 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101679537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101860309 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084423513 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096455067 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108784112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083847641 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103983173 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078621935 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105643409 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098215466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089367346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106598113 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085475845 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108505369 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107147066 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089308229 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105384599 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.143636062 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102120552 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082717753 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102729203 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089331311 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09891369 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092018675 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098485949 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101548944 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083403172 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105541133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107427006 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084272164 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104645859 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090281403 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108544635 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101957699 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081596266 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100913594 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087554237 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110150533 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10843595 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085313817 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102533414 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083067704 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105673959 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104202086 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086656526 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105183347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08407636 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099253464 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100843048 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08913979 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108526334 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083376277 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103461978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108447395 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085998953 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104354608 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107639153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082490066 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097218749 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090165373 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101004447 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101939158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094597172 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101120729 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084905397 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102206693 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112593456 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083920892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107321133 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102457494 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089107724 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10729034 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079798999 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102147472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085700204 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109477084 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.1012992 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084292665 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09980914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089929203 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097953693 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104780592 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079642907 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100912992 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08971381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101919068 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08745996 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100886105 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119503474 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097870609 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107865162 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105679289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09092458 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105075523 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102804091 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088199795 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107488493 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089081093 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106909834 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104841647 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090307727 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101270888 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088617926 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104849166 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107635627 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079675064 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101919459 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078910482 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105706246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109108451 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088122741 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106687251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085362211 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10422207 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112067223 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084571204 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105756869 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080099953 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105477554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094308148 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107259234 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108954397 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092178842 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104629536 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100905773 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09447948 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103528631 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088489502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102353204 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096821532 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081793573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108468739 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086237992 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10015632 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082828709 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108307675 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108789341 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084960872 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098217395 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088024133 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111828016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09931018 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088262053 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102014293 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106057473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100020518 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097677956 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101131106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094019399 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106878363 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082497292 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105561914 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102319126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090117477 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104822597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086271726 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103780574 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091373566 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10407222 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099608855 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084367504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103292314 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079999017 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10289411 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107439151 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086661868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103087953 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095392924 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107821293 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107367238 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086144953 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105983718 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107458654 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090928396 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103310377 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090094827 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100651631 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079432452 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102735367 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097193141 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08531455 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1027299 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088650184 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103367629 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103873012 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087669792 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110675793 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102881579 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091293451 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125205394 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098764345 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080448575 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103497099 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104311919 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084850052 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101977864 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086782044 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107984692 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088639478 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108638332 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.1019496 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082341409 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107071429 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084296815 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107391533 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107608823 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.092033997 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101166886 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088237563 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102676364 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11398318 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082365871 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111857786 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105716103 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087180889 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103165179 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085674983 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101532933 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09843276 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085901565 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108733163 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085491548 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104610872 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105381439 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085171159 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102944945 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082172912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10819165 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103141517 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090754832 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101809851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080526945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098555964 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088742847 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107536846 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108872389 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083446158 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104744048 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091448896 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104448422 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100828316 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093943084 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110051454 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09023014 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11429994 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098364405 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085654727 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114351459 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101288083 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087831314 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102643154 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08194958 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110266407 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107565344 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091269759 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103878491 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080290034 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101095597 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08977388 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103936929 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.105098447 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085931724 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106981118 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082781787 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104737312 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089130548 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105665593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108747348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090364216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107357949 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102997425 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090433512 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101186145 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081965065 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098865201 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085118153 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109034309 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099321344 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.087956287 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107564915 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085586392 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103254047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088043754 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102210623 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10947803 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088552394 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104532988 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112870615 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084647603 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104773889 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087907869 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106725852 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080230113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105515264 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105234577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09207037 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108328389 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106777098 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087590894 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107108137 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08632109 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107419531 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088512089 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107732595 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099464944 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091284393 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110580573 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085104715 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105041376 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103729643 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083534126 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104993023 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091157041 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.1049536 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112018965 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089607749 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104153364 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10768807 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089928054 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105444245 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090890501 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101874659 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108828688 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08183304 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111124153 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103826659 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092269669 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103150489 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08264015 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107109773 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089445469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105475328 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110396224 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091116977 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098625914 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080817361 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104226001 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103199495 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096099718 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111546747 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085580915 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104503083 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104324263 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084467409 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111037471 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081348254 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104008262 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105921781 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091376754 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104303547 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082799865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10547511 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108663563 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091003116 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106760015 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099653184 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089218988 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109309153 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085546322 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101408555 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103118064 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090919812 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106397804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08387595 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09949435 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114356267 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092456262 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110270066 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102976452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091028182 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10361514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086744361 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10942142 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103400875 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090538391 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104688618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08881096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115431965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098044728 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08444859 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116123317 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088901659 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111196103 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.105185351 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087250288 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111436456 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109851615 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085768131 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099299552 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082576193 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104762898 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082054835 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104505702 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115980715 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092008047 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106171287 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105057752 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087564925 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103773691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08599959 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099916956 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091241683 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103176373 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113391676 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08236838 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098867797 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087176915 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107768898 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105785286 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089827988 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103401332 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088375099 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101368756 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086895199 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112181086 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106944326 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09029257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106691262 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086077051 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105246374 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114250993 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084386772 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106559791 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116064421 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091006629 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108546352 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107225401 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093631695 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110788491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08646575 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110453894 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105056672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087597833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110711524 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092927996 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121682664 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10688258 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082698356 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107727482 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103765236 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082566716 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114165236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092279583 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.1098037 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108029402 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084474064 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112031733 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093225848 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107104516 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1060284 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088154085 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106462229 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103169191 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087494383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101963394 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092334905 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110094508 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089900809 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112559312 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101287114 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097267775 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113770764 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111022277 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084097458 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100603902 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081791898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105254201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091591146 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.109111408 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104805552 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087526365 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106918953 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089043443 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107224112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104680196 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092593101 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108778378 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.085357429 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108401437 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086948811 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108314608 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102860174 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091119644 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111064031 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091544678 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116705847 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109423744 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087354026 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103727803 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1071922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.087204123 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108722354 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088598003 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103583085 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081996194 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108930904 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110459945 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088986312 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112660299 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094486356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105580038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109730928 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093920394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108851284 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085846197 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109933489 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105260581 seconds)
  done (took 59.803381492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.164473964 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093627863 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10633028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086683476 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136880649 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107487737 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104722343 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088740681 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107398188 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101387524 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105808677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10534993 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129709304 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136487085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132634346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101067788 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105749823 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10725676 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08679629 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107159698 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127475189 seconds)
  done (took 3.114121815 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109993775 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124662062 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124379469 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126760003 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116429069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.103669193 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123958105 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123062548 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126281559 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119318963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126512759 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122834481 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.100015981 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.118158288 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118050409 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118435715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108280419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117369825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124407666 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.124901987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118233023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10577666 seconds)
  done (took 3.372711409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096060171 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108050874 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091483001 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104676332 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09014167 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.105289856 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115372853 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085887303 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115943015 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086221051 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102324168 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086199326 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109986912 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.104627779 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.083804537 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105820385 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.096712506 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10864876 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091585771 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.105986894 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129719351 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104164356 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.087690002 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.103244185 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100166507 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11059748 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.090098504 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108871705 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101927104 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090273487 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104623567 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088576166 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109699582 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08316597 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.102527862 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108182962 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089460511 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.106172679 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.086240296 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109101914 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086731133 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111135049 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113999813 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08695018 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10639058 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088450527 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108356879 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104432495 seconds)
  done (took 5.592823968 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.149943295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166443524 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.116372587 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154129628 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130035458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103459916 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112452334 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.156460151 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.112748919 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.092923467 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.132907059 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132207403 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117610339 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.122009605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096614249 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113509684 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115477016 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09500322 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122947805 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112885756 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.120746677 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.101451881 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.130493244 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128997763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115999949 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093706232 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117908402 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.121987457 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128585939 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.102586558 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.118603126 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122366348 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130139814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.119121118 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094404029 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118402001 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.135219763 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.115156872 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09570012 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11054109 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099257262 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122027766 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115999642 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13305785 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115386549 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09984997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114309573 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108974453 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112224304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119891437 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.125969612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133037639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116584355 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.095584731 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12322127 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133708106 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.114055039 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.093944669 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115975444 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131053783 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093631373 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116729221 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134294996 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.118239319 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.104212768 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130891627 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.116909724 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116232886 seconds)
  done (took 8.93598494 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125050605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11808839 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131872579 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130087594 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117207104 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.097831443 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116869572 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116658718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098166429 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125657025 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116660076 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20266827 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113083304 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124772327 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097471432 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118552837 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117437233 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116630252 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098533943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116212132 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116797742 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131889633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097915755 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130529149 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132906965 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113565746 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09847275 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118327914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131130368 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117432774 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133100847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.098077225 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118452603 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131845595 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132688673 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.117515094 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090850931 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118261694 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117075916 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097973801 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113388228 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131881711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118056234 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.094434613 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118363457 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1168604 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131631636 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13361107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106051903 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12561032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117491638 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131158351 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117747947 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099172518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131668113 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142166495 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131240596 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131423864 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117135953 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131357337 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132214288 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140728302 seconds)
  done (took 8.23986943 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087695462 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106828323 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087796438 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106952366 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087398022 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107869204 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087534594 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107045925 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087734052 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.107740126 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087166239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107595047 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087314792 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106786158 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087958006 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106577877 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086685538 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107636961 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105316924 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087367871 seconds)
  done (took 2.727532656 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101270786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131422129 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.110315985 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101382801 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111369574 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.119538866 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090110815 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11132172 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110325777 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092426908 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123485778 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123750359 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092093115 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.120536641 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122640301 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119797636 seconds)
  done (took 2.569155697 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114234513 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13205195 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.166183846 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114817142 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112036312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.099251394 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111750367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.091732119 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.108522467 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118279218 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.095110577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115343357 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090339905 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.110512983 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110450787 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096738059 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.110141806 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.09569428 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110402879 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.166280758 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117979794 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.095222929 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113513655 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.116407796 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093687524 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117571627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11932411 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.091681916 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.112906836 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111549201 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096509349 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121284364 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109702199 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.097183609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110404473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093105863 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110364394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112347298 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.095330377 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110152414 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.092692688 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113811107 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110303359 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094994041 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108709942 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.092394508 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109214503 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117474103 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.093834936 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.114669564 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091691703 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.118116061 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115677768 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.101944793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.121497104 seconds)
  done (took 6.803135681 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104964442 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113223135 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.12581639 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088683151 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112800015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.095660168 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112688636 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113774058 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094629024 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107877692 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093386003 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113534644 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113145101 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093695163 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114520119 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093086901 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109156983 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113152854 seconds)
  done (took 2.710968512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09819422 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111280924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097237019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111040824 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09085433 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11160203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108241884 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09009052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107993187 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091355331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111155255 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091525291 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10928634 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110951494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091171799 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111348489 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.090890259 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108909346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110044861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090230442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109994676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089497071 seconds)
  done (took 3.036198692 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104497036 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.166965742 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.12113866 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177253558 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11027182 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108890945 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.100821881 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111696855 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128090556 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088999292 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.108876492 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088959029 seconds)
  done (took 2.215996562 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121671179 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152387143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112035159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09131603 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125201413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118809238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118018349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098177254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130420136 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135502842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117727809 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131806504 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109514877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131592163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124381056 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123711808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117465119 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098744758 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112031676 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141027035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117669254 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12964552 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098074716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118620219 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117372702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131302786 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110055542 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134894005 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118895138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129449357 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124809386 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097502913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130702929 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135040883 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111392646 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13041974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099075684 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161964539 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105060833 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133137523 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111685421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124685863 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109277734 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128533942 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130791351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117658365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128004286 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09901668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117452556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149898487 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124659339 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133417186 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125139599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130107322 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129448374 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149482042 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135533637 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132167555 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105338739 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135998819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13437995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124803881 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132813185 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135751759 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126316564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134168193 seconds)
  done (took 8.956279327 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160765427 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094350649 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119516248 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136252159 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132255704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098626796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119303548 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118147327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09872575 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114856849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170066957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117951672 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132504498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133225967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117204179 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098876362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119515302 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13340124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093696186 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168166517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09820299 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133862345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131763949 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132787209 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13553802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125448426 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0977537 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119479024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119667493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117961062 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107083158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117618293 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131705781 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113830292 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13200939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099839945 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119049647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128665377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099249871 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125936599 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132559645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142189872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118410968 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118982898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134645037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098812559 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119240728 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113142527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099420405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114546067 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136361208 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134826286 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136684609 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133425871 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099530968 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120502157 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118442579 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098899518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119532961 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125362921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133462688 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098364244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170765268 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098456398 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118246973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133323107 seconds)
  done (took 8.83830069 seconds)
done (took 162.493319386 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151826537 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.17338124 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149817924 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148269064 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105003848 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120695498 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139241164 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149495936 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105553876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084975122 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105579495 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088868126 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172659792 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0850526 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105634617 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108283201 seconds)
  done (took 2.794901181 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207276213 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.299978337 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126519141 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110326833 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09525859 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109424298 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089728579 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111699566 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107280708 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100150888 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108311967 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088041154 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122225813 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110300136 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087337286 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108351343 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121721309 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088637721 seconds)
  done (took 2.997385189 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112445842 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149411122 seconds)
  done (took 1.076077392 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125653987 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211842007 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29252336 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168540798 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.138798371 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132017918 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168425934 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125439943 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202417695 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131711752 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131209316 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093853823 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139467112 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120743037 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.104833345 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.113165759 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142930664 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.101444605 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.123131007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115219652 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.367666748 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093996986 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120491134 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121898857 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189285229 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130445238 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094184542 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114891019 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114880956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102207067 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122088438 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131229581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130541491 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179679272 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120133452 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.195129337 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101522171 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112303181 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120597515 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092969712 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117920795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117175248 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108927411 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112684237 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113694728 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102486326 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113905757 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113104127 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101753779 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124792235 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122491202 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119864732 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173848007 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123883575 seconds)
  done (took 8.114207633 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.896403656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154804438 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091178666 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.025576561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144277707 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129444092 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.901912298 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113853914 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276041077 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.897418995 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128751571 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105004311 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.279116754 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.27028317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.18291427 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.389219845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.745185667 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126169831 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141486518 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161951203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118870548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141960441 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112774538 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.471534709 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091971482 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111072996 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119105382 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105251924 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.196445428 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08941758 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115920705 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.219761964 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28237833 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225005919 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113124313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089366507 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110762499 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182632475 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296066264 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.260796686 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184182951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08669946 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110281206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125566639 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113742367 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107821529 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.200688714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191255082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210151459 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094970471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125725031 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121956318 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122940684 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178099245 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107119753 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365847288 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.370832467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110313696 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100073147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130777965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290780334 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11079334 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254738662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140167038 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.236449716 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109357294 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813224314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182303111 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10985724 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099883614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119798374 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118011088 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123515981 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180229398 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391403016 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128117395 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095364557 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110560162 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.270448126 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0904377 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110937577 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180049761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114884629 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12001578 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108001869 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128407502 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.207531772 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265721676 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12738643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120391188 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096746265 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124788879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113440438 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230201537 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245916108 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.195506634 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.247657978 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105635557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201951762 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181405443 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125725307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.207636695 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099632928 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13107663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125708272 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.243973543 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152385789 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.112388357 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09599538 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119833364 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156771269 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114202172 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119437344 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185569885 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.50969755 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182442387 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109910971 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094045985 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121892053 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177438794 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119650226 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286685621 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123170708 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183925369 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121790775 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10858451 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101042495 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.203072275 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128062704 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121154493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106373531 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121046454 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.266539849 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266514874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107821939 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259315565 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190585005 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124238955 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212119033 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101011673 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.209108403 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123012663 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10421239 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114367361 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8085773 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12722279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120962209 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097020483 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20665423 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11128072 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112350108 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089806015 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107922217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838696241 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093188123 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10877845 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.090730352 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123064154 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120801939 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097278119 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117810072 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198394078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262515673 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125036158 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098760027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111168463 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175969006 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.114324583 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111165326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0902523 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112039708 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101204039 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116778905 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112271503 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190530919 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.194955322 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.247753332 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575730946 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089837814 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.111202007 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258812083 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111819886 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.335542543 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120772975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256206141 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185123234 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108921658 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367207647 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.207354247 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209639747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094911978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.210809761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086699773 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120419759 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.197728811 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090137803 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120108812 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175137839 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131306548 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127583929 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191904551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11168712 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245438634 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10829295 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.184294742 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115445656 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125046964 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340309705 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0892694 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134813161 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19983592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094667192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111091425 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.736974713 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090405458 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123753288 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122375002 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.252054311 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.201518536 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100025019 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121561858 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126237627 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179988546 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.247056395 seconds)
  done (took 47.178075529 seconds)
done (took 62.966167173 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320613252 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280235935 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.334326859 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231993935 seconds)
  done (took 2.083221723 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.231780057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160991701 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.212042803 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088306908 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.221862885 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087701588 seconds)
  done (took 1.837311367 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.532031677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.433684835 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.369809537 seconds)
  done (took 2.174995155 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264877412 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.296900444 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.364198541 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.487808573 seconds)
  done (took 2.358652143 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.280040934 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113413652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128508796 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.179817142 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.250779172 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.279174046 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.157583327 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203919419 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.115962309 seconds)
  done (took 2.597611328 seconds)
done (took 11.891805451 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.355491687 seconds)
    (2/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.320264669 seconds)
    (3/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.279066019 seconds)
    (4/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.244688615 seconds)
    (5/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.269213992 seconds)
    (6/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.225740239 seconds)
    (7/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.155761024 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.163447409 seconds)
    (9/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.138853252 seconds)
    (10/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.196126522 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.262154822 seconds)
    (12/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.28168893 seconds)
    (13/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.119962565 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.221281768 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096639924 seconds)
    (16/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128366467 seconds)
    (17/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.207638776 seconds)
    (18/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.158629804 seconds)
    (19/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.170920883 seconds)
    (20/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208088977 seconds)
    (21/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140618831 seconds)
    (22/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.216276168 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.300689237 seconds)
    (24/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.269238652 seconds)
    (25/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.249596781 seconds)
    (26/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.222776904 seconds)
    (27/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094190477 seconds)
    (28/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.219151068 seconds)
    (29/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119682279 seconds)
    (30/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117309637 seconds)
    (31/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.119860135 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129830334 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116924277 seconds)
    (34/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110312392 seconds)
    (35/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.169443992 seconds)
    (36/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195517273 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164994299 seconds)
    (38/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078303616 seconds)
    (39/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.149104702 seconds)
    (40/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.25818596 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.149049299 seconds)
    (42/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1176248 seconds)
    (43/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141806531 seconds)
    (44/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.137226788 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132488363 seconds)
    (46/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206389692 seconds)
    (47/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128373799 seconds)
    (48/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.140799504 seconds)
    (49/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.182338332 seconds)
    (50/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087243655 seconds)
    (51/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.102114218 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119376593 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126592433 seconds)
    (54/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.10776614 seconds)
    (55/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197722808 seconds)
    (56/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.269151089 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.157181218 seconds)
    (58/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.210705455 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119069889 seconds)
    (60/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.171822121 seconds)
    (61/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.103359763 seconds)
    (62/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.234293938 seconds)
    (63/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094035006 seconds)
    (64/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.152661197 seconds)
    (65/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.202854684 seconds)
    (66/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12103018 seconds)
    (67/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087974898 seconds)
    (68/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.176562712 seconds)
    (69/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.204421233 seconds)
    (70/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.209015659 seconds)
    (71/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.103538901 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095824066 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.13068434 seconds)
    (74/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080825812 seconds)
    (75/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133707322 seconds)
    (76/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120432764 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09596778 seconds)
    (78/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191780462 seconds)
    (79/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196984644 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118276173 seconds)
    (81/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.07980131 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193596147 seconds)
    (83/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080179625 seconds)
    (84/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115917886 seconds)
    (85/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.166398361 seconds)
    (86/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108656932 seconds)
    (87/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.103749852 seconds)
    (88/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.14157279 seconds)
    (89/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.134655032 seconds)
    (90/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133687238 seconds)
    (91/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08052003 seconds)
    (92/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122526397 seconds)
    (93/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118028638 seconds)
    (94/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.081650015 seconds)
    (95/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.202020501 seconds)
    (96/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13359694 seconds)
    (97/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098937074 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119221628 seconds)
    (99/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204778419 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110286971 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122326881 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094322261 seconds)
    (103/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.122153934 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153160174 seconds)
    (105/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081270496 seconds)
    (106/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.146664082 seconds)
    (107/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.079109147 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119170263 seconds)
    (109/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162342368 seconds)
    (110/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080103738 seconds)
    (111/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103458328 seconds)
    (112/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198529276 seconds)
    (113/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098786235 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111190523 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098560342 seconds)
    (116/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.131255988 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121428927 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10747253 seconds)
    (119/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.108832922 seconds)
    (120/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191205078 seconds)
    (121/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.2098685 seconds)
    (122/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098893119 seconds)
    (123/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.118811637 seconds)
    (124/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099351559 seconds)
    (125/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102823911 seconds)
    (126/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0982209 seconds)
    (127/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110941696 seconds)
    (128/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143993866 seconds)
    (129/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.082230148 seconds)
    (130/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.213416018 seconds)
    (131/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081341862 seconds)
    (132/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121044139 seconds)
    (133/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.138819439 seconds)
    (134/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.131989869 seconds)
    (135/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.103196112 seconds)
    (136/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080950104 seconds)
    (137/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.128835008 seconds)
    (138/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098088103 seconds)
    (139/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.16826275 seconds)
    (140/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129114886 seconds)
    (141/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081174961 seconds)
    (142/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103743017 seconds)
    (143/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.086898875 seconds)
    (144/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080175027 seconds)
    (145/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104115044 seconds)
    (146/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080736158 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118062066 seconds)
    (148/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0810966 seconds)
    (149/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103391771 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096069437 seconds)
    (151/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118512443 seconds)
    (152/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111053956 seconds)
    (153/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079936838 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133401431 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.110702885 seconds)
    (156/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129247152 seconds)
    (157/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.121311137 seconds)
    (158/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080304047 seconds)
    (159/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103182789 seconds)
    (160/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108836716 seconds)
    (161/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12022221 seconds)
    (162/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079796985 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.147255152 seconds)
    (164/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167749793 seconds)
    (165/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081263951 seconds)
    (166/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.10345242 seconds)
    (167/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210923026 seconds)
    (168/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.080491797 seconds)
    (169/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088211806 seconds)
    (170/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102819784 seconds)
    (171/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.155045091 seconds)
    (172/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169875176 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128787089 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12010707 seconds)
    (175/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092871982 seconds)
    (176/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131582061 seconds)
    (177/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122825344 seconds)
    (178/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088551806 seconds)
    (179/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112096816 seconds)
    (180/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079998505 seconds)
    (181/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.149359182 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080223545 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119638475 seconds)
    (184/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212397744 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098188006 seconds)
    (186/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.109924264 seconds)
    (187/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130225473 seconds)
    (188/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083513499 seconds)
    (189/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.183525495 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.133793109 seconds)
    (191/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081465124 seconds)
    (192/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082665734 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.103805722 seconds)
    (194/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.086228518 seconds)
    (195/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.165010703 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119686825 seconds)
    (197/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081217545 seconds)
    (198/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.103700943 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.106676914 seconds)
    (200/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119978674 seconds)
    (201/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097602955 seconds)
    (202/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.104167801 seconds)
    (203/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08106462 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.104041822 seconds)
    (205/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081927659 seconds)
    (206/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120349314 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095922981 seconds)
    (208/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122267643 seconds)
    (209/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087826439 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.13320376 seconds)
    (211/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103685929 seconds)
    (212/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.098412236 seconds)
    (213/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104382179 seconds)
    (214/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098870624 seconds)
    (215/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103789825 seconds)
    (216/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082129709 seconds)
    (217/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116538029 seconds)
    (218/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080961581 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119493015 seconds)
    (220/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101900602 seconds)
    (221/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112497948 seconds)
    (222/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.080684113 seconds)
    (223/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129831527 seconds)
    (224/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.133580835 seconds)
  done (took 31.4076012 seconds)
done (took 32.256204158 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.494129979 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129495127 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101059579 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12465225 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.178596616 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127215772 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.108516716 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.129174039 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.129304316 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.097673442 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114477796 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106109463 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12361893 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179404593 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.127769159 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093723143 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116467998 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129283372 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.107065293 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.13450948 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.177221542 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116764041 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.106300302 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116526116 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178964187 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116329967 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100555604 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124486386 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127731782 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099400144 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124588336 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093344125 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.133281663 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132227605 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08978305 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120874007 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089741305 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112196928 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121055064 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099777289 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130146946 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.098917509 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.127819752 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11639099 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098481644 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.121100184 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113008648 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105084901 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113980905 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100005861 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116271486 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132669168 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.097300625 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114531538 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091067092 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116412512 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.128914329 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09054111 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130273285 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090369897 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.117703768 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113104666 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100645186 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113856736 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096505469 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116146019 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120637722 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.100597429 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119976253 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093307309 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113561486 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118967177 seconds)
done (took 9.674149575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097361338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176066255 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.183102146 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208423929 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147485588 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110308281 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.13694695 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147689637 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.131417506 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.11698468 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.153596213 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.146105601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.188790741 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130286084 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132794234 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100141241 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.132586405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105643428 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212895542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.118119388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152073151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.130006547 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152611416 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138756856 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099108891 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14598403 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.125199556 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.100058236 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122069356 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139479578 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.117897466 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122491132 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123605799 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.119825445 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.133628993 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128154977 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133226552 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.100033517 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120654603 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09728946 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137395943 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.139204001 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119850107 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110534335 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123671047 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.127630214 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.106599032 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.130072051 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123744351 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.101836807 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125661131 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152724377 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.10513168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.13009099 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129343271 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.103940408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.130537398 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127103522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.099689741 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127807862 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120524342 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09927116 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125920023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151022508 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101158764 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130860423 seconds)
  done (took 9.442147031 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118725522 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155625984 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132611719 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131499943 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.105101812 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.111292513 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087790304 seconds)
  done (took 1.741282068 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091133406 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181925167 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18141234 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205341669 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.174603779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.191546144 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136977041 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089960511 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.15329921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.125706988 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182198916 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.211746169 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.124084136 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.108392297 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208399722 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089952147 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184321284 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.115192395 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1261641 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183335739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107667604 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.147280071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130223077 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114545133 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176655361 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092800766 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261321109 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106999862 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121050975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.10012198 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128180334 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.198197064 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.175797996 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1312626 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119817347 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.180312943 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.176340147 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127498044 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.193215281 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095473806 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.199938389 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103986572 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128116434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104485178 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.127431923 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.162900451 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13258428 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.105313149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125746523 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182460006 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129313568 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.177610892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.123648617 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.104627553 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128501935 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127793987 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110706082 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.127861614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183867777 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130186386 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.178264367 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.177176798 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.177803676 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.17772919 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137770953 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178619235 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.175046547 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100917673 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124620614 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128885621 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.177499993 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125111896 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.104979185 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.163302392 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131041972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.178522247 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.17758282 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124295218 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105597348 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119962791 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.100321186 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115488659 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.164936172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127445827 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099395238 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137729019 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128828065 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.103497182 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119315429 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140674714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.101592816 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129022739 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131609965 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.126097299 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109512609 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.178959278 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128189521 seconds)
  done (took 14.680216184 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093205951 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116500563 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098123404 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116519942 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092478425 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116481605 seconds)
  done (took 1.550321817 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124552745 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.130249246 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.140185221 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105823964 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18512301 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21034498 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.188459324 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127875348 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.121775884 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.140970326 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.18578487 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.188123178 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.208893274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10842536 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.187295067 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132372136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.187159177 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128475672 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13780891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101095703 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136356615 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131407837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100801178 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.177180875 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.134066984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.132073911 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129152297 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114002869 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137863821 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129726453 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.106905555 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.132581149 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12478828 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127557982 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.191668303 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.100811903 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126126013 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.136416692 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107901699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.134161907 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.188369834 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126482373 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138271125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135771871 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104414134 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125349989 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.134867804 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104377825 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.213107851 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1115741 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.136038098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130780424 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10746905 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.136993393 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12484292 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12770585 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.112024191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.213424227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.108190291 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125773816 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.131459271 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.109577691 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128761897 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.134973493 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131983632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.111383098 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125152619 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130124922 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102523231 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.131326169 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.136905233 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106711042 seconds)
  done (took 10.758069123 seconds)
done (took 39.057824761 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.082458345 seconds)
  done (took 1.995624682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.936791888 seconds)
  done (took 1.852891457 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.878654685 seconds)
  done (took 17.827355171 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.562686286 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.636573447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.977619504 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169234549 seconds)
  done (took 3.259746705 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.979455637 seconds)
  done (took 1.910062522 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323789498 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279754451 seconds)
  done (took 1.523065099 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.840504743 seconds)
  done (took 1.76788399 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.378466947 seconds)
  done (took 3.303164175 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.374565844 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196112837 seconds)
  done (took 1.508421273 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.662763574 seconds)
  done (took 1.595326052 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.85272413 seconds)
  done (took 35.785778667 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244016976 seconds)
  done (took 1.189491659 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31196802 seconds)
  done (took 1.247182234 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.490962885 seconds)
  done (took 4.426423352 seconds)
done (took 80.117549474 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103584246 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130190444 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105810519 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127931912 seconds)
  done (took 1.395393217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113811887 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129787733 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.132110774 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.104669837 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.137783411 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.104478656 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.129125599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135333964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103562582 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129819192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128223459 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10551671 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130493793 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127396262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.103888917 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129987887 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108204768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.131495887 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128255149 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105435991 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127985202 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130289191 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10694961 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129524088 seconds)
  done (took 3.851538807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103726046 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121379331 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099578821 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120895954 seconds)
  done (took 1.383404316 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112862869 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14407449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.143454832 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.110991331 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145320973 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.142804184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.099079998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.123457582 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101578158 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.137346165 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12629741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147619573 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119493175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.130864348 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13720908 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.097403761 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.130684833 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.120611396 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.136820277 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.137632668 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099220208 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136093105 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12448398 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11692674 seconds)
  done (took 3.961201304 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.213385815 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11663542 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.152700242 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.180915161 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.154938077 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10163195 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.155541593 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13443666 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.135020656 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.105974953 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.13274256 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.188043719 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130559032 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108453368 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.131104248 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.135147572 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108349101 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132531614 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.133261117 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.116087035 seconds)
  done (took 3.713281135 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10505957 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120547453 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092252945 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120942175 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128141365 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100212344 seconds)
  done (took 1.615325926 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09246859 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114013522 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091994659 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113988398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095655988 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115353519 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089690506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114877169 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090196555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115921914 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089336535 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113331804 seconds)
  done (took 2.183927619 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.30159748 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09431751 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124358031 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.118465042 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100382686 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.120374552 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137329196 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094863366 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.253250997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.121770585 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111540875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195539898 seconds)
  done (took 2.718184851 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226208395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103918515 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286177273 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389196551 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169395267 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178849223 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288764147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17802469 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.229759792 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12533925 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237098683 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169391416 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137577068 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21723258 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123797531 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.198134921 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212793927 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216206082 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158634722 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223682173 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17589676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180270323 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193380729 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162333043 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147335407 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169783807 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127085015 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111410137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210544115 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183638655 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189831976 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158889197 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151259026 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218772428 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260449666 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193517662 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32497752 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144217046 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20306646 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.196007805 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277448417 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151362879 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23659441 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139930453 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139237311 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194054305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167709858 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.219968467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.117632025 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15111765 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201661993 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216319128 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202094209 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148648743 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311171353 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159114831 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158517857 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190061454 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205176049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231693809 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179173812 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105670112 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219569501 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198033015 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196055894 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15785383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185199564 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136125349 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190203009 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212473509 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194698914 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205686382 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.201272804 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143655968 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176780089 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183573924 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166219332 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192925853 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174104045 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126526218 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136025462 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146652419 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136747596 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199292583 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105276232 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246942055 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117113362 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.226299549 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218913706 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170452266 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174662472 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176980817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180213766 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155919683 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127705423 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129517594 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.174032053 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169547775 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140185855 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168413187 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155641845 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136889548 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162606711 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103793543 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17125645 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.144905057 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179452805 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17509966 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139993811 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177137355 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158701627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171768621 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185499766 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201262276 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140329662 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114382568 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234584975 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168830966 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122978693 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213756803 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205113569 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179144473 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145961411 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186452668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212840943 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153999878 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206355614 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153903503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142676954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1642102 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168771377 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169418379 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.140981224 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137506338 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166653406 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20988357 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135808314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145612444 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187318764 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137430207 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11117306 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153366623 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146006424 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150116267 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.162218675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.124499265 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165878965 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170202561 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165639262 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171087093 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15328169 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240680025 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115209342 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171545399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15826472 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128059264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200133863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198860251 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139479593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200753658 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185838876 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232083609 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176846108 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13816432 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195372383 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111763389 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.129290277 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18170294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174710964 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176621495 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201569971 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229971008 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186123974 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166960448 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161105281 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181326296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.189120205 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170687055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155508189 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173825333 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183396078 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129679583 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.107266049 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138782371 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151096217 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139263978 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113764011 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221576123 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178439225 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197379819 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172371804 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149107398 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197590129 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.13732399 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177720386 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189469473 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147559742 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20290469 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195881906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178860254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153334435 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184824116 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.13116838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106368748 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145924043 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181950466 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141783369 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144374168 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154650198 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197356075 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18913369 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160105564 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239881005 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184116765 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209697292 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130155028 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148362154 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184488461 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170553212 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.196369974 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142655369 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.173755649 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193702579 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15653188 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209021844 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175563884 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181140824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24589526 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168585095 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137317188 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134785962 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181958431 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151518159 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178318198 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157742018 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144660644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164808308 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147648631 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110603841 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225769092 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152292676 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199848939 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.169268425 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188276236 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133989121 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153994739 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172052115 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154214625 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100245083 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184451726 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231315637 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129894563 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196248032 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190352222 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111945375 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318589102 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231053879 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199951648 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148218347 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154295323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17271593 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170465661 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178000727 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195937821 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153843525 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196597843 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170928538 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15309477 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117753904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157932351 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161520754 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166555931 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146510876 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1678193 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150379422 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202087486 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154671411 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16892002 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177085801 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130434169 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.167320753 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150629151 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217419622 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168488133 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219376447 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13973898 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.211043439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201955195 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104860968 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137586186 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137534659 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196728609 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113362846 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173000497 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.2185735 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20963188 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170981828 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181430879 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149154711 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.136212747 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170955582 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159351833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210557018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151656464 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148508506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208116364 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16261942 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138667885 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17655705 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292026353 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154156347 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188245224 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.101350645 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302990487 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109538836 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14075908 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172412317 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18541804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160192787 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.168757415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200624878 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128379693 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171944442 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146489853 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225057135 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222075497 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185638509 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189261738 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154998246 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170542734 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175614841 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191293679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152401374 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157514544 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173927186 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198064956 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203825008 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14424791 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173844371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175087515 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171799409 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18985744 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143545209 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201258564 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140351003 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181025715 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150950123 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134082659 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16981556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19307555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141650688 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192531485 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170026203 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112101323 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137529104 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164928757 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170397134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155867172 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13780325 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196589335 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107584245 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175477076 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194928487 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138931751 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169584322 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156736259 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142157374 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127182482 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156119378 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145081727 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179908394 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199515569 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.142957294 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192218932 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188990233 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178161657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170890471 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154660083 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.676152514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111996451 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223801441 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130408552 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235502514 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160514013 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180140293 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173015702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133838754 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211808822 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160800644 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207146405 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206792417 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17213795 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112757412 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154839386 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155502933 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143704964 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1626245 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17481037 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121559768 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150478332 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171288018 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156890725 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155894702 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147655872 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19915359 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156126053 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200816149 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198678056 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148483892 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180958429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192995712 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139644252 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177645662 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186652617 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152765928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166557188 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.115309671 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146777293 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192972552 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132274446 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173327288 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171655057 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173167631 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175474342 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120054777 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173377696 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15333642 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173458377 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136807418 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17307021 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169568093 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141420403 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.111267332 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16789027 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172699194 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170458188 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137283071 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155718966 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219994426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105628702 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14349242 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292075623 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169871671 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207980012 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166101111 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144872736 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155511494 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1703276 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167249626 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171108077 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111978868 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140223114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143040352 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192111938 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169006804 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167332357 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193328286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174513996 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204896934 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155133326 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279254109 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12137183 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167268771 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143212963 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140437123 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124000535 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144217876 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158372623 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202035539 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194281544 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162057189 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155679483 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137900728 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104906172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140912103 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173359574 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166782816 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170303768 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157067965 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100240176 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1560955 seconds)
  done (took 83.670985547 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149856593 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147514569 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152706905 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205943865 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175266573 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265743453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212191283 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233717111 seconds)
  done (took 2.57362342 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12999965 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.116189913 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147865238 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129412952 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131623042 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.434816793 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140586312 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103080949 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191595508 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.167470805 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.101704704 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.667228578 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126550361 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12998781 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120848778 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.127817394 seconds)
  done (took 3.99226121 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.417972286 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542706415 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.952005017 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255678315 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237870077 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.186858726 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.7488844 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.199612572 seconds)
  done (took 12.569421411 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134157743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148136664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.341175908 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.216060192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.166627688 seconds)
  done (took 2.043638056 seconds)
done (took 126.602459401 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108250118 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.150957321 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106859724 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15014531 seconds)
  done (took 1.540134922 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.152176726 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118293404 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092094674 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117332457 seconds)
  done (took 1.518506168 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.52531894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088005363 seconds)
  done (took 1.680418585 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131327034 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153832345 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.151473561 seconds)
  done (took 1.481718675 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1144891 seconds)
  done (took 1.152420856 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106622485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135423805 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.186437488 seconds)
  done (took 1.470371136 seconds)
done (took 9.882404786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128811375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.431204873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417995423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113599499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.7259599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411137431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049994833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160680955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144536514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121943383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1429905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67395424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.072491194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370232956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.030102648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371466336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679231608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124590364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129128828 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097866226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016538037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093549516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124361425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124063407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675416926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427547236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095596442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385057211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120768539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101024993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412118771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094409512 seconds)
  done (took 17.099150174 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140544714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187718528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132433677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096258985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127811402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123522827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106397668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138721999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188553586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122506354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116656635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122380226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100498045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124499207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146212107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094680686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126108996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098961432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130947089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124438184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116609687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123090439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097311649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126477757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121335334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109637889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123340831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135844582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095773012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127700063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101187155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123965794 seconds)
  done (took 4.999542393 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145912656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198551396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133560175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.158750429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178532754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097573372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214852705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16410801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1915064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123738282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144297106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095921057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164594144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095954852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147163106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123364461 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099072544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126572188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129087244 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099571896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144353396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096201075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125413552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123943193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096742821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138648283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096336993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137435273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122388868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101860321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129739688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095981783 seconds)
  done (took 5.286356734 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108445697 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136660943 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117754958 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147837384 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.131661751 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.107626479 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.137136793 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102328419 seconds)
  done (took 2.041775814 seconds)
done (took 30.469210993 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122634106 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143471237 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115933068 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137044077 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.195842575 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097814204 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.142394987 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.127265098 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110047968 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14617637 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094840302 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.129070754 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.115444496 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.133779029 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.180971128 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.136905953 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.184524193 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.178679399 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102484632 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13714212 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10136356 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.185351149 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136278645 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10103733 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.190115567 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128911648 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.178538126 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131939805 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.105375675 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125239089 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.179488163 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106263022 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131113696 seconds)
  done (took 5.572969507 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.195956833 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.20781619 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.10081472 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.130237084 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.207399386 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.100678393 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.223678973 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10223065 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128484497 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.101093402 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127859482 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.195813892 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.203680383 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.22008631 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.236710195 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.20435944 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.193551918 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.205456128 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.189819275 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.20814841 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.196020466 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129299558 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.205427991 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.20966063 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100154595 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12980391 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.231841909 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.203191838 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231664756 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.193511752 seconds)
  done (took 6.368664331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109469181 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142011542 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121497023 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196953891 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168280788 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.138555097 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108851854 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.150042954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.149490423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096298036 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.134103044 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.135336869 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14338089 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.135390204 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102376468 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145046378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149050064 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098769204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132691399 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117232244 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.144385643 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144019594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.111069026 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135574731 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096751818 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136445433 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129778506 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109768214 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.134370885 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104526322 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129768416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.129425375 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100451827 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.134772458 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101621216 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.138159108 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.153534023 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105407571 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137642475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.161556066 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105693037 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131341804 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14677941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.144363144 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126883426 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135464886 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110566696 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135518453 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095657782 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145779572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110508549 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.127396381 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14814128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096088985 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125259723 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132583882 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098882138 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128041704 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.106259518 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129562005 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150322044 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.105314843 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1327399 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0995387 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1309336 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096317087 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.126497668 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.13174917 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.122372212 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132957976 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157101472 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097636491 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135985405 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104609083 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132013422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134158932 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09791015 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131005769 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105203723 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.132146129 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.105276366 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129181657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129974756 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117526105 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147056036 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138610846 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107725939 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136985899 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100305387 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127235565 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139134655 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099616717 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130646053 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107687075 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.127638719 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12869427 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109106996 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134629953 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095488038 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144822842 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.13247533 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097633929 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142913644 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099057512 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131488322 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106840788 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.139408901 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125328118 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106896556 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137297514 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096582404 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13237954 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128634427 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099116628 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.144478962 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10755369 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131192949 seconds)
  done (took 15.738149801 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.297226644 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.30480961 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205966464 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.394306929 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.121363092 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.223519536 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.272442602 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.224109397 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128305046 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16984463 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187829401 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.263218307 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097546677 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.161032215 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.302159259 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370558084 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159921536 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17220898 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17082726 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.122791666 seconds)
  done (took 5.421741238 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121061774 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.169392647 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157894636 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.160965016 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105760201 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142882992 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.12466353 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.124088809 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.136074909 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132246003 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.097833425 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142062652 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105506903 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135382069 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.145871281 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145234866 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131118737 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.133587883 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.119749157 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.134034574 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137131872 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155859104 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.108485767 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.155670579 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143002521 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112883455 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125639428 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.133009558 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10123384 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131502311 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.104127347 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145795039 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133538819 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103839957 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136088763 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.109460853 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129087033 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127005558 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099744998 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129956425 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115732429 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.135447557 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102069058 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.123097624 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.111735268 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129284458 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.137737864 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108100636 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139337873 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113463179 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138824443 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.139729376 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105232947 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.146490018 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.100570328 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.143366455 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.140461562 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.137267787 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.106159763 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125270967 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09599189 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131297645 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.103488852 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.140230724 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136060456 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.121622312 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.143792536 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129548328 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104444709 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.130633079 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101787108 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145980969 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.155920067 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.130992064 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.102491029 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.148878543 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102000895 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.11974198 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108957532 seconds)
  done (took 11.129034932 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129260523 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132707041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119204059 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.165458023 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.147646521 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.103721348 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132711195 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.117935785 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14021194 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141762174 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.111636698 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142380701 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.152756925 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.112090208 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132127179 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142105171 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110329185 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.1718304 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146264674 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13224559 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.145621419 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132239155 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112457415 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.140680547 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162604982 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.111497776 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.160772003 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.136940411 seconds)
  done (took 4.875531393 seconds)
done (took 50.157575804 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.247828086 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.368970188 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.155858761 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.148751777 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.187586602 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.180014226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.149500203 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.340699233 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.884326336 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.150565801 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.150540531 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.155694023 seconds)
done (took 27.195553464 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.455012601 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.738643001 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461808163 seconds)
  done (took 4.272566367 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.143676268 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.144696537 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.395806132 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.144866164 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.162482999 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.161401268 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.144479733 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.162999657 seconds)
  done (took 15.388441851 seconds)
done (took 25.333655429 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.18512523 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.333235308 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.400303548 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.163297459 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.146684301 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.144273788 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.137684503 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.167215747 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.145968953 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.144812412 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.146840615 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.410834927 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.150240798 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.542436614 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.137331241 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.175499143 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.161399529 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.380677482 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.151853637 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.190144587 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.140177113 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.137552955 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.17289907 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.182013858 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.150816391 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.156354442 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.202031917 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.141420426 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.326193844 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.147645155 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.190189045 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.147469441 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.156335993 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.150670721 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.25372626 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.166191438 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.313973409 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.143768775 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.137751924 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.150229024 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.31571897 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.534972813 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.153710076 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.150076094 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.157691677 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.207833346 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.141704662 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.866171424 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.156978987 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.146928355 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.20812986 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.526355346 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.160518919 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.157082395 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.167216301 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.360492127 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.173892856 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.167319913 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.173884637 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.14965908 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.158338199 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.148066279 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.201990853 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.165009626 seconds)
  done (took 139.808370421 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.14915622 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.154132511 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.153414949 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.171334967 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.150746789 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.149329136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.148805107 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.147323821 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.148369205 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.179278858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.150169967 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.148946617 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.164742529 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.114844831 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.154536479 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.164609641 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.153306679 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.154045352 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.156242365 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.149640612 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.167082817 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.150083967 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.166790831 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.149089689 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.178159624 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.237687819 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.186110178 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.171967873 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.154999268 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.148686427 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.187646492 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.216186646 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.739418388 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.01183831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.158929591 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.165659234 seconds)
  done (took 78.330685855 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.150604781 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.150837312 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.150995642 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.151815203 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.180800472 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.150312147 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.696052001 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.704001615 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.878911552 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.424971596 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.402634985 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.386621827 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.152122249 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245694796 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.16677611 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.151871052 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.16724503 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.194573645 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.15825819 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.152201369 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.696657176 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.163443548 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.151470099 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.325757529 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.168326732 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183318493 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.552925431 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.324038193 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173099141 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.183142359 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.480855055 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.200752813 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151434237 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.48380893 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.174103311 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265000942 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.152834577 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.152396381 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.184041469 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.153005359 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.432448838 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.153479356 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.15343804 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.156865714 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789629565 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.152784363 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.698026737 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.15298569 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082661978 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.153296605 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.152789609 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.062318497 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.735411832 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.169801155 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.152490995 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.154194984 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.155411166 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.153772856 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.184887026 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.053065609 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.249634672 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.169778512 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.157782377 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.185841074 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.154010842 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.309492536 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.154325983 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.408579189 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.217749415 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.273674896 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.701553538 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.15378876 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249792224 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274154191 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.154867002 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.154354509 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.155253299 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.155639579 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.263648869 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.154820246 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.569826572 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3266864 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.171956245 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.156052912 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.416218499 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.252063137 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.156162684 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536577464 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.160136403 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.155866266 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878873436 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250956223 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.154554201 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.155441915 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.155349513 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.567010754 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.713814417 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.389027069 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.160978913 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.285131874 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.160709732 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.576576983 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.692902663 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.792273886 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.15786447 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267964996 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330022762 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.174468026 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.156902781 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.462806254 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.163436467 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.213936897 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.162238512 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.555744448 seconds)
  done (took 360.300964596 seconds)
done (took 579.514169844 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.850173946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.803842918 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.934156203 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.829686535 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.798134844 seconds)
  done (took 10.299956472 seconds)
done (took 11.383378976 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34400471 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.344584453 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216653787 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.345293241 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188946521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.361204012 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.324929494 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.177095473 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.260076473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.237829707 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.259641227 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210421951 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.192074527 seconds)
  done (took 17.54743381 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.424242054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.164207414 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243860931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405903151 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.201138537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425258348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.454720897 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.165479266 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307018168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.174142948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.174334791 seconds)
  done (took 17.225575074 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44407849 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.164063343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.229523741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412092477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.202866627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440927231 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.463347194 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.16539664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342182462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.175828813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.176427407 seconds)
  done (took 17.301628147 seconds)
done (took 53.159447258 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.202294466 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.328367731 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.191395557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.17898375 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.171872504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.173829937 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.179666504 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.174125505 seconds)
  done (took 10.68690136 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.172440553 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.172014084 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.171363207 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.171585262 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.171198511 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.170806514 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.171186001 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.170083676 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.171015715 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.172777681 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.170927655 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.170772621 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.170666059 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.171804477 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.172604814 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.172018083 seconds)
  done (took 19.830303006 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.173409944 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.17193957 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.172810641 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.172930023 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.172004152 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.173524728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.174823107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.171607598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.171276568 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.172849532 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.174789187 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.172420985 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.173581225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.173225443 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.173550768 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.172368507 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.173227416 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.172221071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.177562069 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.172791518 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.173589019 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.172154348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.172840037 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.173563618 seconds)
  done (took 29.243985345 seconds)
done (took 60.846821599 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.171977899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.163947994 seconds)
  done (took 5.424600528 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.233451456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232757472 seconds)
  done (took 3.55636208 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.174183535 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.17265973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.172801926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.17323031 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.172614423 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.173124909 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.174084616 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.173935702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.174704016 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.174128077 seconds)
  done (took 12.824994454 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.17475825 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.173812383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.173721225 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.174458442 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.17451988 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.174376057 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.173578405 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.174026309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.174133021 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.175005788 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.174299687 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.174963277 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.175756641 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.174314763 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.175001179 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.17445545 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.174300077 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.174676161 seconds)
  done (took 22.231231292 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.187204155 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.19427207 seconds)
  done (took 3.471456972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.316382562 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218955464 seconds)
    (3/7) benchmarking "month"...
    done (took 1.292674909 seconds)
    (4/7) benchmarking "year"...
    done (took 1.281946441 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.217011075 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196168731 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21723568 seconds)
  done (took 9.832382363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.178886731 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.371607942 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.477052321 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.751246627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.17767415 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22134324 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064687147 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220197823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.211097976 seconds)
  done (took 13.766371045 seconds)
done (took 72.196419202 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.165910694 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.247432464 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.188996341 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.18936127 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.517068314 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.17270777 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.174365809 seconds)
done (took 15.748703796 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.167470855 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.16379232 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.160597389 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.195300837 seconds)
  done (took 9.780261883 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.167059811 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546116543 seconds)
  done (took 4.804012535 seconds)
done (took 15.677396807 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178110739 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.17770544 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.175945815 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.17694558 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.177885467 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.176276423 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.1759063 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.176410975 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.177216511 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.177739511 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.178509706 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.177661472 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.177109463 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178273917 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177810957 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177767657 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178770286 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.176856762 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177093516 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.177077341 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.177666262 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176381259 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.177089261 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.177966822 seconds)
  done (took 29.350137545 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.177589106 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.178154895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.179563562 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.178603635 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.179274715 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.17916557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.176825079 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.178304726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.178491929 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.178934141 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179594345 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.179872983 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.178412143 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.179636685 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178284618 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.179339882 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.178883331 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178960714 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178525348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.178893634 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.178850076 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179199244 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.179279467 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.180850046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.180333516 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180097577 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.179543829 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.179742423 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.180335747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.179476471 seconds)
  done (took 36.467128837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.185994993 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.188545596 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.179936233 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.180671449 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.180661569 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.180698435 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.18247917 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.180074619 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.181461947 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.178414629 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.179026301 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.180489291 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.181085876 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.181324129 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.180039858 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.181304694 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.181695698 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.181146377 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.181046041 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.180870685 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.180337272 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.181164846 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.179898818 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.18137786 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.179964446 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.180579509 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.179730286 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.181431855 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.181901989 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.181075361 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.182688251 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.181378248 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.182155391 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.182171346 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.181129988 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.182235089 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.186502623 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.188094334 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.182042176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.183380359 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.181709608 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.181843905 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.181893843 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.182679373 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.182136483 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.183646177 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.181533854 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.182364213 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.182379124 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.182426411 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.182496732 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.183924234 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.18227543 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.18436754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.182275435 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.184046466 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.182921056 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.182911197 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.182954903 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.181847525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.183594279 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.184273966 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.183137152 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.182495168 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.184003221 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.18371443 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.183829139 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.184929112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.185192049 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.184757864 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.18377393 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.183786082 seconds)
  done (took 86.225770309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.183839799 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.184095458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.184639574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.183996361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.184885664 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.18376333 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.184564934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184361755 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183846779 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.186001649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184536468 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.185789494 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185833184 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.186057463 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184472135 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.185358044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.185956723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18452866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.186236992 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.186533826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184712123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.185948108 seconds)
  done (took 27.171176145 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185796294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186516749 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.185228061 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.187281494 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.187250673 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.186761898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.184585569 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.187119028 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185488423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184556471 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185862739 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185807352 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.187657232 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185802246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18679965 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187270654 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185577772 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.188262108 seconds)
  done (took 22.454200107 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.186820031 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.185884599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.186172592 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.188461117 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.186751406 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.186396138 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187116355 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.187779161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.187337441 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.185764821 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.188172767 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187869866 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.185460245 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188251674 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187039304 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.188948157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.188605837 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188045144 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187090763 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187948283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.188408343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186979944 seconds)
  done (took 27.223130723 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189446749 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.187044863 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.1889541 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.187816717 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.188194895 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.187391459 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.188904926 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.188304001 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.189243877 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.187606426 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188653422 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.188863671 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.190858704 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.189150635 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.188753211 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189633717 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.188950505 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188718788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189251135 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.188602486 seconds)
  done (took 24.877024349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19101659 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191400559 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.191718625 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191696355 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191620122 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.192924652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189750857 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.191601194 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191270865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191318707 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190820115 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.191567748 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191978526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191576249 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192499458 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191758923 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.19108963 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191966769 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192515016 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191671957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193126709 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191855399 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191535529 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191593795 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192412297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.192402998 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192182228 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191254298 seconds)
  done (took 34.473757959 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191805106 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191132344 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.191423428 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.191552687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.191260897 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.191009483 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.19108998 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.191573512 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.1920115 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.191260257 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.190985074 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.190751583 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.192502449 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.191593719 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192198954 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.191437758 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192319594 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.192497743 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192039639 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192613875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.192591425 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193515372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.192132362 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19233362 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191768623 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.19265787 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194738084 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194392109 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193374662 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.192320987 seconds)
  done (took 36.87002176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.240551211 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233741767 seconds)
  done (took 3.579961759 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.193020133 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193353692 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.19362306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.19414849 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.194790101 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.194915981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.194381462 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193720718 seconds)
  done (took 10.659467005 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.189097181 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.194331354 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.193128149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.194251843 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.193848042 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.190034834 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.196561463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.213559365 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.189864693 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.191680007 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.197102279 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.195715253 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.193882302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190754391 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.189554583 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192733284 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.195870988 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.194635677 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.194128984 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.196120327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.193733268 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192107534 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.192252097 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.197092238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.192024442 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.200249621 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.213451325 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.197357546 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191095377 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.193630581 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.191321106 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.196086474 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.194230411 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.197569509 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.196218457 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.194661041 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199519322 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211599406 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.195919701 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215005913 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.197316254 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.194960223 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.193543424 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.192507998 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193229919 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.195372812 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.197524414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.196497961 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.19189492 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.195809196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.204330688 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19146167 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.196519829 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.195509025 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.193473638 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197953803 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.216329484 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.19559408 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.201456778 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.201795449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.223410008 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.217594834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194612425 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.198348408 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202228778 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.215541179 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200209396 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.217641825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.198941534 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.197609179 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.198675731 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224917354 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.219061662 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.198239792 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19795517 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.199162099 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193634288 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.200695899 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.200649749 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.215726091 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.198035354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198399188 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203246642 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216037645 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.194661625 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.199881811 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.199248935 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.198097623 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.196898091 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2046362 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.218771346 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.201049291 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.194611884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.195675167 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.196865613 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.199020474 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.194650281 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.197004376 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.200464301 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.201153547 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.200173268 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199738759 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.204658043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.201079067 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200681025 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.20128102 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.219342952 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195932591 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.201814388 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.201919273 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200665248 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.199049975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.202210727 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.201906943 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198495088 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.204876566 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.201793781 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.197991719 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.201750828 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.202788223 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206134405 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.221748661 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.202955899 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.202066765 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.202375505 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.212473699 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.203119738 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.199873561 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.20272367 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.201183896 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.20132147 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.199198418 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.201093787 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.199754518 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203416618 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.198573837 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.201879084 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.203318867 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.201863771 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.198905073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.198749439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.198055024 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.199115511 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.200303731 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.202513299 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.200517787 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.203397512 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.217863547 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.199871239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.199227383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.20377975 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203424723 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.201533222 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.20263605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.198894753 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.204159052 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.199222823 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.202731637 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203553094 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.203916161 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203735823 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.201126512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.201795726 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.203510905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.202622442 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.198257499 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.203978842 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.204276124 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.204246071 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.199267863 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.204755779 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.199301059 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.201853622 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.210746951 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.205779725 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.203989354 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.203545338 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205095893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204645979 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204485912 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.202625212 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.207844183 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.205025991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.205668587 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.22380342 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205746382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.206527506 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.202397377 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.199938198 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204744812 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.203853218 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.214708671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.213157762 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227803344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.202691145 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.209963865 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.20238447 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.209628802 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.205611861 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.20619092 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.206924823 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.207176993 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20146891 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206528227 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.204107756 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.20781398 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.202531922 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.207634928 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.207095134 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206466902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.208008512 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.202012486 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20399354 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.208148918 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207653241 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.207981877 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.202058441 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.208493349 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.202939719 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.20334972 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.207745537 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.206767792 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.209168208 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.208243983 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204539527 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.204447554 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.204413618 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.204048331 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.207870764 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205918179 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.203934739 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.210300961 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.222544577 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.203912479 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.210784975 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.223379983 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.203660956 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.206361094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.208591109 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.208838355 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.206386536 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.215617846 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.210494813 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.20888821 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.208040709 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205356332 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.209107596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.210097508 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227916963 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.204345056 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.208709077 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.206674141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.20946575 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.205812754 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.2045061 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.205711565 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.205985877 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210672037 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.208739577 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206054167 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.208782349 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.209957412 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.20975804 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207911906 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.217907613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.210109469 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.205633539 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.209182997 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.207406377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.21502045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.206266885 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.21094827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.206456733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218336816 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.236615573 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212461095 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.225985997 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.212219213 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.211246925 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.226071838 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.211278274 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208267089 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208234687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.207949305 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.211089869 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.212585385 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209226299 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.212708957 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206928638 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.208752419 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.215491126 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.212193765 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.208559593 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.211091418 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.212326649 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.211896247 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.207103257 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.212044262 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.210262608 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.210275451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.207813463 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.209214886 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214482169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228657495 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.209564752 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.694312325 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.208743637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.208462183 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.210063652 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.21357204 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.211760294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.220513759 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.211442238 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.218064543 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.210154938 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218015313 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.21394009 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.211971225 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.221166294 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.214241867 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.208974346 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.209965017 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.214718049 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216356689 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.233556577 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.210562455 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.217640378 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213637166 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.214206261 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.215208392 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.214127381 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214622038 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.216076059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218052392 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.229878046 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.213849825 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.211116274 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.214305449 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.214694519 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.21544925 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.210463949 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213673344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.214104174 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.212173045 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.211644901 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.210970957 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.216517128 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2161427 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.215502214 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.216236581 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.215456134 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217067849 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.234642487 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21938871 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.216662677 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.21846321 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236374114 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218519157 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237848922 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.213047163 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.215801578 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.216255591 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.214143019 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.21149872 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.214329015 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.216276451 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.212559774 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.223107663 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.218236093 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.215286555 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.212089037 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.216193537 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.212876243 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.222491911 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238602903 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.214840314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22111472 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.218138319 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.214044508 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.221707011 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.216848553 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.211165707 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.215869962 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222773427 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224692822 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.213649716 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.217184478 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213978149 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.218484054 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.217661397 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.217853515 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.218635994 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.218437051 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.213494611 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.219661988 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216839228 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.218245099 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.215012996 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21543854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.215002534 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.224087431 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.237030122 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.215479696 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.219370542 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.220064346 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.214858461 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.214648111 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.219877964 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.214962447 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218803218 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.21712065 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220887442 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.221302716 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.217770293 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.213834133 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.220321691 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.214808291 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.217758165 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221083049 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.220325702 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219954681 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.216920709 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.219661425 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.215418371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.215605969 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.220813132 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.217662798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221488882 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218903388 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.223271903 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.215321049 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.220878537 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.22081693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221850892 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.215682129 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.217354789 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.224046013 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237484354 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.227334013 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.224156939 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.224571671 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.217192387 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219716913 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.225133159 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.216454582 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.218448373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.221993384 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.217649755 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.218351843 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.220495117 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.222327822 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.223875544 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.23725749 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.21743862 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226296036 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.238580753 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22243439 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.219118677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.221628988 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.218632501 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.223331333 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.224234361 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.218283212 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225046902 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.24023314 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224264943 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221130648 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.218447283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.219649531 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227034251 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223561102 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.220274156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.222380593 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.220157295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224087054 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224055212 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.223629158 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.219541734 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.218966346 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.222592658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.226284925 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.223601411 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221860532 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.218617211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.220508418 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224157719 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223622864 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.224696236 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224403777 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.218437662 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225470968 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.220373906 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.223216937 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.220153689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.221397466 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.22977885 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.225517173 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22293042 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.229911437 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.231597806 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.226472251 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.220703691 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.223075555 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.223468306 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224353 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.226069427 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220404233 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.22231755 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.225454236 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225208072 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.224815272 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.224621674 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236346728 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.245428368 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.221900823 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.222618334 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224818843 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.226043327 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.226591459 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.226638965 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.225279534 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.225554583 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.234185668 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.226216352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.22845044 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242332369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.224402093 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.229885698 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.225318481 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.229765028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.226027341 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225942605 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.226831328 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.227702397 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.238716558 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227636486 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233097158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251078569 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.244403743 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.22376261 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.227759729 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2209479 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.227407299 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.225477346 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.228023994 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.226511652 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227783401 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.226879611 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.224031831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228941765 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.224511692 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.229587915 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.227927919 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.222656357 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.22473079 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.228516134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.22865547 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.228227967 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.22930133 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.228672612 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.228944573 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.224566056 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237112305 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.251256185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.22854128 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.229336712 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.22786051 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.227970165 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.227373355 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234406053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.23745237 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.230234143 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.229155064 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.226495629 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230002095 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23092636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.225593721 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.225308578 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22550193 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.230832342 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.237019488 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255437379 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.229093665 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.224837802 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231291195 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.231017121 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22822286 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230871306 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230777713 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.227686722 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.228410105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234480395 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.231474417 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.231192672 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.229778449 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.238206219 seconds)
  done (took 724.664517911 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23314756 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231842292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.232231816 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231715363 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230941117 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231461119 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231909306 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231579791 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.231919225 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232352548 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.232106823 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233341617 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231287899 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232468809 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232926238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234184285 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232269509 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233092134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232451013 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232811107 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233204555 seconds)
  done (took 27.021744309 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.232565584 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.232909341 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233291957 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233280548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232825522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231674054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234413028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233788191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234011843 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232691857 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233729239 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23289253 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.233100956 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.233297903 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232595069 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232633391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23329745 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23361187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.233641419 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235316594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233909159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233814029 seconds)
  done (took 28.2778532 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.233237394 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.234401218 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.229431504 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.234363603 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.234244673 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.233149736 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.234013781 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.23399667 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.234575799 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.230616276 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.228748282 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.23054852 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.236367378 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.240571966 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.231812314 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.236195474 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.234607947 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.236361723 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.234508456 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.234388114 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.234844405 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.256661534 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.236270684 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.229887664 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.235294508 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.235143294 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.235680463 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.235885398 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.231454675 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.23971396 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.235839704 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.231754569 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.233592318 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.230396251 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.233993712 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.240227881 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.235838392 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.237290563 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.236727824 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.241159838 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.258802311 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.237139554 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.237955284 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.256693522 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.237577705 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.237023892 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.243513475 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.237045857 seconds)
  done (took 60.494874744 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834201408 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.851119631 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.85494873 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853273554 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.849779881 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.852105799 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.856972516 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.85982685 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.854942072 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.854807724 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852133334 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.860125895 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853616569 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.851290701 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.851136367 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.853787974 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850253094 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852957797 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.856808696 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860280125 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.854250683 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.865125918 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.853523391 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.859759942 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860108411 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853649618 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.85554702 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.854343338 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.859941961 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.855669667 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.857936905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860851806 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.862261317 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.859964577 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.859729131 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853721081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.861815318 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.85753875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852953127 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.854394436 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.857014945 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.8559729 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.856332406 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.859787131 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861222347 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.856868509 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.858001809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.859798124 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.861075117 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.866555317 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.856951942 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.857732245 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855977494 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.862569577 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.856404673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.861305402 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.859909294 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.86766908 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.854664905 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.86162002 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.860617917 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.870500616 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.859933414 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.870525472 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.859660683 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.860929174 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.86346039 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.85987884 seconds)
  done (took 127.460387916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.241217808 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.241734301 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241596231 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241552492 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241819446 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.24118023 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243108205 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.241833752 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24226965 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242350296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241668724 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242729603 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.242053794 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.242028849 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242463231 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242352151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242611367 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241919814 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24132295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243156379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.243950471 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242653077 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241890027 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.242608025 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243852939 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243108394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242716449 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.243039307 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243432641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243511864 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244657954 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.243310736 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.243600501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243215315 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.243741119 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245037938 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244320895 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243538746 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.244492158 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24344545 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242842512 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243770999 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24422172 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245163502 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245592916 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247739264 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246876015 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.24495661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245669362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244971219 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.243938656 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243831585 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245860314 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243917024 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.24547507 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.24674158 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245807829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24560514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246198793 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246267597 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243910454 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.244750797 seconds)
  done (took 78.260291825 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245184671 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246629351 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.244866835 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.245140012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245611463 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247063702 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244425136 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.246135099 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246229195 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.247433466 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246436773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246458962 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247952304 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246414512 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246398923 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24750137 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247228737 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246292048 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246919895 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246353668 seconds)
  done (took 26.081111749 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.245284091 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246330471 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.246253414 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246396237 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.246273152 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246633784 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.246846081 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246939757 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246578205 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247035979 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248374885 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250032094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250377406 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249936333 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.247073503 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.248311883 seconds)
  done (took 21.114261645 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.249146829 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.248656888 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.246687188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.246805028 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.247950929 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.248498133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.248456794 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.247370454 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.247667071 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.248458715 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.247960091 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.248378481 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.249177079 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.248069441 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.247856739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.247830334 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.249434472 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247928591 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.24817455 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.248380449 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.249051681 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.249816747 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.247839701 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.24921666 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.248379174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249473821 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.249282781 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.25014644 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.248350745 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.249643409 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.250679112 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.249306858 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.250412672 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.250505641 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249613658 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.249868002 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.249705205 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250337117 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.249607167 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250188822 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.250452753 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.251572743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.25032766 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.250039195 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.250639214 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.251533577 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.249404006 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.250620143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250641177 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.250813251 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.251353686 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.250078982 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.250762519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.251076826 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251079353 seconds)
  done (took 69.873327292 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249881998 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252332132 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.251715884 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252782929 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.250816629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.25078389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251683853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.253597677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251552273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251423111 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252704704 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25312011 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251938372 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252729659 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252467039 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251629094 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251820562 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252280667 seconds)
  done (took 23.694037909 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252174875 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253090767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.25234499 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252724491 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252102613 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252510663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251802865 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.253994645 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253594224 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.25304493 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252606918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.253295667 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252682421 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.252803497 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253165738 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253414337 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.253609611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25376793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.25304821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252839664 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253664459 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253597913 seconds)
  done (took 28.726333703 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.247065516 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.247706045 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.247890658 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.262288144 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.267920714 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.24761881 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.247439361 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.249437091 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.268358402 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.317239335 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.31091928 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.269540262 seconds)
  done (took 16.343771336 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25416039 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254500725 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256050207 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255580386 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253783024 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254006166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253789073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254602308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254291736 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254935584 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25451927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254796176 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254390893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255973297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255489899 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254509213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254153316 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255750886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256123317 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256250538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256219887 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25638516 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254151666 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255733663 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256036376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255181757 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256703593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256372634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256446476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256509334 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25677949 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256718291 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256395012 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256389194 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255370046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255707699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255784781 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256338057 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256700471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256785388 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25542293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255960001 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255396284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256169272 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256084342 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2568652 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257427425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257041829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256395327 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258353026 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257447856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257284698 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256273285 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256472442 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256714509 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25754664 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258382903 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25782928 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256564696 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258024692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258506492 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257047727 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258344155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257533857 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258408493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257848127 seconds)
  done (took 84.070407294 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258031391 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25694348 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257222601 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258463216 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257296576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258743818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257275123 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259134901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259335582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258222888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258930972 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257352899 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259970037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260042306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259776001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259646213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259424124 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260321293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258493314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259482383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260646764 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259237828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259294278 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260089106 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260530644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260572571 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259401398 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260192302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261985107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258998841 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260475908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260269165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260406144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259655947 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260036588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259425397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260049128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259767289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260955319 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26038198 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260354639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262146919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261618166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260554527 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261453384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260811864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260906023 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261736477 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261772756 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260404145 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260605006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261770229 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259386299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261691555 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261914059 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261537979 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260327786 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262330126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26254349 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260936175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2619184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262087637 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262536594 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262540257 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261315696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262667832 seconds)
  done (took 84.343263664 seconds)
done (took 1740.878301736 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.421238464 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.375659713 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.256760965 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.268836314 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.255409739 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.280589161 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.27033624 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.25657644 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.25628971 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.25603952 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.256425044 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.446332274 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.314002191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.257521918 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.256735179 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354342021 seconds)
  done (took 25.953037562 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.287041214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.265873297 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.380528815 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.279403652 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287620023 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.458302363 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.323545538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.262074448 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.440147147 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.28184051 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.267652148 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.287225619 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.262276684 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.261310565 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.279301886 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.45910206 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.522691329 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.268150942 seconds)
  done (took 28.044639228 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.735456392 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.259712267 seconds)
  done (took 5.16620445 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.282276861 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262327606 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.263551469 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.26152103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.257572669 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.253776635 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.260268352 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.264455096 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.257061725 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.390897407 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.264291739 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.27534747 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.280225485 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.263513994 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.266706935 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.306391599 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.415208088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.266582097 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.265047409 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.269144686 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.262428878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.374851791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306414216 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.270834329 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.392142987 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.257887267 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.270418923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.27007606 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.392188318 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.268824891 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.263540354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.264430862 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.265159211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.264358847 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.751491856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.274840836 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.272082138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289852765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.268681979 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.426087804 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.264973169 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.270869089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.257731402 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.745987164 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.403353676 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.387785612 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.274564854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283742165 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.267253781 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.331311941 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.266185374 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.266936196 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324979407 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.088754794 seconds)
  done (took 81.642758639 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.267023047 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.259213623 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437937641 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.284615241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259572668 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258803163 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.260716142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558882207 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.28524652 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.258643717 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55030268 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847997784 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.278515797 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.319231238 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.15192335 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.339302374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.26113105 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.276543785 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.262130727 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.263132902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819806532 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.273862615 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.260706024 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.424113009 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.298965089 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788741425 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.261718578 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.280469923 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282021907 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.260251882 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.800196182 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282429201 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.330292046 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.260762884 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.539067529 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650030415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612176094 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.26152454 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.288703383 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.266066851 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.272882113 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771208903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632232913 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261970091 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.261196436 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781148566 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.260079887 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.265025323 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.270994414 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51174573 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.261627676 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.26287057 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.279946493 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.280187017 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.261452077 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.351346489 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.354159631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792227408 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26197197 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.263006381 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.285675739 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.263447771 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.272091979 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262894468 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.281969114 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637017249 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.41409968 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.271284358 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.634640105 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796702428 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.280625463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881002327 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.279893214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.267943149 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.478468711 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266284633 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.268253981 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805981355 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.308082279 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264259432 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614551185 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.26886781 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.562067505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.281691073 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265080415 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83778243 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.271986289 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.276658518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.264869944 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.264664347 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281013588 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288552276 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.548653511 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.2961852 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.264814101 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.264853981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.31197256 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265707281 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264205507 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.27411562 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863032584 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.284481691 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.264653461 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267548653 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.263934877 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.270307871 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.265308284 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.26753879 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533374647 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.266515081 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.286711247 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264397745 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.264727784 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.27733627 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.438578614 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.275123687 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.586884935 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.26923658 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.27514646 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.267312469 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265764103 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319275202 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265936059 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.269994884 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.146782932 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.531976064 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286916901 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.285234596 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267005507 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294227224 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269439385 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.266834428 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.332267858 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.267842089 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078077288 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.29612989 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.302671473 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266555363 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.273159777 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269067423 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.272358461 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267059465 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560541206 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545584567 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.418097295 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.277382191 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.280374435 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04605055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323550053 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448467959 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290717201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2682484 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515918421 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.499083657 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.267533476 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.268031117 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.269189995 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527762047 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.268193529 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.592975919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833776042 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286169772 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276764289 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081243703 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.972287761 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.270669027 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.271729253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.561411652 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.286290695 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.26918651 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.269726186 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.269351212 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284577769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.291312886 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.274108622 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.267702503 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.26930524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.314826154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460628988 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.28874424 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.271240498 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79100359 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291664149 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.271284736 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.272958009 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.274721395 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270881834 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.345862478 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.272836641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.285896589 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.273761538 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.273330993 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808648824 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.27131695 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.2722513 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463654628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989847863 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.289120117 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.271325572 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.289252583 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.192172186 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.818814645 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31762563 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.599409434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.27578515 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.313269871 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273035285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380873333 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817056055 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275643579 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291777223 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951671947 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.28903278 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.777890179 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.272178147 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.272955584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897091416 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.290946841 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.278236271 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274974053 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272185214 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572761945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.271757225 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.321063354 seconds)
  done (took 484.425200538 seconds)
done (took 626.400475607 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.270564482 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.271659659 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.269016125 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276812608 seconds)
  done (took 10.275621162 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.286382177 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.277423931 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.282468947 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.277328727 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.285686542 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.277656867 seconds)
  done (took 8.874646416 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.272299462 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.272182235 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.277431351 seconds)
  done (took 8.009583684 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.485830942 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.297358636 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.614322692 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.294065929 seconds)
  done (took 8.879144838 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.282832485 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.283510611 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281208496 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.284294256 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.286205366 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.286322998 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.285350222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.285990097 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.286083979 seconds)
  done (took 12.746904606 seconds)
done (took 49.97255282 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.264005666 seconds)
    (2/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.327874112 seconds)
    (3/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.446278907 seconds)
    (4/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.264826025 seconds)
    (5/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.379620675 seconds)
    (6/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.626779983 seconds)
    (7/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.367126304 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.349644404 seconds)
    (9/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.486611658 seconds)
    (10/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.327917151 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.498237976 seconds)
    (12/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.267643663 seconds)
    (13/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.387192202 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.418612614 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304896654 seconds)
    (16/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.285376489 seconds)
    (17/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.406605494 seconds)
    (18/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.327649533 seconds)
    (19/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.401989564 seconds)
    (20/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.54377467 seconds)
    (21/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.499159095 seconds)
    (22/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.266014566 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.964651105 seconds)
    (24/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.0392261 seconds)
    (25/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.49605974 seconds)
    (26/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.458210048 seconds)
    (27/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.286072461 seconds)
    (28/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.362497316 seconds)
    (29/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.432201447 seconds)
    (30/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.324113352 seconds)
    (31/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.479900038 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.311554979 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.350565166 seconds)
    (34/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.578630029 seconds)
    (35/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.29254725 seconds)
    (36/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.399305671 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.33713401 seconds)
    (38/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.368573662 seconds)
    (39/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.435292383 seconds)
    (40/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.956108371 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.357863446 seconds)
    (42/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.374954974 seconds)
    (43/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.490329541 seconds)
    (44/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.355806791 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.368983452 seconds)
    (46/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.381959188 seconds)
    (47/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.312060162 seconds)
    (48/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.33397591 seconds)
    (49/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.433978889 seconds)
    (50/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.392222763 seconds)
    (51/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.310541716 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.327821163 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.3839481 seconds)
    (54/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.430339979 seconds)
    (55/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.266649069 seconds)
    (56/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.435645764 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.274465679 seconds)
    (58/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.034201961 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.506669743 seconds)
    (60/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.093089882 seconds)
    (61/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.307073479 seconds)
    (62/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.210899535 seconds)
    (63/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.439761006 seconds)
    (64/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.27426585 seconds)
    (65/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.358045448 seconds)
    (66/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.32822626 seconds)
    (67/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.384283764 seconds)
    (68/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.305169364 seconds)
    (69/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.384844112 seconds)
    (70/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.436355627 seconds)
    (71/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.322415467 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.375200385 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.393089101 seconds)
    (74/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.420891284 seconds)
    (75/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.339410355 seconds)
    (76/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.308436502 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.274302027 seconds)
    (78/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.059891693 seconds)
    (79/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.005319359 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.41168553 seconds)
    (81/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.419890649 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.068882942 seconds)
    (83/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.401575415 seconds)
    (84/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.48131649 seconds)
    (85/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.452182462 seconds)
    (86/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.356267137 seconds)
    (87/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.060484857 seconds)
    (88/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.349703751 seconds)
    (89/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.293325443 seconds)
    (90/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.362461061 seconds)
    (91/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.92958367 seconds)
    (92/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.321151225 seconds)
    (93/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.274886668 seconds)
    (94/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.578332195 seconds)
    (95/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.267243711 seconds)
    (96/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.295791454 seconds)
    (97/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.314058026 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.412502814 seconds)
    (99/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.512183857 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.358228902 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.312021748 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.377456241 seconds)
    (103/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304780642 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.355302387 seconds)
    (105/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.197332683 seconds)
    (106/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.371798184 seconds)
    (107/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.312252181 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.396662968 seconds)
    (109/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.323795651 seconds)
    (110/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.266865669 seconds)
    (111/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.270918869 seconds)
    (112/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.508183781 seconds)
    (113/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.314022164 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.386520813 seconds)
    (115/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.30662327 seconds)
    (116/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.477589758 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.46156809 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.315863973 seconds)
    (119/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.336435857 seconds)
    (120/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.443804116 seconds)
    (121/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.269353747 seconds)
    (122/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.325202863 seconds)
    (123/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.640020934 seconds)
    (124/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336885144 seconds)
    (125/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.269028519 seconds)
    (126/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311880572 seconds)
    (127/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.348385989 seconds)
    (128/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.277344897 seconds)
    (129/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.503865797 seconds)
    (130/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.074480808 seconds)
    (131/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.370912202 seconds)
    (132/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.296687079 seconds)
    (133/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.290380491 seconds)
    (134/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.332124086 seconds)
    (135/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.164683219 seconds)
    (136/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.300767154 seconds)
    (137/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.423402519 seconds)
    (138/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.327211855 seconds)
    (139/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.270440306 seconds)
    (140/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.294784514 seconds)
    (141/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.269747929 seconds)
    (142/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.373034521 seconds)
    (143/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.389416573 seconds)
    (144/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.421628921 seconds)
    (145/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.404259584 seconds)
    (146/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.301707811 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.389718647 seconds)
    (148/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.269570232 seconds)
    (149/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.657514118 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.387181026 seconds)
    (151/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.445838321 seconds)
    (152/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.37344792 seconds)
    (153/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.374155946 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.417076377 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.357336737 seconds)
    (156/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.275886699 seconds)
    (157/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.311641615 seconds)
    (158/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.426044852 seconds)
    (159/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.476196409 seconds)
    (160/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.311692807 seconds)
    (161/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.282897731 seconds)
    (162/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.933115567 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.32723883 seconds)
    (164/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.415079389 seconds)
    (165/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.106173314 seconds)
    (166/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.408965607 seconds)
    (167/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.411532705 seconds)
    (168/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.361538556 seconds)
    (169/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.270409471 seconds)
    (170/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.440282873 seconds)
    (171/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.350411418 seconds)
    (172/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.37815934 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.381611932 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.49139686 seconds)
    (175/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.30077596 seconds)
    (176/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.32797303 seconds)
    (177/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.458877843 seconds)
    (178/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.330151816 seconds)
    (179/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.440384716 seconds)
    (180/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.423689743 seconds)
    (181/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.347339987 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.983653724 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.394479044 seconds)
    (184/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.445866296 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.312803135 seconds)
    (186/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.431749784 seconds)
    (187/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.310212285 seconds)
    (188/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.448118973 seconds)
    (189/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.183970661 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.399798915 seconds)
    (191/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.269113233 seconds)
    (192/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.979078005 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.026695182 seconds)
    (194/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.339007325 seconds)
    (195/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.437812035 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.388902701 seconds)
    (197/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.967355976 seconds)
    (198/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.937391784 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.390432478 seconds)
    (200/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.308378573 seconds)
    (201/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.307581441 seconds)
    (202/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.434071415 seconds)
    (203/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.408002554 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.063700681 seconds)
    (205/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.080077622 seconds)
    (206/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.334275657 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.371781265 seconds)
    (208/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.313977757 seconds)
    (209/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.479003192 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.51824562 seconds)
    (211/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.478127078 seconds)
    (212/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.322047435 seconds)
    (213/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.92936097 seconds)
    (214/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.308814397 seconds)
    (215/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.388435368 seconds)
    (216/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.018409885 seconds)
    (217/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.289730263 seconds)
    (218/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.487156101 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.435133208 seconds)
    (220/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.472320234 seconds)
    (221/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.336262035 seconds)
    (222/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.364343548 seconds)
    (223/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.311936611 seconds)
    (224/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.28594985 seconds)
  done (took 360.227392504 seconds)
done (took 361.416223491 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33203119 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.466115423 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285857892 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285898337 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327476249 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.276699749 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.327767711 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.293589995 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.294882719 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.294021358 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.278984196 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.310862394 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.297047741 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.322285373 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398240851 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292658436 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.282634716 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.291065249 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.332285622 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.350452496 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.327810646 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328427186 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.303005075 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.283277599 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.331238136 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332445893 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.290487973 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283042096 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.294743744 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.330991228 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277140128 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.296907398 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.341138223 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.339869833 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327665068 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.289888601 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327387657 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.467110566 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.327823316 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.322482829 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.294916684 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340238958 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295673668 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.296481181 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.339456124 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.303574104 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331725931 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.40769962 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285700201 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.289228839 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337080574 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.350867498 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.296611421 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.284537215 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.288828043 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.412294228 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.290416174 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333640702 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.293734819 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328261627 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.398631863 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332604321 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350577869 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332110503 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.293286156 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.298982434 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.290925263 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353149817 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.292731036 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329774902 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329261995 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.294713892 seconds)
done (took 104.258299383 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405844481 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.284334098 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.423276654 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.289394844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444239927 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.426901943 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.288580513 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.28831778 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.288290687 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.083899605 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288358959 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.287470129 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.286022623 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.289347037 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.409452463 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.288906657 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288621995 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.976572728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.288897487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.423051474 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.282460747 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.288982825 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.316621495 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.076372729 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.284838112 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.280847241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423228055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.288122915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.974047518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.279851828 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.283082647 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.975548629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.425360903 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.308761541 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.298335716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.297343119 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444935428 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.306508463 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.406879704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.407116228 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.423921054 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.328102484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.28033947 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.28448635 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.28972299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.290432944 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.289405046 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.319003163 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.286195099 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28938607 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.98041651 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.300823534 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300067704 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291857094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.291157814 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.310328506 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.291108188 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.292806235 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.426274544 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.291199837 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410670406 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.078190229 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.078044455 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.29197353 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.284452205 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.29189407 seconds)
  done (took 105.18678503 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.354519904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.362712582 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.396075507 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.303869022 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.337150868 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.399554145 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.303409158 seconds)
  done (took 10.650983652 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.293751093 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.292339201 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336798861 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.338309667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.29200315 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.443971746 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.292318086 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.299481288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.292572194 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.339673001 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.293858929 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.293315657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.301291587 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.287683415 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.33563183 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.299782514 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.402581174 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.290396733 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.29366883 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.438191374 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291623352 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.302194212 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.339899248 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.299412905 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.294933678 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.294693097 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.056965954 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.292699891 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294029345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.292330662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293724323 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.342203071 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.293600986 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.289531153 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293833486 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405585116 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.293298362 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293427906 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.294782807 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.292012354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.293630702 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.294900481 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.295110091 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.293465925 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.293777261 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.315497212 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.293716884 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.292488776 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.293714871 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.295973268 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.339448525 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.293917839 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.29430485 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.294861293 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.345934024 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305535115 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.295491479 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.295074648 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.295400629 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.294530631 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.443056215 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341112965 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.295661056 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338871657 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295441686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.296215935 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.295477921 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.296925201 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383617625 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.295489485 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340223143 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.29492829 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.472266712 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.317053573 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.296695542 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.294272169 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.295072554 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295739108 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.288208919 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.29806665 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.297834258 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.29317032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.297989411 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.297191551 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296293918 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.450517001 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400821531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.296407505 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.304848234 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.299855639 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.296881017 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.345479021 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29696894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.297328855 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344023139 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.40795728 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.346164763 seconds)
  done (took 133.568545641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.306373231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.305138481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.295961069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.320402729 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.294370787 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.292304549 seconds)
  done (took 9.013158309 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.293598241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.303234244 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.298604332 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.298276077 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.297609775 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.298328742 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.297498781 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293875259 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.300526355 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.29840095 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.297969615 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.30018043 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.300232064 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.297793607 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.298545799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.297876367 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.299251354 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.297724621 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.297824652 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298361411 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.293784092 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.298914776 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298865135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.296824722 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.302849409 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.299527743 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.315030138 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.298684604 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.298830996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.301470036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.318109614 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.302625984 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.295150219 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.300636744 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.303859691 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.296320362 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302680083 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.301887498 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.300826828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.301676508 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.302864908 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301019266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.30090194 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303414636 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.298469338 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.300482296 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.30653305 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.316161628 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.300272287 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.302798429 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.302859346 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.301832257 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.301629287 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.302765563 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.300201066 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316205271 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.304816024 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.30170834 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.300743955 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.29754814 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.304605539 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.302043258 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.298565132 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.305204535 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.301095304 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.304379485 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.296882632 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304172291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301524839 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.302655703 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.304152022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.30096142 seconds)
  done (took 95.886907253 seconds)
done (took 355.497196744 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.150417546 seconds)
  done (took 4.35243557 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.300946996 seconds)
  done (took 3.507132009 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.75731065 seconds)
  done (took 21.963685732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.310483554 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.295638664 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.334395915 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.292623509 seconds)
  done (took 10.435960139 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.536912135 seconds)
  done (took 3.739859002 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.304433196 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.298455768 seconds)
  done (took 5.810361852 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.481857002 seconds)
  done (took 3.686572318 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.774251551 seconds)
  done (took 3.980052423 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.325290192 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.313349992 seconds)
  done (took 5.850573526 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.288763901 seconds)
  done (took 3.494378035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.369817755 seconds)
  done (took 37.57579959 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.302200775 seconds)
  done (took 3.51081295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.339131623 seconds)
  done (took 3.544793828 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.708908219 seconds)
  done (took 5.913883576 seconds)
done (took 118.570244838 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.29330781 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.293839641 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.29486652 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.294083063 seconds)
  done (took 10.380846585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.355120231 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.355339462 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.357018945 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.357013604 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.356242784 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.356418538 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.330261952 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.3312468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.356219808 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.356080754 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355504984 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.355532986 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.356439362 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.331378135 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.356699319 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.357355497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.356530082 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.359158181 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.330174325 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.357919492 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.307779745 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356469966 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357336508 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.306453413 seconds)
  done (took 33.562888729 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.816819632 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.370255058 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.454163246 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.355776509 seconds)
  done (took 7.203991211 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.383241789 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.382988669 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.395466204 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.434695714 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.447466342 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.395993391 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.332101984 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.327260842 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.313517786 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.384125252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.436125542 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.374745793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.461798036 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.309575687 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.513132875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.306934964 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.307103701 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.382155845 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435368376 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.43579343 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.306050076 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.383851457 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.384339388 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.376310196 seconds)
  done (took 34.418726161 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.315836942 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.323265782 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.308172595 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.323566451 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.308537893 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.308658909 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.310301196 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.315796632 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.308420637 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.308251296 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.310092944 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322215808 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.312501097 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.310091324 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.316188782 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.311204412 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.316663641 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.313333848 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.308521609 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.316104004 seconds)
  done (took 27.476834688 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.297996657 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.297728769 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.650122621 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.555015647 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.298107458 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.298940073 seconds)
  done (took 13.607157564 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.368545524 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.516255678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.302836143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.633962264 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.721293705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.304746889 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.305584169 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.539254468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836132377 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.80982509 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.363143649 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370803383 seconds)
  done (took 19.281317469 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.303542795 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.305055794 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.30668202 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.318640317 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.354158309 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.323035029 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.310666188 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.299053669 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.359642243 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.373236694 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324860099 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.355013568 seconds)
  done (took 21.146163813 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398511776 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30576231 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308797473 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32404254 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309194591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146936197 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305319014 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996823907 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.328870299 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580576812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305365822 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415549174 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.559661298 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313137078 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309307354 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.255217446 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540562486 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767784572 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308382352 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306233496 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343855129 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314403139 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306308499 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.530157308 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324923134 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307187944 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.570051353 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306651408 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576359489 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325190185 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316544954 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308135083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584246312 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94310314 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424827921 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508070001 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335785535 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314806247 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.311349864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.308769076 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330444498 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314920418 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317031385 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309008166 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308730119 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316434161 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002751283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333597202 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.306753478 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308859978 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552040878 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41124403 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.314293009 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309793887 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358776562 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308534827 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.314054089 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436203559 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910361726 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308826579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323402578 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.308227109 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307101511 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316253746 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898951572 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.33322938 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.31589965 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315116583 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309962746 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309325682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332745359 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310370592 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.33453417 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311001486 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985139193 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334142526 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313991276 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839535817 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315805332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.305575543 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536173558 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297185929 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297950626 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.297511272 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298356483 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963544043 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296893595 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.292352194 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.33538698 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999965839 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.517687984 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325170864 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316553986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.507911343 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.271537531 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286688794 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.298981717 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286247801 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301525063 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.974640105 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29844725 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.287779869 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530971867 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.485420538 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2843753 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.230972527 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737211117 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304109236 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.289072291 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281826175 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.472970324 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.847087157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307594283 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273609932 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298854897 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274188226 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974466499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286656117 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374975472 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271842812 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548620618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.02587658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275553288 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341875863 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278299727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275364015 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273903669 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282036716 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276016234 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.469070892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303650765 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.284085566 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.274579208 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276416264 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.275444208 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280420953 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.281498026 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.497537929 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287942322 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551886476 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275329555 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276501836 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278792206 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.496577017 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.276725179 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.637581294 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53833063 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289469168 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.287896573 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286678566 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295300674 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379683547 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298320039 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.288008941 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53050987 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.282299793 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.282768491 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277610417 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282551664 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283355838 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.284024083 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273480826 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837012657 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273528015 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284619915 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163831108 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.293834657 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345605904 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285586407 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481494489 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.295932665 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292722017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.289536739 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.280337494 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501682172 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287158078 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.278416553 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362391405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.734414544 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.852582518 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313930822 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.279414521 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.278805009 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.278606814 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278831599 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278105549 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27961586 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481737829 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309878249 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281456392 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.842557849 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301721318 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280804432 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.290836867 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290985481 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.286189238 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280487844 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.280234563 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282576655 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299491206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.289493479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424450777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.296729353 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281756359 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.798865965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288204668 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281067861 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279685692 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314388995 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28114567 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074176645 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559951687 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283347123 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529380126 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286256137 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.302389366 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.280326182 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280544977 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319879098 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.286287674 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307555089 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.289423536 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281141465 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287587729 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858183205 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973581956 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795587588 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313600354 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.282723403 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298458338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981297237 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30027507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281830123 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508285105 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996030127 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300002755 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743294623 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.301946914 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025678418 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528213744 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519170766 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291263426 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.283837915 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550862386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498935167 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317274665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283135203 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299926021 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.270202885 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820556291 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31159492 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370632186 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983151424 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302332021 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305636494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.329240391 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291196434 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673036498 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300411988 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28278813 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283262235 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.286287504 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074661619 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308252403 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283424155 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887353138 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310715978 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.74135958 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302271805 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.488435377 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.311414847 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.287074642 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.28385257 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.30896472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.539309075 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530216704 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289905068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294235857 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797579557 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.171768272 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.292454249 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283564738 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985660609 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28730653 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560572421 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.291189256 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.305826203 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291251013 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286880268 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28508014 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.285395569 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.294644154 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259046059 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750016227 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.294709577 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287195883 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287394777 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288103465 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539379321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.30051983 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842842214 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532664788 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285016611 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32534889 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.29160651 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286512478 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.276717971 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286789457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287025651 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318130567 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.507835529 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287769821 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.292146947 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356977086 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514798758 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.286212975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292455888 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522145193 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.30515282 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.29924463 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998262968 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33898015 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291830583 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288835254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284379518 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342260009 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374997817 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494508701 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.315661419 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.297423662 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676231257 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314298814 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29046698 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.303628191 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383862138 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291639843 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.299114613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.063541037 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854275063 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00555499 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860778679 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553501384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296497016 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299079642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28878602 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449013729 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288921019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56398731 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290262313 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.298913992 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311981297 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320965972 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291812542 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498901751 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56756514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290124882 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290108327 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290858901 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.289327308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299720866 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.497945275 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754753678 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818320978 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291868101 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290517894 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.989529986 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583928821 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289796451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29055136 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290365321 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.304948177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324684958 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.299017074 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304664575 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439055719 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53736497 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939337899 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.317695994 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.32135306 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.810187755 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292771177 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.547959251 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290685384 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517928411 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876338132 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982088405 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555901047 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361543793 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498489627 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.310224125 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453152835 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.296713285 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295772368 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293003788 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293399325 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.292697088 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.301597787 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862135429 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571862068 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.297090198 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.292512307 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326340856 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.302207943 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513574179 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973190006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514988771 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301858569 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299562951 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.293247326 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862838402 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55690759 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299832778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.298866395 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523356591 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311481434 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317885524 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.812467943 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.293099623 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830678253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.264803365 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315034376 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293755074 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970348934 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866703271 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.322789125 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767042697 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296568191 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307641852 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57305601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.300304789 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29364865 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576195666 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.300250846 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294225923 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507460302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.87476608 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053031456 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.312621956 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324449381 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.303036062 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295899064 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313597459 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295514022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297627934 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.698245711 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314286756 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296279958 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310076665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.29654635 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300785569 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.301639466 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295995595 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.303805644 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.29299774 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.28825254 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304085253 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425818544 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842343563 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317163391 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.975880438 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.62079865 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549839051 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296821184 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.289945493 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.301235283 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299218575 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297356456 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298261151 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308533717 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829355386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.300117525 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.310103008 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301602034 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.298410151 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506964917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307418339 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510595034 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318261246 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317361377 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.284151857 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298641524 seconds)
  done (took 935.018483241 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.326092901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.302047533 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.298612579 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.316793923 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.309168281 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.293698623 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.373580068 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.309630392 seconds)
  done (took 19.735438364 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.305141293 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.307007533 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.304058445 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.306747121 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.301265906 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.748700644 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.319604278 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.306670718 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.31926426 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.302382594 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.310875683 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.286486866 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.306364151 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.301841149 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.297324717 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.305809741 seconds)
  done (took 31.535794751 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.214707174 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.415445706 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.090731558 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.308607144 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.319318803 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.296686988 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.497877424 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.320165825 seconds)
  done (took 25.670530678 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.30501475 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.305352218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.305355594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.305624926 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.306434147 seconds)
  done (took 7.734606463 seconds)
done (took 1187.978578693 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.305626707 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.30533449 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.30551386 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.304667489 seconds)
  done (took 6.428185508 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.28669082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.289112304 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.2898952 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.300942758 seconds)
  done (took 9.373243644 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.964579745 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.877653716 seconds)
  done (took 5.050500441 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.78099259 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.789212412 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.778613265 seconds)
  done (took 6.555951081 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.583581032 seconds)
  done (took 2.790679402 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.197923491 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.293643212 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.967604711 seconds)
  done (took 7.668367874 seconds)
done (took 39.07483941 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.298549162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.54945601 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.465331526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.303434868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.459551326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.507773888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.032570233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.29771228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.303222724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.309771295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.306052944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.458671106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.083407802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.548750345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.08181365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.547998987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.459507448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.29920934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.300927662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.299638748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.033424567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.308449582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.300059757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.310075777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.461953191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.447696137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.29897137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.563398154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.304720639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.30473014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.452989864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.308078272 seconds)
  done (took 80.217999112 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.297649367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.298176094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.302740398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.304215638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.2981294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.306195292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.299301027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.299008391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.29853777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.2991574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.303701416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.29916263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.316372104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.313352034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.300423334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.300561302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.317854284 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.312611396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.304281499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320639657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.306173269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.302967265 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.320378513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.306696464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.314759914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.315243768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.301549752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.302367272 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.301739031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.302207316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.306611486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.329062608 seconds)
  done (took 75.014164892 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.29938194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.300274206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.317536451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.301501908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.323577196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.30378231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.304851689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.301094566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.304089648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.302429498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.301244747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.323637043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.300886846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.301488405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.302238824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.306095848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.310033764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.315158777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.305793047 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.316370885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.301288055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.30716214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.302773692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.31538953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.306224985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.307120442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.302827805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.325177884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.304874303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.302738379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.306190014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307107417 seconds)
  done (took 75.044382047 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.586790523 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.312733732 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.31640435 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.307851426 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.31560948 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.312593546 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.30742397 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.590504284 seconds)
  done (took 14.264707128 seconds)
done (took 245.749415353 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.307592851 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.810151623 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.352886779 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.307919602 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.346647698 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.335068627 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.522984286 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.347510206 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.523401252 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.335594804 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.329099303 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.308616682 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.081791148 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.456597024 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.135918384 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.255527608 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.158955811 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.304006302 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.857631326 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.584074095 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.3364744 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.303349079 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.136284271 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.185105941 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.300146613 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.390742618 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.403961997 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.528458846 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.468001294 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.385893373 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.803127077 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.314466544 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.31035273 seconds)
  done (took 61.743214255 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.31062308 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.439398808 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.316058117 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.315284019 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.441168996 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.335589685 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.310535266 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.315721645 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.316503872 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.315661319 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.316034721 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.317414777 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.319083094 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.372547957 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.448654786 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.329457111 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.310464957 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.43426676 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.312602532 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.310741372 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.365458626 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.317213546 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.318359933 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.367451164 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.316898764 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.317613253 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.436572381 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.338398156 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.318972862 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.438416116 seconds)
  done (took 41.640067415 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.317693718 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.884410301 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.038520363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.324650291 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.314223592 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.318019025 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.58672857 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.322275048 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.316247177 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.317100049 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.798426385 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.339974927 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.350257097 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.061337375 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.316888391 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.319065129 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.319674017 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.315453113 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.894863042 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.328948267 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.605226344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.323341458 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.58798477 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.330061792 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.336537699 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.316909558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.320180416 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.135075682 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.339267424 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.796920136 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.068806445 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.588433922 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.072867762 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.067925717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.053668972 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.325785226 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.320567329 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.801841188 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.333471227 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.317178032 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.589417456 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.320796657 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.048469735 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.001329564 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.334026286 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.320111664 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.146367956 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.816449819 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.563336082 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.326322348 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.069699452 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.324262078 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.321921435 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.319369393 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.549127915 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.323348826 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.318446626 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.152717208 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.341872201 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.590207004 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.325218075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.318426425 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887628773 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.321713397 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.894359549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.323799771 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.325628613 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.337655677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.04907677 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.323651948 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.017212467 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.339795466 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.322633932 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.798475811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.909926838 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.214384838 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.325403457 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.894773249 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.109283896 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.609905543 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.326195285 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.108190255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.612353588 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.325698752 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.325721949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.325520939 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.323426073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.399858254 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.587867279 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.968026191 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.008877096 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.174555899 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.613234458 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.329804728 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.320507908 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.154981449 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.343533764 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.325073192 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.04797899 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018234417 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.34064498 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.327695644 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.022409917 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.343011904 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.595984684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.328508188 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.056101472 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.325454038 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.402080104 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.324715229 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.327726101 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.343219635 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.596234502 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.327584797 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.325507156 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.99624873 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.837098559 seconds)
  done (took 185.937269956 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.331649294 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.315080007 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.327578371 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.315356745 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.315782601 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.323202993 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.31564578 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.316183246 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.319953934 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.316062516 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.317180247 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.324256563 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.32195551 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.316719389 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.317970412 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.317118291 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.316646079 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.321232096 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.317720979 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.317335157 seconds)
  done (took 43.610032404 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.326166478 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.855324933 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.842446643 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.329506776 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.327257665 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.323369066 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.376346867 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.342857041 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.326681329 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.610111387 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.490891 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.350424299 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.327492351 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.327779104 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.826676486 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.321499284 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.609109354 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.863682285 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.332274366 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.854211675 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.317364187 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.326336021 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.321440934 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.862481816 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.635920647 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.597464903 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.381386705 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.875167083 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.34437086 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.328607758 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.85703489 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.328764447 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.324742917 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.857226558 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.343936652 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.341414797 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.329071478 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.380223283 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.395312449 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.626170531 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939644101 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.619634632 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.339613815 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.517666221 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.330640142 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.318706893 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.866250365 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.345484862 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.320122624 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.33001238 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.33508664 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.842442379 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.341255395 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.841858446 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.346129365 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.328419511 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.860458648 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.842310166 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.852674611 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.488722343 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.34468025 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.599264885 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.330656527 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.86714677 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.345821904 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.329679658 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.330784349 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.491435834 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.881017743 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.599357331 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.613027402 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.614031759 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.331515961 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.386812333 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.347675596 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.683154047 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.385016053 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.765528609 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.618954869 seconds)
  done (took 120.841040624 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.585473636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.438637666 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.71708115 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.927940685 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.329749263 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.458492736 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.434939251 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.575801145 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.330159851 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.421186604 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.941505516 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.445544548 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.105304476 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.413640424 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.44311082 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.467851901 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.724331539 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.29713338 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.036537988 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.925775067 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.33214962 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.455761583 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.891367825 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.533645999 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.327069451 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.89131264 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.26383291 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.977711024 seconds)
  done (took 51.925971064 seconds)
done (took 506.9123883 seconds)
SAVING RESULT...
DONE!
